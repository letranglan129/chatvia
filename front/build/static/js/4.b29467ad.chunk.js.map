{"version":3,"sources":["../node_modules/cloudinary/lib/utils sync","indexDB/index.js","components/HomeComponent/SearchResult/NotFound.js","components/HomeComponent/SearchResult/UserResult.js","components/HomeComponent/SearchResult/SearchResultUser.js","components/HomeComponent/TitleTab/index.js","components/HomeComponent/Avatar/index.js","components/ChatHover/index.js","components/HomeComponent/ChatTab/ChatItem.js","components/HomeComponent/ChatTab/ChatItemList.js","components/HomeComponent/UserStatusBox/index.js","components/HomeComponent/ChatTab/ChatSlider.js","components/HomeComponent/ChatTab/index.js","components/CollapseComponent/CollapseListItem.js","components/CollapseComponent/context/index.js","components/CollapseComponent/CollapseContent.js","components/CollapseComponent/HeaderCollapse.js","components/CollapseComponent/Wrap.js","components/HomeComponent/File/index.js","components/ConversationInfo/components/Control/Control.js","components/ConversationInfo/components/ImageVideo/index.js","components/ConversationInfo/components/Info/index.js","components/ConversationInfo/components/LinkPreview/index.js","components/ConversationInfo/path/Home.js","components/HomeComponent/ContactTab/Option.js","components/HomeComponent/ContactTab/DropdownUserContact.js","components/ConversationInfo/path/Members.js","components/ConversationInfo/path/Images.js","components/ConversationInfo/path/Files.js","components/ConversationInfo/path/Links.js","components/ConversationInfo/context/context.js","components/ConversationInfo/components/Header/index.js","components/ConversationInfo/components/Content/index.js","components/ConversationInfo/index.js","components/HomeComponent/ImageMessage/SlideImage.js","components/HomeComponent/ImageMessage/ThumbGallery.js","components/HomeComponent/ImageMessage/ImageDialog.js","components/HomeComponent/Message/ForwardCheckedItem.js","components/HomeComponent/Message/ForwardChecked.js","components/ListFriendChooses/index.js","components/HomeComponent/ImageMessage/Image.js","components/HomeComponent/ImageMessage/ImageGroup.js","components/HomeComponent/Message/TypeMessage.js","components/HomeComponent/Message/ForwardDialog.js","components/HomeComponent/Message/ChatOption.js","components/HomeComponent/Message/Emoji.js","components/HomeComponent/Message/ForwardButton.js","components/HomeComponent/Message/index.js","components/HomeComponent/ChatView/ContentMessage.js","components/HomeComponent/ChatView/DialogCall.js","components/HomeComponent/ChatView/Header.js","services/cloudinary.js","components/Button/ButtonCircle.js","components/Button/ButtonFile.js","components/HomeComponent/ChatView/EmojiPicker.js","components/HomeComponent/ChatView/InputMessage.js","components/HomeComponent/ChatView/index.js","components/HomeComponent/ChatWelcome/index.js","components/HomeComponent/ContactTab/List.js","components/HomeComponent/ContactTab/index.js","components/HomeComponent/GroupTab/GroupItem.js","components/HomeComponent/GroupTab/GroupItemList.js","components/HomeComponent/GroupTab/index.js","components/Tab/index.js","components/HomeComponent/GroupTab/DialogCreateGroup.js","components/HomeComponent/NotifyTab/NotifyItem.js","components/HomeComponent/NotifyTab/index.js","components/HomeComponent/ProfileTab/Update.js","components/HomeComponent/ProfileTab/index.js","components/HomeComponent/AvatarStatusLg/index.js","components/HomeComponent/SettingTab/Help.js","components/HomeComponent/SettingTab/LanguageData.js","components/HomeComponent/SettingTab/Language.js","components/HomeComponent/SettingTab/Privacy.js","components/HomeComponent/SettingTab/Security.js","components/HomeComponent/SettingTab/index.js","components/HomeComponent/Sidebar/DotNotify.js","components/HomeComponent/Sidebar/SidebarData.js","components/HomeComponent/Sidebar/index.js","components/HomeComponent/index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","createDB","nameDB","nameTable","openDB","upgrade","db","createObjectStore","get","key","set","val","put","add","del","delete","clear","getAll","NotFound","className","src","alt","User","friend","useSelector","state","auth","currentUser","user","dispatch","useDispatch","axios","createAxios","useState","setState","useEffect","type","_id","friends","includes","senderId","receiverId","openChat","post","friendId","conversation","updateToggleMess","toggleMess","data","changeCurrentChat","removeAllMessage","STORE_NAME_INDEXEDDB","length","pushMessage","messages","forEach","message","conversationId","avatar","DEFAULT_IMG","AVATAR","name","REVOKE","Button","onClick","socket","emit","response","status","STATUS_RESPONSE","success","toast","title","circle","primary","xmlns","style","fill","viewBox","d","ACCEPT","sender","receiver","color","SEND","OPEN_CHAT","SearchResultUser","results","users","Array","isArray","height","flex","map","element","index","UserResult","TitleTab","children","memo","Avatar","ref","isNoDot","props","theme","onlines","online","list","isOnline","setIsOnline","onError","target","colorTheme","forwardRef","ChatHover","ChatItem","isUnread","setIsUnread","viewMessage","newMessageNotify","notify","moment","locale","removeNewsMessageNotify","userId","res","console","log","updatedAt","fromNow","parse","lastMessage","text","ChatItemList","keyword","activeConversation","setActiveConversation","result","setResult","filter","item","toUpperCase","sort","a","b","Date","activeState","UserStatusBox","split","pop","ChatSlider","selector","slidesPerView","spaceBetween","freeMode","allowTouchMove","containerClass","ChatTab","setResultSearch","searchResultDialog","searchKey","setSearchKey","onSubmit","isHidden","Search","placeholder","CollapseListItem","content","undefined","CollapseContext","createContext","CollapseProvider","showAll","openDefault","useCollapse","value","open","setOpen","isShowAll","Provider","useCollapseStore","useContext","CollapseContent","gridTemplateRows","HeaderCollapse","contentFor","handleClick","useCallback","hidden","onChange","Collapse","renderType","Object","FILE_TYPE","i","File","size","link","disableShareButton","disableDeleteButton","disableDownloadButton","image","video","sheet","presentation","audio","zip","calcSize","download","href","rel","Control","ImageVideo","isHover","setIsHover","popperElememt","setPopperElement","referenceElement","setReferenceElement","usePopper","placement","modifiers","options","fallbackPlacements","styles","attributes","onMouseEnter","onMouseLeave","popper","Info","LinkPreview","url","media","CollapseItem","icon","Home","currentChat","images","setImages","files","setFiles","links","setLinks","useConversationInfo","pushPath","routes","history","JSON","stringify","imageMessages","createdAt","reduce","acc","msg","push","imageGroup","fileMessages","file","linkMessages","match","URI_REG","slice","Math","min","LIMIT_IMAGE_SHOW","LIMIT_FILE_SHOW","LIMIT_LINK_SHOW","members","small","random","Option","openDropdownListContact","addFriendInfo","getType","toggleDropdown","handleClickOutside","onOutsideClick","DropdownUserContact","admin","Members","resultSearch","search","setSearch","setMembers","getMembers","toLowerCase","handleChangeSearch","member","own","Images","date","toLocaleDateString","entries","imageList","dateParts","day","month","year","toggleSwiperImage","isShow","activeIndex","listImg","Files","Links","ConversationInfoContext","path","component","ConversationInfoProvider","setHistory","shiftPath","prev","find","route","Header","Content","useRef","Component","current","recalculate","ConversationInfo","toogleConversationInfo","SlideImage","img","nodeRef","swiper","zoomIn","SWIPER_THEME","zoomOut","reset","rotate","disabled","isDraggable","onWheel","wheelZoom","deltaY","wheelZoomDispatch","transform","swiperImage","zoom","cursor","transition","draggable","ERROR_IMAGE","ThumbGallery","swiperImageDialog","setSwiper","imgActive","setImgActive","thumbSwiper","navigation","nextEl","prevEl","slideToClickedSlide","speed","mousewheel","initialSlide","centeredSlides","breakpoints","direction","resetDispatch","getImageActive","slideActive","slides","querySelector","window","innerWidth","onSlideChange","onScroll","onSwiper","SwiperCore","use","Navigation","Mousewheel","ImageDialog","closeModal","Dialog","isOpen","onRequestClose","fontSize","ForwardCheckedItem","ForwardChecked","onChoose","ListFriendChooses","chooses","handleChoose","friendList","hasTransition","useMountTransition","checked","findIndex","Image","ImageGroup","widthImg","heightImg","classLayout","clickHandle","indexOf","listItem","maxWidth","maxHeight","MessageText","disableLink","contentEditable","textState","URL_REG","setText","debounceText","useDebounce","editor","scrollIntoView","block","focus","getSelection","selectAllChildren","collapseToEnd","onInput","currentTarget","innerHTML","suppressContentEditableWarning","TypeMessage","messInfo","isTiny","ForwardDialog","setChooses","isEdit","setIsEdit","forwardDialog","forward","textMessage","setTextMessage","handleClose","toggleForward","handleForward","roomId","isExist","ChatOption","idMessage","referenceEl","setReferenceEl","popperEl","setPopperEl","allowedAutoPlacements","removeMessageById","updateLastestMessage","Emoji","handleIncreaseEmoji","MESSAGE_ICON","ForwardButton","forwardMessage","time","Message","hover","setHover","emoji","setEmoji","formatTime","format","newEmojiList","propertyEmoji","cur","room","onTouchStart","onTouchCancel","onTouchEnd","creator","width","CONVERSATION_TYPE","personal","values","Loading","ContentMessage","array","messageCurrent","isHasMore","getTime","groupByCreatedAt","group","previous","timeDiff","abs","floor","on","updateMessageById","backgroundImage","CONVERSATION_BG","LIGHT","DARK","dataLength","next","loadMoreMessage","display","flexDirection","inverse","hasMore","loader","scrollableTarget","_","clone","DialogCall","call","callDialog","toggleCall","background","handleReturn","handleCallAudioClick","handleCallVideoClick","handleEllipsisClick","cloudinary","config","cloud_name","process","api_key","api_secret","deleteImage","public_id","v2","uploader","destroy","error","then","resp","catch","_err","uploadFile","formData","FormData","append","ButtonCircle","clickFunc","ButtonFile","htmlFor","multiple","EmojiPicker","el","callback","every","contains","document","addEventListener","removeEventListener","useDetectOutsideClick","onEmojiClick","disableSearchBar","native","InputMessage","setLoadingMessages","editMess","sendBtn","chosenEmoji","setChosenEmoji","event","emojiObject","setAttribute","handleChangeImage","listImage","secure_url","handleChangeFile","original_filename","bytes","getResourceType","overflow","minHeight","lineHeight","innerRef","html","onKeyPress","which","shiftKey","preventDefault","click","accept","trim","ChatView","conversationInfoDialog","loadingMessage","setLoadingFileMessages","conversationInfo","ChatWelcome","WELCOME_SWIPER","desc","params","autoplay","delay","disableOnInteraction","loop","renderPrevButton","renderNextButton","pagination","clickable","modules","Pagination","Autoplay","List","simpleBar","scrollableNodeProps","ContactTab","toggleSearchResult","query","GroupItem","GroupItemList","conversations","GroupTab","toggleCreateGroup","leftIcon","active","label","headerItemClassName","Tabs","containerClassName","contentClassName","headerClassName","lineRef","activeTab","setActiveTab","left","offsetLeft","offsetWidth","lineStyle","setLineStyle","child","alwayShow","DialogCreateGroup","createGroupDialog","avatarGroup","setAvatarGroup","setName","previewURL","previewAvatarGroup","setPreviewAvatarGroup","loading","setLoading","listPreviewUpload","setListPreviewUpload","isOpenAvatarDialog","setIsOpenAvatarDialog","avatarGroupData","AVATAR_GROUP_JSON","toggleDialog","imageFile","linkAvatar","URL","createObjectURL","isUpload","handleChooseAvatarPreview","closeChooseAvatarDialog","handleConfirmCreateGroup","hasOwnProperty","imageUpload","debounce","elemenet","imgs","revokeObjectURL","NotifyItem","isReaded","NotifyTab","notifyList","readedNotify","STATUS_NOTIFY","sent","Update","axiosInstance","createInstance","dispacth","setImageFile","showImageRef","handleUpdateInfo","resUploadImage","avatarSplit","avatarName","updateInfo","contentLabel","overlayClassName","readOnly","Modal","setAppElement","ProfileTab","isOpenModal","setIsOpenModal","AvatarStatusLg","Help","LanguageData","Language","language","setLanguage","Privacy","Security","SettingTab","logout","DotNotify","count","optionSidebar","Sidebar","tab","setTab","LOGO","SVG","to","newTheme","updateTheme","isLoading","NAME_NEW_MESSAGE_INDEXEDDB","STORE_NEW_MESSAGE_INDEXEDDB","getLastMessage","getConversations","sortConsersation","addNewMessageNotify","removeListener","getConversation","updateLoadingStatus","pushNotify","getListFriend","getFriendList","conversationUnread","messageUnread","Set","setOnline","removeLastMessage","removeFriendId","removeFriend","err","replaceConversation","deleteConversation","chat","profile","contact","setting","portalClassName"],"mappings":"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","file":"static/js/4.b29467ad.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 881;","import { openDB } from 'idb'\r\n\r\nconst createDB = (nameDB, nameTable) => {\r\n\treturn openDB(nameDB, 1, {\r\n\t\tupgrade(db) {\r\n\t\t\tdb.createObjectStore(nameTable)\r\n\t\t},\r\n\t})\r\n}\r\n\r\nexport async function get(key, nameDB, nameTable) {\r\n\treturn (await createDB(nameDB, nameTable)).get(nameTable, key)\r\n}\r\nexport async function set(key, val, nameDB, nameTable) {\r\n\treturn (await createDB(nameDB, nameTable)).put(nameTable, val, key)\r\n}\r\nexport async function add(key, val, nameDB, nameTable) {\r\n\treturn (await createDB(nameDB, nameTable)).add(nameTable, val, key)\r\n}\r\nexport async function del(key, nameDB, nameTable) {\r\n\treturn (await createDB(nameDB, nameTable)).delete(nameTable, key)\r\n}\r\nexport async function clear(nameDB, nameTable) {\r\n\treturn (await createDB(nameDB, nameTable)).clear(nameTable)\r\n}\r\nexport async function getAll(nameDB, nameTable) {\r\n\treturn (await createDB(nameDB, nameTable)).getAll(nameTable)\r\n}\r\n","function NotFound() {\r\n\treturn (\r\n\t\t<div className='text-center'>\r\n\t\t\t<img src='https://static.xx.fbcdn.net/rsrc.php/yT/r/SdDlDolvLZ5.svg' className='max-h-40 mx-auto mb-4' alt='' />\r\n\t\t\t<h2 className='text-xl font-semibold dark:text-gray-300'>Chúng tôi không tìm thấy kết quả nào</h2>\r\n\t\t\t<p className='dark:text-gray-300 text-sm'>Đảm bảo tất cả các từ đều đúng chính tả hoặc thử từ khóa khác.</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default NotFound\r\n","import { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { DEFAULT_IMG } from '../../../assets/image'\r\nimport { STATUS_RESPONSE, STORE_NAME_INDEXEDDB } from '../../../constant'\r\nimport { add, getAll } from '../../../indexDB'\r\nimport { changeCurrentChat } from '../../../redux/slice/currentChatSlice'\r\nimport {\r\n    pushMessage,\r\n    removeAllMessage,\r\n} from '../../../redux/slice/messageSlice'\r\nimport { updateToggleMess } from '../../../redux/slice/viewMessageSlice'\r\nimport { socket } from '../../../socket'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport Button from '../../Button'\r\n\r\nfunction User({ friend, className }) {\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const dispatch = useDispatch()\r\n    const axios = createAxios()\r\n    const [state, setState] = useState()\r\n\r\n    useEffect(() => {\r\n        const getType = () => {\r\n            if (user?._id === friend._id) return 'ME'\r\n\r\n            if (!user?.friends.includes(friend?._id)) {\r\n                if (user._id === friend?.senderId) return 'REVOKE'\r\n                if (user._id === friend?.receiverId) return 'ACCEPT'\r\n                return 'SEND'\r\n            }\r\n\r\n            return 'OPEN_CHAT'\r\n        }\r\n\r\n        const type = getType()\r\n        setState(type)\r\n    }, [friend])\r\n\r\n    // Click add friend send notification to friend\r\n    const handleSendAddFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                sender: {\r\n                    id: user?._id,\r\n                    name: user?.name,\r\n                },\r\n                receiver: {\r\n                    id: friend?._id,\r\n                    name: friend?.name,\r\n                },\r\n                type: 'ADD_FRIEND',\r\n            },\r\n            //  After revoke add friend successfully, change button send add friend\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    setState('REVOKE')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Revoke add friend request\r\n    const handleRevokeAddFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                senderId: user._id,\r\n                receiverId: friend._id,\r\n                type: 'REVOKE_ADD_FRIEND',\r\n            },\r\n            //  After revoke add friend successfully, change button send add friend\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    toast.success(\r\n                        'Bạn đã thu hồi yêu cầu kết bạn thành công!!!'\r\n                    )\r\n                    setState('SEND')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleAcceptFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                sender: {\r\n                    id: friend?._id,\r\n                    name: friend?.name,\r\n                },\r\n                receiver: {\r\n                    id: user?._id,\r\n                    name: user?.name,\r\n                },\r\n                type: 'ACCEPT_FRIEND',\r\n            },\r\n\r\n            //  After accept friend successfully, change button open chat conversation\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    setState('OPEN_CHAT')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const openChat = async () => {\r\n        const conversation = await axios.post(\r\n            `/conversation/get-conversation`,\r\n            {\r\n                friendId: friend._id,\r\n            }\r\n        )\r\n\r\n        dispatch(updateToggleMess({ toggleMess: conversation.data._id }))\r\n        dispatch(changeCurrentChat({ ...conversation.data }))\r\n        dispatch(removeAllMessage())\r\n\r\n        const data = await getAll(conversation.data._id, STORE_NAME_INDEXEDDB)\r\n        if (data.length !== 0) {\r\n            dispatch(pushMessage(data))\r\n        } else {\r\n            const messages = await axios.get(\r\n                `/message/${conversation.data._id}`\r\n            )\r\n            dispatch(pushMessage(messages.data))\r\n            messages?.data.forEach(\r\n                async (message) =>\r\n                    await add(\r\n                        message._id,\r\n                        message,\r\n                        message.conversationId,\r\n                        STORE_NAME_INDEXEDDB\r\n                    )\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`flex cursor-pointer select-none items-center rounded-lg px-4 py-2 hover:bg-slate-50 dark:hover:bg-gray-600 ${className}`}\r\n            >\r\n                <img\r\n                    src={friend?.src || friend?.avatar || DEFAULT_IMG.AVATAR}\r\n                    className=\"h-10 w-10 rounded-full\"\r\n                    alt=\"\"\r\n                />\r\n                <span className=\"ml-4 dark:text-gray-200\">\r\n                    {friend?.name}\r\n                </span>\r\n\r\n                <div className=\"ml-auto dark:text-gray-200\">\r\n                    {\r\n                        {\r\n                            REVOKE: (\r\n                                <Button\r\n                                    onClick={handleRevokeAddFriend}\r\n                                    title=\"Thu hồi yêu cầu kết bạn!\"\r\n                                    circle={true}\r\n                                    primary={true}\r\n                                    className=\"!h-8 !w-8\"\r\n                                >\r\n                                    <div className=\"flex h-5 w-5 items-center justify-center\">\r\n                                        <svg\r\n                                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            style={{ fill: '#4292ff' }}\r\n                                            viewBox=\"0 0 640 512\"\r\n                                        >\r\n                                            <path d=\"M274.7 304H173.3C77.61 304 0 381.6 0 477.3C0 496.5 15.52 512 34.66 512h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM577.9 223.1l47.03-47.03c9.375-9.375 9.375-24.56 0-33.94s-24.56-9.375-33.94 0L544 190.1l-47.03-47.03c-9.375-9.375-24.56-9.375-33.94 0s-9.375 24.56 0 33.94l47.03 47.03l-47.03 47.03c-9.375 9.375-9.375 24.56 0 33.94c9.373 9.373 24.56 9.381 33.94 0L544 257.9l47.03 47.03c9.373 9.373 24.56 9.381 33.94 0c9.375-9.375 9.375-24.56 0-33.94L577.9 223.1z\" />\r\n                                        </svg>\r\n                                    </div>\r\n                                </Button>\r\n                            ),\r\n                            ACCEPT: (\r\n                                <Button\r\n                                    onClick={handleAcceptFriend}\r\n                                    title={`Chấp nhận yêu cầu kết bạn từ ${friend?.name}`}\r\n                                    style={{ color: '#4292ff' }}\r\n                                    circle={true}\r\n                                    primary={true}\r\n                                    className=\"!h-8 !w-8\"\r\n                                >\r\n                                    <ion-icon name=\"person-add\"></ion-icon>\r\n                                </Button>\r\n                            ),\r\n                            SEND: (\r\n                                <Button\r\n                                    onClick={handleSendAddFriend}\r\n                                    title={`Gửi yêu cầu kết bạn đến ${friend?.name}`}\r\n                                    circle={true}\r\n                                    primary={true}\r\n                                    className=\"!h-8 !w-8\"\r\n                                >\r\n                                    <ion-icon name=\"person-add\"></ion-icon>\r\n                                </Button>\r\n                            ),\r\n                            OPEN_CHAT: (\r\n                                <Button\r\n                                    onClick={openChat}\r\n                                    title={`Bắt đầu trò chuyện với ${friend?.name}`}\r\n                                    circle={true}\r\n                                    primary={true}\r\n                                    className=\"!h-8 !w-8\"\r\n                                >\r\n                                    <ion-icon name=\"chatbubble\"></ion-icon>\r\n                                </Button>\r\n                            ),\r\n                        }[state]\r\n                    }\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default User\r\n","import { NotFound, UserResult } from './index'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\nconst SearchResultUser = ({ results }) => {\r\n    const [users, setUsers] = results\r\n\r\n    if (!Array.isArray(users) || users.length === 0) return <NotFound />\r\n\r\n    return (\r\n        <SimpleBar style={{ height: '200px', flex: '1' }}>\r\n            {users?.map((element, index) => (\r\n                <UserResult key={index} friend={element} />\r\n            ))}\r\n        </SimpleBar>\r\n    )\r\n}\r\n\r\nexport default SearchResultUser\r\n","import { memo } from \"react\"\r\n\r\nfunction TitleTab({ children }) {\r\n\treturn <h2 className='text-2xl text-gray-800 dark:text-gray-200 mb-0'>{children}</h2>\r\n}\r\n\r\nexport default memo(TitleTab)\r\n","import { forwardRef, memo, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { DEFAULT_IMG } from '../../../assets/image'\r\n\r\nfunction Avatar(\r\n    { user, className = '', isNoDot = false, alt = '', ...props },\r\n    ref\r\n) {\r\n    const theme = useSelector((state) => state.theme)\r\n    const onlines = useSelector((state) => state.online.list)\r\n    const [isOnline, setIsOnline] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (!isNoDot) {\r\n            setIsOnline(onlines.includes(user.id))\r\n        }\r\n    }, [onlines, user.id])\r\n\r\n    return (\r\n        <>\r\n            {(isNoDot || !isOnline) && (\r\n                <img\r\n                    src={user?.avatar || DEFAULT_IMG.AVATAR}\r\n                    alt={alt}\r\n                    ref={ref}\r\n                    className={`h-10 w-10 rounded-full object-cover ${className}`}\r\n                    {...props}\r\n                    onError={(e) => (e.target.src = DEFAULT_IMG.AVATAR)}\r\n                />\r\n            )}\r\n            {isOnline && (\r\n                <div\r\n                    className={`avatar ${\r\n                        theme.colorTheme === 'light'\r\n                            ? 'border-light'\r\n                            : 'border-dark'\r\n                    }`}\r\n                >\r\n                    <img\r\n                        className={`h-10 w-10 rounded-full ${className}`}\r\n                        ref={ref}\r\n                        src={user?.avatar || DEFAULT_IMG.AVATAR}\r\n                        onError={(e) => (e.target.src = DEFAULT_IMG.AVATAR)}\r\n                        alt={alt}\r\n                    />\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(forwardRef(Avatar))\r\n","import React from 'react'\r\n\r\nconst ChatHover = ({ children, className, ...props }) => {\r\n    return (\r\n        <div\r\n            className={`flex items-center cursor-pointer select-none rounded-lg px-4 py-3 hover:bg-gray-200 dark:hover:bg-gray-700 ${className}`}\r\n            {...props}\r\n        >{children}</div>\r\n    )\r\n}\r\n\r\nexport default ChatHover\r\n","import { memo, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport Avatar from '../Avatar'\r\nimport { updateToggleMess } from '../../../redux/slice/viewMessageSlice'\r\nimport {\r\n    pushMessage,\r\n    removeAllMessage,\r\n} from '../../../redux/slice/messageSlice'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport { changeCurrentChat } from '../../../redux/slice/currentChatSlice'\r\nimport { getAll, add, clear } from '../../../indexDB'\r\nimport { STORE_NAME_INDEXEDDB } from '../../../constant'\r\nimport 'moment/locale/vi'\r\nimport { removeNewsMessageNotify } from '../../../redux/slice/notifySlice'\r\nimport { socket } from '../../../socket'\r\nimport parse from 'html-react-parser'\r\nimport { DEFAULT_IMG } from '../../../assets/image'\r\nimport ChatHover from '../../ChatHover'\r\n\r\nfunction ChatItem({ conversation }) {\r\n    const [isUnread, setIsUnread] = useState(false)\r\n    const axios = createAxios()\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const { toggleMess } = useSelector((state) => state.viewMessage)\r\n    const { newMessageNotify } = useSelector((state) => state.notify)\r\n\r\n    useEffect(() => {\r\n        if (newMessageNotify.includes(conversation._id)) {\r\n            setIsUnread(true)\r\n        }\r\n    }, [newMessageNotify])\r\n\r\n    moment.locale('vi')\r\n\r\n    // Click to active chat\r\n    const openChat = async () => {\r\n        if (toggleMess === conversation._id) return\r\n        dispatch(updateToggleMess({ toggleMess: conversation._id }))\r\n        dispatch(changeCurrentChat({ ...conversation }))\r\n        dispatch(removeAllMessage())\r\n        dispatch(removeNewsMessageNotify(conversation._id))\r\n        setIsUnread(false)\r\n\r\n        const data = await getAll(conversation._id, STORE_NAME_INDEXEDDB)\r\n\r\n        socket.emit(\r\n            'setReadedConversation',\r\n            { conversationId: conversation._id, userId: user._id },\r\n            (res) => console.log('success')\r\n        )\r\n        await clear(conversation._id, STORE_NAME_INDEXEDDB)\r\n        const messages = await axios.get(`/message/${conversation._id}`)\r\n        dispatch(pushMessage(messages.data))\r\n        messages?.data.forEach(\r\n            async (message) =>\r\n                await add(\r\n                    message._id,\r\n                    message,\r\n                    message.conversationId,\r\n                    STORE_NAME_INDEXEDDB\r\n                )\r\n        )\r\n    }\r\n\r\n    return (\r\n        <ChatHover\r\n            className={`${\r\n                toggleMess === conversation._id &&\r\n                'bg-gray-200 dark:bg-gray-700'\r\n            }`}\r\n            onClick={openChat}\r\n        >\r\n            <div className=\"mr-4 flex-none\">\r\n                <Avatar\r\n                    user={{\r\n                        id: conversation?.receiverId,\r\n                        avatar: conversation?.avatar,\r\n                    }}\r\n                    isNoDot={!!conversation?.avatar}\r\n                />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n                <div className=\"flex items-center justify-between\">\r\n                    <p className=\"flex-1 font-medium text-gray-700 line-clamp-1 dark:text-gray-200\">\r\n                        {conversation?.name}\r\n                    </p>\r\n                    <p className=\"text-xs text-gray-500 line-clamp-1 dark:text-gray-400\">\r\n                        {moment(conversation?.updatedAt).fromNow(true) || '123'}\r\n                    </p>\r\n                </div>\r\n                <div className=\"flex-1\">\r\n                    <p\r\n                        className={`break-all text-sm line-clamp-1 ${\r\n                            isUnread\r\n                                ? 'text-blue-500'\r\n                                : 'text-gray-500 dark:text-gray-400'\r\n                        }`}\r\n                    >\r\n                        {user._id === conversation?.senderId &&\r\n                            `Bạn: ` +\r\n                                parse(conversation?.lastMessage?.text || '')}\r\n                        {user._id !== conversation?.senderId &&\r\n                            `${parse(conversation?.lastMessage?.text || '')}`}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </ChatHover>\r\n    )\r\n}\r\n\r\nexport default memo(ChatItem)\r\n","import { useState, memo, useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ChatItem from './ChatItem'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { NotFound } from '../SearchResult'\r\n\r\nfunction ChatItemList({ keyword }) {\r\n    const [activeConversation, setActiveConversation] = useState(null)\r\n    const { conversation } = useSelector((state) => state.conversation)\r\n    const [result, setResult] = useState([])\r\n    useEffect(() => {\r\n        setResult(\r\n            conversation\r\n                ?.filter(\r\n                    (item) =>\r\n                        item?.senderId &&\r\n                        item?.lastMessage?.text &&\r\n                        item?.name\r\n                            ?.toUpperCase()\r\n                            .includes(keyword?.toUpperCase() || '')\r\n                )\r\n                ?.sort((a, b) => new Date(b.updatedAt) - new Date(a.updatedAt))\r\n        )\r\n    }, [conversation, keyword])\r\n\r\n    return (\r\n        <SimpleBar style={{ height: '200px', flex: 1 }}>\r\n            {result.length > 0 ? (\r\n                result?.map((item, index) => (\r\n                    <ChatItem\r\n                        activeState={[\r\n                            activeConversation,\r\n                            setActiveConversation,\r\n                        ]}\r\n                        conversation={item}\r\n                        key={index}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <NotFound />\r\n            )}\r\n        </SimpleBar>\r\n    )\r\n}\r\n\r\nexport default memo(ChatItemList)\r\n","import { memo } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Avatar from '../Avatar'\r\n\r\nfunction UserStatusBox({ user }) {\r\n    const theme = useSelector((state) => state.theme)\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                className={`${\r\n                    theme.colorTheme === 'dark'\r\n                        ? 'theme-bg-black-dark'\r\n                        : 'theme-bg-gray'\r\n                } relative mt-5 inline-block rounded-xl px-2 pt-5 pb-1`}\r\n            >\r\n                <div className=\"absolute -top-5 left-1/2 h-10 w-10 -translate-x-1/2 transform\">\r\n                    <Avatar user={user} />\r\n                </div>\r\n                <div className=\"w-16 truncate text-center text-gray-800 dark:text-gray-100\">\r\n                    <span\r\n                        className=\"text-sm text-gray-800 dark:text-gray-100\"\r\n                        title={user?.name}\r\n                    >\r\n                        {user?.name?.split(' ')?.pop()}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(UserStatusBox)\r\n","import { memo } from 'react'\r\nimport Swiper from 'react-id-swiper'\r\nimport { SwiperSlide } from 'swiper/react/swiper-react'\r\nimport UserStatusBox from '../UserStatusBox'\r\n\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst ChatSlider = () => {\r\n    const onlines = useSelector((selector) => selector.online.list)\r\n    const friends = useSelector((selector) => selector.friend.list)\r\n    const params = {\r\n        slidesPerView: 'auto',\r\n        spaceBetween: 30,\r\n        freeMode: true,\r\n    }\r\n\r\n    return (\r\n        <Swiper\r\n            {...params}\r\n            allowTouchMove={true}\r\n            containerClass=\"swiper-slider overflow-[unset]\"\r\n        >\r\n            {friends\r\n                .filter((friend) => onlines.includes(friend._id))\r\n                .map((friend) => (\r\n                    <SwiperSlide\r\n                        key={friend._id}\r\n                        className=\"w-auto select-none\"\r\n                    >\r\n                        <UserStatusBox user={friend} />\r\n                    </SwiperSlide>\r\n                ))}\r\n        </Swiper>\r\n    )\r\n}\r\n\r\nexport default memo(ChatSlider)\r\n","import { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleSearchResult } from '../../../redux/slice/dialog/searchResultSlice'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport Search from '../Search'\r\nimport { SearchResultUser } from '../SearchResult'\r\nimport TitleTab from '../TitleTab'\r\nimport ChatItemList from './ChatItemList'\r\nimport ChatSlider from './ChatSlider'\r\n\r\nfunction ChatTab() {\r\n    const [resultSearch, setResultSearch] = useState()\r\n    const searchResult = useSelector((state) => state.searchResultDialog)\r\n    const { conversation } = useSelector((state) => state.conversation)\r\n    const theme = useSelector((state) => state.theme)\r\n    const dispatch = useDispatch()\r\n    const [searchKey, setSearchKey] = useState('')\r\n    const axios = createAxios()\r\n\r\n    const onSubmit = async (searchKey) => {\r\n        setSearchKey(searchKey)\r\n    }\r\n\r\n    return (\r\n        <div className={`tab-container ${theme.isHidden ? '' : 'maxWidth'}`}>\r\n            <div className=\"mb-2 md:mb-4\">\r\n                <TitleTab>Tin nhắn</TitleTab>\r\n            </div>\r\n\r\n            <Search\r\n                className=\"mb-2 md:mb-5\"\r\n                id=\"search-chat\"\r\n                name=\"search-chat\"\r\n                placeholder=\"Tìm kiếm...\"\r\n                setResultSearch={setResultSearch}\r\n                onSubmit={onSubmit}\r\n            />\r\n            {searchKey ? (\r\n                <>\r\n                    <div className=\"mb-2 overflow-hidden\">\r\n                        <ChatSlider />\r\n                    </div>\r\n                    <h4 className=\"mb-2 font-bold text-gray-800 dark:text-gray-200 md:mb-4\">\r\n                        Kết quả tìm kiếm: {searchKey}\r\n                    </h4>\r\n\r\n                    <ChatItemList keyword={searchKey} />\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <div className=\"mb-2 overflow-hidden\">\r\n                        <ChatSlider />\r\n                    </div>\r\n                    <h4 className=\"mb-2 font-bold text-gray-800 dark:text-gray-200 md:mb-4\">\r\n                        Gần đây\r\n                    </h4>\r\n                    <ChatItemList />\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatTab\r\n","import { memo } from \"react\"\r\n\r\nfunction CollapseListItem({ title, content }) {\r\n\treturn (\r\n\t\t<li className=''>\r\n\t\t\t<div className='py-3'>\r\n\t\t\t\t<p className='text-sm text-gray-600 dark:text-gray-400' title={title}>\r\n\t\t\t\t\t{title !== undefined ? title : \"\"}\r\n\t\t\t\t</p>\r\n\t\t\t\t<p\r\n\t\t\t\t\tclassName='text-sm font-medium line-clamp-1 text-gray-700 dark:text-gray-200'\r\n\t\t\t\t\ttitle={content}>\r\n\t\t\t\t\t{content}\r\n\t\t\t\t</p>\r\n\t\t\t</div>\r\n\t\t</li>\r\n\t)\r\n}\r\n\r\nexport default memo(CollapseListItem)\r\n","import { useContext } from 'react'\r\nimport { createContext } from 'react'\r\nimport { useCollapse } from '../../../hooks'\r\n\r\nconst CollapseContext = createContext()\r\n\r\nconst CollapseProvider = ({ children, showAll, openDefault }) => {\r\n    const [open, setOpen, isShowAll] = useCollapse(\r\n        Array.isArray(openDefault) ? openDefault : [],\r\n        showAll\r\n    )\r\n\r\n    const value = {\r\n        open,\r\n        setOpen,\r\n        isShowAll,\r\n    }\r\n\r\n    return (\r\n        <CollapseContext.Provider value={value}>\r\n            {children}\r\n        </CollapseContext.Provider>\r\n    )\r\n}\r\n\r\nconst useCollapseStore = () => {\r\n    const context = useContext(CollapseContext)\r\n\r\n    return context\r\n}\r\n\r\nexport { CollapseProvider, useCollapseStore }\r\n","import { useRef } from 'react'\r\nimport { memo } from 'react'\r\nimport { useCollapseStore } from './context'\r\nimport _ from 'lodash'\r\n\r\nfunction CollapseContent({ id, children, className }) {\r\n    const { open } = useCollapseStore()\r\n    \r\n    return (\r\n        <div\r\n            className={`transition-grid-template-rows grid overflow-hidden rounded-b-lg bg-white bg-opacity-50 px-5 dark:bg-gray-900 ${className}`}\r\n            style={{\r\n                gridTemplateRows: open.includes(id) ? '1fr' : '0fr',\r\n            }}\r\n        >\r\n            <ul className=\"overflow-hidden\">{children}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CollapseContent\r\n","import { useEffect } from 'react'\r\nimport { memo, useCallback } from 'react'\r\nimport { useCollapseStore } from '../CollapseComponent/context'\r\n\r\nfunction HeaderCollapse({ contentFor, children, className }) {\r\n    const handleClick = useCallback(() => setOpen(contentFor), [])\r\n    const { open, setOpen, isShowAll } = useCollapseStore()\r\n\r\n    useEffect(() => {\r\n        if (isShowAll) setOpen(contentFor)\r\n    }, [])\r\n\r\n    return (\r\n        <label\r\n            className={`text-sm cursor-pointer text-gray-800 select-none font-medium bg-gray-200 hover:bg-gray-300 hover:bg-opacity-50 dark:text-gray-200 flex justify-between items-center py-3 px-5 ${\r\n                open.includes(contentFor)\r\n                    ? 'rounded-t-lg'\r\n                    : 'rounded-lg '\r\n            } ${className}`}\r\n        >\r\n            <input\r\n                hidden\r\n                type=\"checkbox\"\r\n                onChange={handleClick}\r\n                value={contentFor}\r\n            />\r\n            {children}\r\n            {open.includes(contentFor) ? (\r\n                <ion-icon name=\"chevron-up-sharp\"></ion-icon>\r\n            ) : (\r\n                <ion-icon name=\"chevron-forward-sharp\"></ion-icon>\r\n            )}\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default memo(HeaderCollapse)\r\n","import React from 'react'\r\nimport { CollapseProvider } from './context'\r\n\r\nconst Collapse = ({ children, ...props }) => {\r\n    return <CollapseProvider {...props}>{children}</CollapseProvider>\r\n}\r\n\r\nexport default Collapse\r\n","import { memo } from 'react'\r\nimport { calcSize } from '../../../ulti'\r\nimport { FILE_TYPE } from '../../../constant'\r\n\r\nconst renderType = type => {\r\n    const keys = Object.keys(FILE_TYPE)\r\n    for (let i = 0; i < keys.length; i++) {\r\n        if (FILE_TYPE[keys[i]].includes(type)) {\r\n            return keys[i]\r\n        }\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfunction File({\r\n    type,\r\n    name,\r\n    size,\r\n    link,\r\n    disableShareButton,\r\n    disableDeleteButton,\r\n    disableDownloadButton,\r\n    className,\r\n    ...props\r\n}) {\r\n    return (\r\n        <div className={`border p-2 ${className}`}>\r\n            <div className=\"flex items-center justify-between\">\r\n                <div className=\"mr-4 flex h-10 w-10 flex-shrink-0 items-center justify-center rounded-lg bg-indigo-800 bg-opacity-10 text-2xl text-indigo-500 dark:bg-indigo-900 dark:bg-opacity-50\">\r\n                    {{\r\n                        text: <ion-icon name=\"document-text\"></ion-icon>,\r\n                        image: <ion-icon name=\"image\"></ion-icon>,\r\n                        video: <ion-icon name=\"videocam\"></ion-icon>,\r\n                        sheet: <ion-icon name=\"grid\"></ion-icon>,\r\n                        presentation: <ion-icon name=\"newspaper\"></ion-icon>,\r\n                        audio: <ion-icon name=\"volume-high\"></ion-icon>,\r\n                        zip: <ion-icon name=\"library\"></ion-icon>,\r\n                    }[renderType(type)] || (\r\n                        <ion-icon name=\"help-circle\"></ion-icon>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"flex-1 line-clamp-1\">\r\n                    <p\r\n                        className=\"text-sm font-medium text-gray-700 line-clamp-1 dark:text-gray-200\"\r\n                        title={name || 'Unknown'}\r\n                    >\r\n                        {name || 'Unknown'}\r\n                    </p>\r\n                    {size && (\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            {calcSize(size || 0)}\r\n                        </p>\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"\">\r\n                    {!disableDownloadButton && (\r\n                        <a\r\n                            download\r\n                            href={link}\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"\r\n                            className=\"ml-2 inline-block h-8 w-8 cursor-pointer text-center text-lg leading-8 text-gray-700 dark:text-gray-200\"\r\n                        >\r\n                            <ion-icon name=\"cloud-download-outline\"></ion-icon>\r\n                        </a>\r\n                    )}\r\n\r\n                    {!disableDeleteButton && (\r\n                        <a\r\n                            href=\"/something\"\r\n                            className=\"ml-2 inline-block h-8 w-8 text-center text-lg leading-8 text-gray-700 dark:text-gray-200\"\r\n                        >\r\n                            <ion-icon name=\"trash-outline\"></ion-icon>\r\n                        </a>\r\n                    )}\r\n                    {!disableShareButton && (\r\n                        <a\r\n                            href=\"/something\"\r\n                            className=\"ml-2 inline-block h-8 w-8 text-center text-lg leading-8 text-gray-700 dark:text-gray-200\"\r\n                        >\r\n                            <ion-icon name=\"arrow-redo-outline\"></ion-icon>\r\n                        </a>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(File)\r\n","import React from 'react'\r\n\r\nconst Control = ({ children }) => {\r\n    return (\r\n        <div className=\"w-full flex items-center justify-center pt-3\">\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Control","import React from 'react'\r\nimport { useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\n\r\nconst ImageVideo = ({ src, onClick }) => {\r\n    const [isHover, setIsHover] = useState(false)\r\n    const [popperElememt, setPopperElement] = useState()\r\n    const [referenceElement, setReferenceElement] = useState()\r\n    const { styles, attributes } = usePopper(referenceElement, popperElememt, {\r\n        placement: 'bottom',\r\n        modifiers: [\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['top', 'right'],\r\n                },\r\n            },\r\n        ],\r\n    })\r\n\r\n    return (\r\n        <div\r\n            className=\"relative h-[72px] w-[72px] rounded-md\"\r\n            onMouseEnter={() => setIsHover(true)}\r\n            onMouseLeave={() => setIsHover(false)}\r\n            onClick={onClick}\r\n        >\r\n            {isHover && (\r\n                <div className=\"absolute inset-0 z-10 cursor-pointer rounded-md bg-black opacity-40\"></div>\r\n            )}\r\n            {isHover && (\r\n                <div\r\n                    ref={setReferenceElement}\r\n                    className=\"parent absolute top-1 right-1 z-20 rounded-md bg-white p-[2px]\"\r\n                >\r\n                    <button className=\"flex h-6 w-5 items-center justify-center rounded-md hover:bg-gray-300\">\r\n                        <ion-icon name=\"ellipsis-vertical\"></ion-icon>\r\n                    </button>\r\n\r\n                    <ul\r\n                        ref={setPopperElement}\r\n                        style={styles.popper}\r\n                        {...attributes.popper}\r\n                        className=\"children min-w-[150px] rounded-md bg-white py-2\"\r\n                    >\r\n                        <li className=\"px-4 py-1 text-sm hover:bg-gray-200\">\r\n                            <button className=\"flex items-center justify-center\">\r\n                                <span className=\"mr-2 flex text-base\">\r\n                                    <ion-icon name=\"arrow-redo\"></ion-icon>\r\n                                </span>\r\n                                <span>Chia sẻ</span>\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"px-4 py-1 text-sm hover:bg-gray-200\">\r\n                            <button className=\"flex items-center justify-center\">\r\n                                <span className=\"mr-2 flex text-base\">\r\n                                    <ion-icon name=\"download\"></ion-icon>\r\n                                </span>\r\n                                <span>Tải xuống</span>\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            )}\r\n            <img\r\n                className=\"h-[72px] w-[72px] rounded-md object-cover\"\r\n                src={src}\r\n                alt=\"\"\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageVideo\r\n","import React from 'react'\r\nimport Avatar from '../../../HomeComponent/Avatar'\r\n\r\nconst Info = ({ avatar, name, children }) => {\r\n    return (\r\n        <div className=\"flex flex-col items-center justify-center pt-4\">\r\n            <Avatar\r\n                className=\"mb-3 !h-20 !w-20\"\r\n                isNoDot={true}\r\n                user={{\r\n                    id: '',\r\n                    avatar,\r\n                }}\r\n            />\r\n            <h3 className=\"text-lg font-semibold dark:text-gray-100\">{name}</h3>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Info\r\n","import Microlink from '@microlink/react'\r\nimport React from 'react'\r\nimport { useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\n\r\nconst LinkPreview = ({ url }) => {\r\n    const [isHover, setIsHover] = useState()\r\n    const [popperElememt, setPopperElement] = useState()\r\n    const [referenceElement, setReferenceElement] = useState()\r\n    const { styles, attributes } = usePopper(referenceElement, popperElememt, {\r\n        placement: 'bottom',\r\n        modifiers: [\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['top-start', 'left'],\r\n                },\r\n            },\r\n        ],\r\n    })\r\n\r\n    return (\r\n        <div\r\n            className=\"link-preview-small relative\"\r\n            onMouseEnter={() => setIsHover(true)}\r\n            onMouseLeave={() => setIsHover(false)}\r\n        >\r\n            <Microlink\r\n                url={url}\r\n                size=\"small\"\r\n                media={['image', 'logo']}\r\n            />\r\n            {isHover && (\r\n                <div className=\"absolute top-1 right-6 z-20 flex rounded-md bg-white p-[2px]\">\r\n                    <div>\r\n                        <button className=\"flex h-6 w-5 items-center justify-center rounded-md hover:bg-gray-300\">\r\n                            <ion-icon name=\"arrow-redo-outline\"></ion-icon>\r\n                        </button>\r\n                    </div>\r\n                    <div ref={setReferenceElement} className=\"parent \">\r\n                        <button className=\"flex h-6 w-5 items-center justify-center rounded-md hover:bg-gray-300\">\r\n                            <ion-icon name=\"ellipsis-vertical\"></ion-icon>\r\n                        </button>\r\n\r\n                        <ul\r\n                            ref={setPopperElement}\r\n                            style={styles.popper}\r\n                            {...attributes.popper}\r\n                            className=\"children min-w-[150px] overflow-ellipsis rounded-md bg-white py-2 shadow-lg\"\r\n                        >\r\n                            <li className=\"px-4 py-1 text-sm line-clamp-1 hover:bg-gray-200\">\r\n                                <button className=\"flex w-full items-center\">\r\n                                    <span className=\"mr-2 flex text-base\">\r\n                                        <ion-icon name=\"copy-outline\"></ion-icon>\r\n                                    </span>\r\n                                    <span>Copy</span>\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"px-4 py-1 text-sm line-clamp-1 hover:bg-gray-200\">\r\n                                <button className=\"flex w-full items-center\">\r\n                                    <span className=\"mr-2 flex text-base\">\r\n                                        <ion-icon name=\"arrow-redo\"></ion-icon>\r\n                                    </span>\r\n                                    <span>Chia sẻ</span>\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"px-4 py-1 text-sm hover:bg-gray-200\">\r\n                                <button className=\"flex w-full items-center\">\r\n                                    <span className=\"mr-2 flex text-base\">\r\n                                        <ion-icon name=\"earth-outline\"></ion-icon>\r\n                                    </span>\r\n                                    <span className=\"whitespace-nowrap\">\r\n                                        Mở trên trình duyệt\r\n                                    </span>\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"px-4 py-1 text-sm line-clamp-1 hover:bg-gray-200\">\r\n                                <button className=\"flex w-full items-center\">\r\n                                    <span className=\"mr-2 flex text-base\">\r\n                                        <ion-icon name=\"trash-outline\"></ion-icon>\r\n                                    </span>\r\n                                    <span>Xóa</span>\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LinkPreview\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport Button from '../../Button'\r\nimport {\r\n    Collapse,\r\n    CollapseContent,\r\n    HeaderCollapse,\r\n} from '../../CollapseComponent'\r\nimport File from '../../HomeComponent/File'\r\nimport { Control, ControlItem } from '../components/Control'\r\nimport ImageVideo from '../components/ImageVideo'\r\nimport Info from '../components/Info'\r\nimport LinkPreview from '../components/LinkPreview'\r\nimport { useConversationInfo } from '../context/context'\r\nimport { socket } from '../../../socket'\r\nimport {\r\n    LIMIT_FILE_SHOW,\r\n    LIMIT_IMAGE_SHOW,\r\n    LIMIT_LINK_SHOW,\r\n    URI_REG,\r\n} from '../../../constant'\r\n\r\nconst CollapseItem = ({ icon, children, className, ...props }) => {\r\n    return (\r\n        <div\r\n            className={`flex items-center py-2 dark:text-gray-200 ${className}`}\r\n            {...props}\r\n        >\r\n            {icon && <span className=\"mr-2 inline-flex text-2xl\">{icon}</span>}\r\n            <span className=\"text-15\">{children}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Home = () => {\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const [images, setImages] = useState([])\r\n    const [files, setFiles] = useState([])\r\n    const [links, setLinks] = useState([])\r\n    const { routes, history, pushPath } = useConversationInfo()\r\n\r\n    useEffect(() => {\r\n        const images = JSON.parse(JSON.stringify(conversation.imageMessages))\r\n            ?.sort((a, b) => new Date(b?.createdAt) - new Date(a?.createdAt))\r\n            ?.reduce((acc, msg) => {\r\n                acc.push(...msg?.imageGroup)\r\n                return acc\r\n            }, [])\r\n\r\n        const files = JSON.parse(JSON.stringify(conversation.fileMessages))\r\n            ?.sort((a, b) => new Date(b?.createdAt) - new Date(a?.createdAt))\r\n            ?.reduce((acc, msg) => {\r\n                acc.push(msg?.file)\r\n                return acc\r\n            }, [])\r\n\r\n        const links = JSON.parse(JSON.stringify(conversation.linkMessages))\r\n            ?.sort((a, b) => new Date(b?.createdAt) - new Date(a?.createdAt))\r\n            .reduce((acc, msg) => {\r\n                acc.push(...msg?.text.match(URI_REG))\r\n                return acc\r\n            }, [])\r\n\r\n        setImages(images.slice(0, Math.min(images.length, LIMIT_IMAGE_SHOW)))\r\n        setFiles(files.slice(0, Math.min(files.length, LIMIT_FILE_SHOW)))\r\n        setLinks(links.slice(0, Math.min(links.length, LIMIT_LINK_SHOW)))\r\n    }, [conversation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex flex-1 flex-col bg-gray-100 dark:bg-gray-600\">\r\n                <div className=\"bg-white dark:bg-gray-700\">\r\n                    <Info\r\n                        avatar={conversation.avatar}\r\n                        name={conversation.name}\r\n                    ></Info>\r\n                    <Control>\r\n                        {/* <ControlItem\r\n                            icon={\r\n                                <ion-icon name=\"notifications-outline\"></ion-icon>\r\n                            }\r\n                        >\r\n                            Tắt thông báo\r\n                        </ControlItem> */}\r\n                    </Control>\r\n                </div>\r\n                <Collapse showAll={true}>\r\n                    {conversation.type === 'GROUP' && (\r\n                        <div className=\"mt-[6px]\">\r\n                            <HeaderCollapse\r\n                                contentFor=\"1\"\r\n                                className=\"!rounded-none !bg-white dark:!bg-gray-700\"\r\n                            >\r\n                                Thành viên nhóm\r\n                            </HeaderCollapse>\r\n                            <CollapseContent\r\n                                id=\"1\"\r\n                                className=\"!rounded-none !p-0\"\r\n                            >\r\n                                <CollapseItem\r\n                                    onClick={() => pushPath('members')}\r\n                                    className=\"!bg-white px-5 dark:!bg-gray-700 dark:hover:!bg-gray-600\"\r\n                                    icon={\r\n                                        <ion-icon name=\"people-outline\"></ion-icon>\r\n                                    }\r\n                                >\r\n                                    {conversation?.members?.length} Thành viên\r\n                                </CollapseItem>\r\n                            </CollapseContent>\r\n                        </div>\r\n                    )}\r\n                    <div className=\"mt-[6px]\">\r\n                        <HeaderCollapse\r\n                            contentFor=\"2\"\r\n                            className=\"!rounded-none !bg-white dark:!bg-gray-700\"\r\n                        >\r\n                            Ảnh/Video\r\n                        </HeaderCollapse>\r\n                        {conversation && images.length > 0 && (\r\n                            <CollapseContent\r\n                                id=\"2\"\r\n                                className=\"!rounded-none !bg-white dark:!bg-gray-700\"\r\n                            >\r\n                                <div className=\"flex items-center py-2\">\r\n                                    <div className=\"grid grid-cols-4 gap-2\">\r\n                                        {images?.map((image) => (\r\n                                            <ImageVideo\r\n                                                src={image}\r\n                                                key={image}\r\n                                            />\r\n                                        ))}\r\n\r\n                                        <div className=\"col-span-4 my-2\">\r\n                                            <Button\r\n                                                onClick={() =>\r\n                                                    pushPath('images')\r\n                                                }\r\n                                                small={true}\r\n                                                className=\"w-full rounded-md bg-gray-200 py-1 text-sm font-medium hover:bg-gray-300 dark:bg-slate-600 dark:text-gray-100 dark:hover:bg-gray-500\"\r\n                                            >\r\n                                                Xem tất cả\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </CollapseContent>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"mt-[6px]\">\r\n                        <HeaderCollapse\r\n                            contentFor=\"3\"\r\n                            className=\"!rounded-none !bg-white dark:!bg-gray-700\"\r\n                        >\r\n                            File\r\n                        </HeaderCollapse>\r\n                        {conversation && files.length > 0 && (\r\n                            <CollapseContent\r\n                                id=\"3\"\r\n                                className=\"!rounded-none !bg-white px-0 dark:!bg-gray-700\"\r\n                            >\r\n                                <div className=\"flex items-center py-2\">\r\n                                    <div className=\"w-full\">\r\n                                        {files?.map((file) => (\r\n                                            <File\r\n                                                key={file.link}\r\n                                                link={file.link}\r\n                                                type={file.type}\r\n                                                className=\"border-none px-5 hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                                                name={file.name}\r\n                                                size={file.size}\r\n                                            />\r\n                                        ))}\r\n                                        <div className=\"my-2 px-5\">\r\n                                            <Button\r\n                                                onClick={() =>\r\n                                                    pushPath('files')\r\n                                                }\r\n                                                small={true}\r\n                                                className=\"w-full rounded-md bg-gray-200 py-1 text-sm font-medium hover:bg-gray-300 dark:bg-slate-600 dark:text-gray-100 dark:hover:bg-gray-500\"\r\n                                            >\r\n                                                Xem tất cả\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </CollapseContent>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"mt-[6px]\">\r\n                        <HeaderCollapse\r\n                            contentFor=\"4\"\r\n                            className=\"!rounded-none !bg-white dark:!bg-gray-700\"\r\n                        >\r\n                            Link\r\n                        </HeaderCollapse>\r\n                        {conversation && links.length > 0 && (\r\n                            <CollapseContent\r\n                                id=\"4\"\r\n                                className=\"!rounded-none !bg-white !px-0 dark:!bg-gray-700\"\r\n                            >\r\n                                <div className=\"flex items-center py-2\">\r\n                                    <div className=\"w-full\">\r\n                                        {links?.map((link) => (\r\n                                            <LinkPreview\r\n                                                key={new Date() * Math.random()}\r\n                                                url={link}\r\n                                            />\r\n                                        ))}\r\n                                        <div className=\"my-2 px-5\">\r\n                                            <Button\r\n                                                onClick={() =>\r\n                                                    pushPath('links')\r\n                                                }\r\n                                                small={true}\r\n                                                className=\"w-full rounded-md bg-gray-200 py-1 text-sm font-medium hover:bg-gray-300 dark:bg-slate-600 dark:text-gray-100 dark:hover:bg-gray-500\"\r\n                                            >\r\n                                                Xem tất cả\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </CollapseContent>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"mt-[6px]\">\r\n                        <HeaderCollapse\r\n                            contentFor=\"5\"\r\n                            className=\"!rounded-none !bg-white dark:!bg-gray-700\"\r\n                        >\r\n                            Thiết lập bảo mật\r\n                        </HeaderCollapse>\r\n                        <CollapseContent\r\n                            id=\"5\"\r\n                            className=\"!rounded-none !p-0 dark:!bg-gray-700\"\r\n                        >\r\n                            <CollapseItem\r\n                                onClick={() => {\r\n                                    socket.emit('deleteHistoryConversation', {\r\n                                        conversationId: conversation._id,\r\n                                        userId: user._id,\r\n                                    })\r\n                                }}\r\n                                className=\"!bg-white px-5 dark:!bg-gray-700 dark:hover:!bg-gray-600\"\r\n                                icon={\r\n                                    <ion-icon name=\"trash-outline\"></ion-icon>\r\n                                }\r\n                            >\r\n                                Xóa cuộc trò chuyện\r\n                            </CollapseItem>\r\n                            {conversation.type === 'GROUP' ? (\r\n                                <>\r\n                                    <CollapseItem\r\n                                        onClick={() => {\r\n                                            socket.emit('outGroup', {\r\n                                                conversationId:\r\n                                                    conversation._id,\r\n                                            })\r\n                                        }}\r\n                                        className=\"!bg-white px-5 dark:!bg-gray-700 dark:hover:!bg-gray-600\"\r\n                                        icon={\r\n                                            <ion-icon name=\"log-out-outline\"></ion-icon>\r\n                                        }\r\n                                    >\r\n                                        Rời khỏi nhóm\r\n                                    </CollapseItem>\r\n                                </>\r\n                            ) : null}\r\n                        </CollapseContent>\r\n                    </div>\r\n                </Collapse>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import { memo, useEffect, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport { STATUS_RESPONSE, STORE_NAME_INDEXEDDB } from '../../../constant'\r\nimport { add, getAll } from '../../../indexDB'\r\nimport { changeCurrentChat } from '../../../redux/slice/currentChatSlice'\r\nimport {\r\n    pushMessage,\r\n    removeAllMessage,\r\n} from '../../../redux/slice/messageSlice'\r\nimport { removeNewsMessageNotify } from '../../../redux/slice/notifySlice'\r\nimport { toggleDropdown } from '../../../redux/slice/popperSlice'\r\nimport { updateToggleMess } from '../../../redux/slice/viewMessageSlice'\r\nimport { socket } from '../../../socket'\r\nimport OutsideClickHandler from 'react-outside-click-handler'\r\nimport { toast } from 'react-toastify'\r\n\r\nfunction Option({ index, friend }) {\r\n    const dispatch = useDispatch()\r\n    const { openDropdownListContact } = useSelector((state) => state.popper)\r\n    const [referenceElement, setReferenceElement] = useState()\r\n    const [popperElememt, setPopperElement] = useState()\r\n    const [isUnread, setIsUnread] = useState(false)\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const axios = createAxios()\r\n    const { toggleMess } = useSelector((state) => state.viewMessage)\r\n    const { newMessageNotify } = useSelector((state) => state.notify)\r\n    const [state, setState] = useState()\r\n\r\n    useEffect(() => {\r\n        const getType = () => {\r\n            if (user?._id === friend._id) return 'ME'\r\n\r\n            if (!user?.friends.includes(friend?._id)) {\r\n                if (user._id === friend?.addFriendInfo?.senderId)\r\n                    return 'REVOKE'\r\n                if (user._id === friend?.addFriendInfo?.receiverId)\r\n                    return 'ACCEPT'\r\n                return 'SEND'\r\n            }\r\n\r\n            return 'OPEN_CHAT'\r\n        }\r\n\r\n        const type = getType()\r\n        setState(type)\r\n    }, [friend])\r\n\r\n    const { styles, attributes } = usePopper(referenceElement, popperElememt, {\r\n        placement: 'left-start',\r\n        modifiers: [\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    fallbackPlacements: ['top', 'right'],\r\n                },\r\n            },\r\n        ],\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (newMessageNotify.includes(friend.conversation._id)) {\r\n            setIsUnread(true)\r\n        }\r\n    }, [newMessageNotify])\r\n\r\n    // Click to active chat\r\n    const openChat = async () => {\r\n        if (toggleMess === friend.conversation) return\r\n        dispatch(updateToggleMess({ toggleMess: friend.conversation._id }))\r\n        dispatch(\r\n            changeCurrentChat({ ...friend.conversation, name: friend?.name })\r\n        )\r\n        dispatch(removeAllMessage())\r\n        dispatch(removeNewsMessageNotify(friend.conversation._id))\r\n        dispatch(toggleDropdown(null))\r\n        setIsUnread(false)\r\n\r\n        const data = await getAll(friend.conversation._id, STORE_NAME_INDEXEDDB)\r\n\r\n        socket.emit(\r\n            'setReadedConversation',\r\n            { conversationId: friend.conversation._id },\r\n            (res) => console.log(res)\r\n        )\r\n\r\n        if (data.length !== 0) {\r\n            dispatch(pushMessage(data))\r\n        } else {\r\n            const messages = await axios.get(\r\n                `/message/${friend.conversation._id}`\r\n            )\r\n            dispatch(pushMessage(messages.data))\r\n            messages?.data.forEach(\r\n                async (message) =>\r\n                    await add(\r\n                        message._id,\r\n                        message,\r\n                        message.conversationId,\r\n                        STORE_NAME_INDEXEDDB\r\n                    )\r\n            )\r\n        }\r\n        handleClickOutside()\r\n    }\r\n\r\n    const handleClickOutside = () => {\r\n        dispatch(toggleDropdown(-1))\r\n    }\r\n\r\n    const deleteFriend = () => {\r\n        socket.emit('handleUser', {\r\n            receiver: friend._id,\r\n            type: 'DELETE_FRIEND',\r\n        })\r\n        handleClickOutside()\r\n    } // Click add friend send notification to friend\r\n    const handleSendAddFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                sender: {\r\n                    id: user?._id,\r\n                    name: user?.name,\r\n                },\r\n                receiver: {\r\n                    id: friend?._id,\r\n                    name: friend?.name,\r\n                },\r\n                type: 'ADD_FRIEND',\r\n            },\r\n            //  After revoke add friend successfully, change button send add friend\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    setState('REVOKE')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Revoke add friend request\r\n    const handleRevokeAddFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                senderId: user._id,\r\n                receiverId: friend._id,\r\n                type: 'REVOKE_ADD_FRIEND',\r\n            },\r\n            //  After revoke add friend successfully, change button send add friend\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    toast.success(\r\n                        'Bạn đã thu hồi yêu cầu kết bạn thành công!!!'\r\n                    )\r\n                    setState('SEND')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleAcceptFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                sender: {\r\n                    id: friend?._id,\r\n                    name: friend?.name,\r\n                },\r\n                receiver: {\r\n                    id: user?._id,\r\n                    name: user?.name,\r\n                },\r\n                type: 'ACCEPT_FRIEND',\r\n            },\r\n\r\n            //  After accept friend successfully, change button open chat conversation\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    setState('OPEN_CHAT')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"my-2 ml-auto\" ref={setReferenceElement}>\r\n                <div\r\n                    className={\r\n                        openDropdownListContact === index\r\n                            ? 'flex h-6 w-6 cursor-pointer items-center justify-center rounded-full text-gray-700 dark:bg-gray-100 dark:bg-opacity-20 dark:text-gray-200'\r\n                            : 'flex h-6 w-6 cursor-pointer items-center justify-center rounded-full text-gray-700 dark:text-gray-200 dark:hover:bg-gray-100 dark:hover:bg-opacity-20'\r\n                    }\r\n                    onClick={(e) => {\r\n                        dispatch(toggleDropdown(index))\r\n                    }}\r\n                >\r\n                    <ion-icon name=\"ellipsis-vertical\"></ion-icon>\r\n                </div>\r\n            </div>\r\n            {openDropdownListContact === index && (\r\n                <OutsideClickHandler onOutsideClick={handleClickOutside}>\r\n                    <div\r\n                        className={\r\n                            openDropdownListContact\r\n                                ? 'z-10'\r\n                                : 'pointer-events-none invisible'\r\n                        }\r\n                        ref={setPopperElement}\r\n                        style={styles.popper}\r\n                        {...attributes.popper}\r\n                    >\r\n                        <ul className=\"w-40 overflow-hidden rounded-lg border border-gray-500 bg-gray-100 py-2 dark:bg-gray-800\">\r\n                            {\r\n                                {\r\n                                    REVOKE: (\r\n                                        <li\r\n                                            onClick={handleRevokeAddFriend}\r\n                                            className=\"flex cursor-pointer items-center justify-between py-1 px-3 hover:bg-gray-300 dark:text-gray-400 dark:hover:bg-opacity-5 dark:hover:text-gray-200\"\r\n                                        >\r\n                                            <p>Thu hồi yêu cầu kết bạn</p>\r\n                                            <div className=\"flex items-center justify-center\">\r\n                                                <svg\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                    style={{ fill: '#4292ff' }}\r\n                                                    viewBox=\"0 0 640 512\"\r\n                                                >\r\n                                                    <path d=\"M274.7 304H173.3C77.61 304 0 381.6 0 477.3C0 496.5 15.52 512 34.66 512h378.7C432.5 512 448 496.5 448 477.3C448 381.6 370.4 304 274.7 304zM224 256c70.7 0 128-57.31 128-128S294.7 0 224 0C153.3 0 96 57.31 96 128S153.3 256 224 256zM577.9 223.1l47.03-47.03c9.375-9.375 9.375-24.56 0-33.94s-24.56-9.375-33.94 0L544 190.1l-47.03-47.03c-9.375-9.375-24.56-9.375-33.94 0s-9.375 24.56 0 33.94l47.03 47.03l-47.03 47.03c-9.375 9.375-9.375 24.56 0 33.94c9.373 9.373 24.56 9.381 33.94 0L544 257.9l47.03 47.03c9.373 9.373 24.56 9.381 33.94 0c9.375-9.375 9.375-24.56 0-33.94L577.9 223.1z\" />\r\n                                                </svg>\r\n                                            </div>\r\n                                        </li>\r\n                                    ),\r\n                                    ACCEPT: (\r\n                                        <li\r\n                                            onClick={handleAcceptFriend}\r\n                                            className=\"flex cursor-pointer items-center justify-between py-1 px-3 hover:bg-gray-300 dark:text-gray-400 dark:hover:bg-opacity-5 dark:hover:text-gray-200\"\r\n                                        >\r\n                                            <p>\r\n                                                Chấp nhận yêu cầu kết bạn từ $\r\n                                                {friend?.name}\r\n                                            </p>\r\n                                            <div className=\"flex items-center justify-center\">\r\n                                                <ion-icon name=\"person-add\"></ion-icon>\r\n                                            </div>\r\n                                        </li>\r\n                                    ),\r\n                                    SEND: (\r\n                                        <li\r\n                                            onClick={handleSendAddFriend}\r\n                                            className=\"flex cursor-pointer items-center justify-between py-1 px-3 hover:bg-gray-300 dark:text-gray-400 dark:hover:bg-opacity-5 dark:hover:text-gray-200\"\r\n                                        >\r\n                                            <p>\r\n                                                Gửi yêu cầu kết bạn đến $\r\n                                                {friend?.name}\r\n                                            </p>\r\n                                            <div className=\"flex items-center justify-center\">\r\n                                                <ion-icon name=\"person-add\"></ion-icon>\r\n                                            </div>\r\n                                        </li>\r\n                                    ),\r\n                                    OPEN_CHAT: (\r\n                                        <li\r\n                                            onClick={openChat}\r\n                                            className=\"flex cursor-pointer items-center justify-between py-1 px-3 hover:bg-gray-300 dark:text-gray-400 dark:hover:bg-opacity-5 dark:hover:text-gray-200\"\r\n                                        >\r\n                                            <p>Trò chuyện</p>\r\n                                            <div className=\"flex items-center justify-center\">\r\n                                                <ion-icon name=\"person-add\"></ion-icon>\r\n                                            </div>\r\n                                        </li>\r\n                                    ),\r\n                                }[state]\r\n                            }\r\n                            {user.friends.includes(friend._id) && (\r\n                                <>\r\n                                    <li\r\n                                        className=\"flex cursor-pointer items-center justify-between py-1 px-3 hover:bg-gray-300 dark:text-gray-400 dark:hover:bg-opacity-5 dark:hover:text-gray-200\"\r\n                                        onClick={deleteFriend}\r\n                                    >\r\n                                        <p>Hủy kết bạn</p>\r\n                                        <div className=\"flex items-center justify-center\">\r\n                                            <ion-icon name=\"trash-sharp\"></ion-icon>\r\n                                        </div>\r\n                                    </li>\r\n                                </>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </OutsideClickHandler>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Option)\r\n","import { memo } from 'react'\r\nimport Option from './Option'\r\nimport Avatar from '../Avatar'\r\nimport { useSelector } from 'react-redux'\r\n\r\nfunction DropdownUserContact({ index, friend, admin }) {\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    return (\r\n        <div className=\"flex items-center justify-between rounded-lg py-2 px-4 hover:bg-slate-50 dark:hover:bg-gray-600\">\r\n            <div className=\"flex items-center justify-between\">\r\n                <Avatar\r\n                    user={{\r\n                        id: friend?._id,\r\n                        avatar: friend?.avatar,\r\n                    }}\r\n                    className=\"mr-2\"\r\n                />\r\n                <div className=\"cursor-pointer select-none font-medium text-gray-700 line-clamp-1 dark:text-gray-200\">\r\n                    {friend?.name} {admin ? '(Chủ)' : ''}\r\n                </div>\r\n            </div>\r\n            {user._id !== friend._id &&<Option index={index} friend={friend} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(DropdownUserContact)\r\n","import React, { useCallback, useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport { UserResult } from '../../HomeComponent/SearchResult'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport Search from '../../HomeComponent/Search'\r\nimport DropdownUserContact from '../../HomeComponent/ContactTab/DropdownUserContact'\r\n\r\nconst Members = () => {\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const axios = createAxios()\r\n    const [resultSearch, setResultSearch] = useState([])\r\n    const [search, setSearch] = useState()\r\n\r\n    const [members, setMembers] = useState([])\r\n\r\n    useEffect(() => {\r\n        const getMembers = async () => {\r\n            try {\r\n                const { data } = await axios.post(`/conversation/get-members`, {\r\n                    conversationId: conversation._id,\r\n                })\r\n                setMembers(data)\r\n                setResultSearch(data)\r\n            } catch (error) {}\r\n        }\r\n        getMembers()\r\n    }, [conversation])\r\n\r\n    useEffect(() => {\r\n        if (search) {\r\n            setResultSearch(\r\n                resultSearch.filter((friend) =>\r\n                    friend.name.toLowerCase().includes(search.toLowerCase())\r\n                )\r\n            )\r\n        }\r\n        if (!search) {\r\n            setResultSearch(members)\r\n        }\r\n    }, [search, conversation])\r\n\r\n    const handleChangeSearch = useCallback((value) => setSearch(value), [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"z-0 bg-white dark:bg-gray-600\"></div>\r\n            <div className=\"relative z-10 flex flex-1 flex-col bg-white dark:bg-gray-700\">\r\n                <div>\r\n                    <h4 className=\"px-4 pt-4 pb-2 text-sm font-semibold dark:text-gray-200\">\r\n                        Danh sách thành viên ({conversation.members.length})\r\n                    </h4>\r\n                    <div className=\"mx-3 mb-2 overflow-hidden rounded-full\">\r\n                        <Search\r\n                            name=\"search-members\"\r\n                            id=\"search-members\"\r\n                            placeholder=\"Tìm kiếm thành viên\"\r\n                            setResultSearch={setResultSearch}\r\n                            onChange={handleChangeSearch}\r\n                        />\r\n                    </div>\r\n                </div>\r\n\r\n                <SimpleBar style={{ flex: 1 }} className='px-3'>\r\n                    {resultSearch?.map((member, index) => (\r\n                        <DropdownUserContact\r\n                            admin={conversation.admin.own === member._id}\r\n                            key={member._id}\r\n                            index={index + 1}\r\n                            friend={member}\r\n                        />\r\n                    ))}\r\n                </SimpleBar>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Members\r\n","import React, {\r\n    Fragment,\r\n    useCallback,\r\n    useEffect,\r\n    useMemo,\r\n    useState,\r\n} from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport ImageVideo from '../components/ImageVideo'\r\nimport { toggleSwiperImage } from '../../../redux/slice/dialog/swiperImageSlice'\r\n\r\nconst Images = () => {\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const [images, setImages] = useState({})\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        const images = JSON.parse(JSON.stringify(conversation.imageMessages))\r\n            ?.sort((a, b) => new Date(b?.createdAt) - new Date(a?.createdAt))\r\n            ?.reduce((acc, msg) => {\r\n                const date = new Date(msg.createdAt).toLocaleDateString()\r\n\r\n                if (!acc[date]) {\r\n                    acc[date] = []\r\n                }\r\n                acc[date].push(...msg?.imageGroup)\r\n                return acc\r\n            }, {})\r\n\r\n        setImages(images)\r\n    }, [conversation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"z-0 bg-white dark:bg-gray-600\"></div>\r\n            <div className=\"relative z-10 flex flex-1 flex-col bg-white dark:bg-gray-700\">\r\n                <SimpleBar style={{ flex: 1 }}>\r\n                    {Object.entries(images).map(([key, imageList]) => {\r\n                        const dateParts = key.split('/')\r\n                        const day = dateParts[1]\r\n                        const month = dateParts[0]\r\n                        const year = dateParts[2]\r\n                        return (\r\n                            <Fragment key={key}>\r\n                                <div>\r\n                                    <h4 className=\"px-4 pt-4 pb-2 text-sm dark:text-gray-200\">\r\n                                        {`Ngày ${day} tháng ${month} năm ${year}`}\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"flex items-center justify-center py-2\">\r\n                                    <div className=\"grid grid-cols-4 gap-2\">\r\n                                        {imageList?.map((image, index) => (\r\n                                            <ImageVideo\r\n                                                src={image}\r\n                                                key={image}\r\n                                                onClick={(e) => {\r\n                                                    dispatch(\r\n                                                        toggleSwiperImage({\r\n                                                            isShow: true,\r\n                                                            activeIndex: index,\r\n                                                            listImg: imageList,\r\n                                                        })\r\n                                                    )\r\n                                                }}\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    })}\r\n                </SimpleBar>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Images\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport File from '../../HomeComponent/File'\r\n\r\nconst Files = () => {\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const [files, setFiles] = useState({})\r\n\r\n    useEffect(() => {\r\n        const files = JSON.parse(JSON.stringify(conversation.fileMessages))\r\n            ?.sort((a, b) => new Date(b?.createdAt) - new Date(a?.createdAt))\r\n            ?.reduce((acc, msg) => {\r\n                const date = new Date(msg.createdAt).toLocaleDateString()\r\n\r\n                if (!acc[date]) {\r\n                    acc[date] = []\r\n                }\r\n                acc[date].push(msg?.file)\r\n                return acc\r\n            }, {})\r\n\r\n        console.log(files)\r\n        setFiles(files)\r\n    }, [conversation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"z-0 bg-white dark:bg-gray-600\"></div>\r\n            <div className=\"relative z-10 flex flex-1 flex-col bg-white dark:bg-gray-700\">\r\n                <SimpleBar style={{ flex: 1 }}>\r\n                    {Object.entries(files).map(([key, list]) => {\r\n                        const dateParts = key.split('/')\r\n                        const day = dateParts[1]\r\n                        const month = dateParts[0]\r\n                        const year = dateParts[2]\r\n                        return (\r\n                            <Fragment key={key}>\r\n                                <div>\r\n                                    <h4 className=\"px-4 pt-4 pb-2 text-sm dark:text-gray-200\">\r\n                                        {`Ngày ${day} tháng ${month} năm ${year}`}\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"flex items-center justify-center py-2\">\r\n                                    <div className=\"grid grid-cols-1 gap-2 w-full\">\r\n                                        {list?.map((file) => (\r\n                                            <File\r\n                                                key={file.link}\r\n                                                link={file.link}\r\n                                                type={file.type}\r\n                                                className=\"border-none px-5 hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                                                name={file.name}\r\n                                                size={file.size}\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    })}\r\n                </SimpleBar>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Files\r\n","import React, { Fragment, useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { URI_REG } from '../../../constant'\r\nimport LinkPreview from '../components/LinkPreview'\r\n\r\nconst Links = () => {\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const [links, setLinks] = useState({})\r\n\r\n    useEffect(() => {\r\n        const links = JSON.parse(JSON.stringify(conversation.linkMessages))\r\n            ?.sort((a, b) => new Date(b?.createdAt) - new Date(a?.createdAt))\r\n            ?.reduce((acc, msg) => {\r\n                const date = new Date(msg.createdAt).toLocaleDateString()\r\n\r\n                if (!acc[date]) {\r\n                    acc[date] = []\r\n                }\r\n                acc[date].push(...msg?.text.match(URI_REG))\r\n                return acc\r\n            }, {})\r\n\r\n        console.log(links)\r\n        setLinks(links)\r\n    }, [conversation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"z-0 bg-white dark:bg-gray-600\"></div>\r\n            <div className=\"relative z-10 flex flex-1 flex-col bg-white dark:bg-gray-700\">\r\n                <SimpleBar style={{ flex: 1 }}>\r\n                    {Object.entries(links).map(([key, list]) => {\r\n                        const dateParts = key.split('/')\r\n                        const day = dateParts[1]\r\n                        const month = dateParts[0]\r\n                        const year = dateParts[2]\r\n                        return (\r\n                            <Fragment key={key}>\r\n                                <div>\r\n                                    <h4 className=\"px-4 pt-4 pb-2 text-sm dark:text-gray-200\">\r\n                                        {`Ngày ${day} tháng ${month} năm ${year}`}\r\n                                    </h4>\r\n                                </div>\r\n                                <div className=\"flex items-center justify-center py-2\">\r\n                                    <div className=\"grid w-full grid-cols-1 gap-2\">\r\n                                        {list?.map((link) => (\r\n                                            <LinkPreview\r\n                                                key={new Date() * Math.random()}\r\n                                                url={link}\r\n                                            />\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            </Fragment>\r\n                        )\r\n                    })}\r\n                </SimpleBar>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Links\r\n","import { useContext } from 'react'\r\nimport { useState } from 'react'\r\nimport { createContext } from 'react'\r\nimport { Files, Home, Images, Links, Members } from '../path'\r\n\r\nconst ConversationInfoContext = createContext()\r\n\r\nconst routes = [\r\n    {\r\n        path: 'home',\r\n        title: 'Thông tin',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: 'members',\r\n        title: 'Thành viên',\r\n        component: Members,\r\n    },\r\n    {\r\n        path: 'images',\r\n        title: 'Ảnh',\r\n        component: Images,\r\n    },\r\n    {\r\n        path: 'files',\r\n        title: 'File',\r\n        component: Files,\r\n    },\r\n    {\r\n        path: 'links',\r\n        title: 'Link',\r\n        component: Links,\r\n    },\r\n]\r\n\r\nconst ConversationInfoProvider = ({ children, ...props }) => {\r\n    const [history, setHistory] = useState([routes[0]])\r\n\r\n    const pushPath = (path) => {\r\n        if (path)\r\n            setHistory((prev) => {\r\n                const route = routes.find((route) => route.path === path)\r\n                return [route, ...prev]\r\n            })\r\n        else setHistory([])\r\n    }\r\n\r\n    const shiftPath = () => {\r\n        setHistory((prev) => prev.slice(1))\r\n    }\r\n\r\n    const value = {\r\n        routes: routes,\r\n        history: history[0],\r\n        shiftPath,\r\n        pushPath,\r\n    }\r\n\r\n    return (\r\n        <ConversationInfoContext.Provider value={value} {...props}>\r\n            {children}\r\n        </ConversationInfoContext.Provider>\r\n    )\r\n}\r\n\r\nconst useConversationInfo = () => {\r\n    const context = useContext(ConversationInfoContext)\r\n    return context\r\n}\r\n\r\nexport { ConversationInfoProvider, useConversationInfo }\r\n","import React from 'react'\r\nimport { useConversationInfo } from '../../context/context'\r\n\r\nconst Header = ({ children }) => {\r\n    const { history, shiftPath } = useConversationInfo()\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"relative h-16 flex-shrink-0 flex items-center justify-center border-b dark:bg-gray-700 bg-white dark:border-gray-500 dark:text-gray-100\">\r\n                {history.path !== 'home' && (\r\n                    <button className=\"absolute dark:hover:bg-gray-600 hover:bg-gray-200 w-8 h-8 rounded-full flex items-center justify-center text-2xl left-4\" onClick={shiftPath}>\r\n                        <ion-icon name=\"return-down-back-outline\"></ion-icon>\r\n                    </button>\r\n                )}\r\n                {children}\r\n            </h2>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React, { useEffect, useRef } from 'react'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { useConversationInfo } from '../../context/context'\r\nimport Header from '../Header'\r\n\r\nconst Content = () => {\r\n    const { history } = useConversationInfo()\r\n    const ref = useRef()\r\n    const Component = history.component\r\n    useEffect(() => {\r\n        ref.current.recalculate()\r\n    })\r\n    return (\r\n        <div className=\"conversation-info animate-slideInRight xl:animate-none\">\r\n            <Header>{history?.title}</Header>\r\n            <SimpleBar ref={ref} className=\"h-40 flex-1 shadow-xl\">\r\n                <Component />\r\n            </SimpleBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Content\r\n","import React from 'react'\r\nimport { ConversationInfoProvider } from './context/context'\r\nimport Content from './components/Content'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toogleConversationInfo } from '../../redux/slice/dialog/conversationInfoSlice'\r\n\r\nconst ConversationInfo = ({ children }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <ConversationInfoProvider>\r\n            <div className='h-full'>\r\n                <div className=\"fixed inset-0 z-50 transition-all xl:hidden\" onClick={() => {\r\n                    dispatch(toogleConversationInfo())\r\n                }}></div>\r\n                <Content />\r\n            </div>\r\n        </ConversationInfoProvider>\r\n    )\r\n}\r\n\r\nexport default ConversationInfo\r\n","import { useRef, memo } from 'react'\r\nimport Draggable from 'react-draggable'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { DEFAULT_IMG, SWIPER_THEME } from '../../../assets/image'\r\nimport {\r\n    zoomIn,\r\n    zoomOut,\r\n    reset,\r\n    rotate,\r\n    wheelZoom,\r\n} from '../../../redux/slice/swiperSlice'\r\n\r\nfunction SlideImage({ img }) {\r\n    const nodeRef = useRef(null)\r\n    const dispatch = useDispatch()\r\n    const swiper = useSelector(state => state.swiper)\r\n\r\n    const zoomInDispatch = () => dispatch(zoomIn())\r\n    const zoomOutDispatch = () => dispatch(zoomOut())\r\n    const resetDispatch = () => dispatch(reset())\r\n    const rotateDispatch = () => dispatch(rotate())\r\n    const wheelZoomDispatch = e => dispatch(wheelZoom(e.deltaY))\r\n\r\n    return (\r\n        <div className=\"img-box relative w-full h-full\">\r\n            <div className=\"absolute top-4 left-4 z-10 px-2 bg-gray-800 rounded-full flex items-center bg-opacity-50\">\r\n                <button\r\n                    onClick={zoomInDispatch}\r\n                    className=\"text-center px-2 w-10 h-10\"\r\n                    title=\"Phóng to\"\r\n                >\r\n                    <img\r\n                        className=\"control-image\"\r\n                        src={SWIPER_THEME.zoomIn}\r\n                        alt=\"Zoom in\"\r\n                    />\r\n                </button>\r\n                <button\r\n                    onClick={zoomOutDispatch}\r\n                    className=\"text-center px-2 w-10 h-10\"\r\n                    title=\"Thu nhỏ\"\r\n                >\r\n                    <img\r\n                        className=\"control-image\"\r\n                        src={SWIPER_THEME.zoomOut}\r\n                        alt=\"Zoom out\"\r\n                    />\r\n                </button>\r\n                <button\r\n                    onClick={resetDispatch}\r\n                    className=\"text-center px-2 w-10 h-10\"\r\n                    title=\"Đưa về mặc định\"\r\n                >\r\n                    <img\r\n                        className=\"control-image\"\r\n                        src={SWIPER_THEME.reset}\r\n                        alt=\"Reset\"\r\n                    />\r\n                </button>\r\n                <button\r\n                    onClick={rotateDispatch}\r\n                    className=\"text-center px-2 w-10 h-10\"\r\n                    title=\"Xoay\"\r\n                >\r\n                    <img\r\n                        className=\"control-image\"\r\n                        src={SWIPER_THEME.rotate}\r\n                        alt=\"Rotate\"\r\n                    />\r\n                </button>\r\n            </div>\r\n            <div className=\"overflow-hidden border-red-500 flex items-center justify-center w-full h-full\">\r\n                <Draggable nodeRef={nodeRef} disabled={!swiper.isDraggable}>\r\n                    <span\r\n                        ref={nodeRef}\r\n                        className=\"h-full flex items-center justify-center\"\r\n                    >\r\n                        <img\r\n                            onWheel={e => wheelZoomDispatch(e)}\r\n                            style={{\r\n                                transform: `scale(${swiper.swiperImage.zoom}) rotate(${swiper.swiperImage.rotate}deg)`,\r\n                                cursor: swiper.isDraggable ? 'move' : 'default',\r\n                                transition: '0.3s',\r\n                            }}\r\n                            className=\"max-w-full max-h-full\"\r\n                            src={img}\r\n                            draggable=\"false\"\r\n                            alt=\"\"\r\n                            onError={e =>\r\n                                (e.target.src = DEFAULT_IMG.ERROR_IMAGE)\r\n                            }\r\n                        />\r\n                    </span>\r\n                </Draggable>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(SlideImage)\r\n","import { useState, memo } from 'react'\r\nimport { Swiper, SwiperSlide } from 'swiper/react/swiper-react'\r\nimport SwiperCore, { Navigation, Mousewheel } from 'swiper'\r\nimport 'swiper/swiper-bundle.min.css'\r\nimport 'swiper/swiper.min.css'\r\nimport 'swiper/modules/mousewheel/mousewheel'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SlideImage from './SlideImage'\r\nimport { reset } from '../../../redux/slice/swiperSlice'\r\nimport Button from '../../Button'\r\n\r\nSwiperCore.use([Navigation, Mousewheel])\r\n\r\nfunction ThumbGallery() {\r\n    const { swiperImage } = useSelector(state => state.swiperImageDialog)\r\n\tconst [swiper, setSwiper] = useState()\r\n\tconst dispatch = useDispatch()\r\n\tconst [imgActive, setImgActive] = useState(swiperImage?.listImg[swiperImage?.activeIndex])\r\n\t\r\n\tconst thumbSwiper = {\r\n\t\tnavigation: { nextEl: '.swiper-main .swiper-next', prevEl: '.swiper-main .swiper-prev' },\r\n\t\tspaceBetween: 0,\r\n\t\tslideToClickedSlide: true,\r\n\t\tspeed: 300,\r\n\t\tmousewheel: true,\r\n\t\tinitialSlide: swiperImage?.activeIndex,\r\n\t\tcenteredSlides: true,\r\n\t\tbreakpoints: {\r\n\t\t\t768: {\r\n\t\t\t\tdirection: 'vertical',\r\n\t\t\t\tslidesPerView: 5,\r\n\t\t\t},\r\n\r\n\t\t\t0: {\r\n\t\t\t\tdirection: 'horizontal',\r\n\t\t\t\tslidesPerView: 3,\r\n\t\t\t},\r\n\t\t\t500: {\r\n\t\t\t\tdirection: 'horizontal',\r\n\t\t\t\tslidesPerView: 4,\r\n\t\t\t},\r\n\t\t},\r\n\t}\r\n\r\n\tconst resetDispatch = () => {\r\n\t\tdispatch(reset())\r\n\t}\r\n\r\n\tconst getImageActive = () => {\r\n\t\tif (!swiper) return\r\n\t\tlet slideActive = swiper?.slides[swiper.activeIndex] ?? swiper.slides[swiperImage?.activeIndex]\r\n\t\tsetImgActive(slideActive?.querySelector('img').src)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className='thumb-gallery'>\r\n\t\t\t<div className='relative swiper-main mx-0 h-4/5 w-full md:h-full md:w-4/5'>\r\n\t\t\t\t<Button circle={true}\r\n\t\t\t\t\tclassName='swiper-button swiper-prev'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tgetImageActive()\r\n\t\t\t\t\t\tresetDispatch()\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{window.innerWidth > 768 ? <ion-icon name='chevron-up-outline'></ion-icon> : <ion-icon name='arrow-back-outline'></ion-icon>}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button circle={true}\r\n\t\t\t\t\tclassName='swiper-button swiper-next'\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tgetImageActive()\r\n\t\t\t\t\t\tresetDispatch()\r\n\t\t\t\t\t}}>\r\n\t\t\t\t\t{window.innerWidth > 768 ? <ion-icon name='chevron-down-outline'></ion-icon> : <ion-icon name='arrow-forward-outline'></ion-icon>}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<SlideImage img={imgActive} />\r\n\t\t\t</div>\r\n\t\t\t<Swiper\r\n\t\t\t\tonSlideChange={() => getImageActive()}\r\n\t\t\t\tonScroll={() => getImageActive()}\r\n\t\t\t\tonSwiper={setSwiper}\r\n\t\t\t\t{...thumbSwiper}\r\n\t\t\t\tclassName='w-full h-1/6 md:w-1/6 mt-auto md:h-full md:ml-auto swiper-thumb'>\r\n\t\t\t\t{swiperImage?.listImg.map((img, index) => (\r\n\t\t\t\t\t<SwiperSlide key={index}>\r\n\t\t\t\t\t\t<img className='w-full h-full pr-2 md:pb-2 md:pr-0 object-cover' src={img} alt='' />\r\n\t\t\t\t\t</SwiperSlide>\r\n\t\t\t\t))}\r\n\t\t\t</Swiper>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default memo(ThumbGallery)\r\n","import { memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleSwiperImage } from '../../../redux/slice/dialog/swiperImageSlice'\r\nimport Dialog from '../../Dialog'\r\nimport ThumbGallery from './ThumbGallery'\r\n\r\nfunction ImageDialog() {\r\n    const { swiperImage } = useSelector(state => state.swiperImageDialog)\r\n    const dispatch = useDispatch()\r\n\r\n    // Turn off swiper image\r\n    const closeModal = () => dispatch(toggleSwiperImage({ isShow: false }))\r\n\r\n    return (\r\n        <Dialog\r\n            isOpen={swiperImage.isShow}\r\n            onRequestClose={closeModal}\r\n            className=\"thumb-gallery\"\r\n        >\r\n            <div className=\"relative w-full h-full\">\r\n                <div className=\"absolute h-10 top-0 right-0 left-0 flex items-center justify-end bg-gray-600\">\r\n                    <button\r\n                        onClick={closeModal}\r\n                        className=\"w-10 h-10 text-white flex items-center justify-center hover:bg-gray-900 hover:bg-opacity-50\"\r\n                    >\r\n                        <ion-icon\r\n                            style={{ fontSize: '24px' }}\r\n                            name=\"close-outline\"\r\n                        ></ion-icon>\r\n                    </button>\r\n                </div>\r\n                <div className=\"absolute flex items-center top-10 right-0 bottom-0 left-0\">\r\n                    <ThumbGallery />\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default memo(ImageDialog)\r\n","import Avatar from '../Avatar'\r\n\r\nfunction ForwardCheckedItem({ avatar, name, onClick = () => {} }) {\r\n    return (\r\n        <div className=\"mb-2 flex w-full select-none items-center rounded-full bg-blue-200 p-1\">\r\n            <Avatar\r\n                user={{ id: '', avatar }}\r\n                isNoDot={true}\r\n                className=\"mr-2 h-6 w-6 rounded-full\"\r\n            />\r\n            <span className=\"flex-1 text-sm font-normal text-blue-700 line-clamp-1\">\r\n                {name}\r\n            </span>\r\n            <span\r\n                className=\"ml-auto flex cursor-pointer text-2xl text-blue-700\"\r\n                onClick={onClick}\r\n            >\r\n                <ion-icon name=\"close-circle\"></ion-icon>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForwardCheckedItem\r\n","import { memo } from 'react'\r\nimport SimpleBar from 'simplebar-react'\r\nimport ForwardCheckedItem from './ForwardCheckedItem'\r\nimport 'simplebar/dist/simplebar.min.css'\r\n\r\nfunction ForwardChecked({ list, onChoose }) {\r\n    return (\r\n        <SimpleBar style={{ height: '200px', flex: 1 }}>\r\n            {list.map(item => (\r\n                <ForwardCheckedItem\r\n                    key={item._id}\r\n                    avatar={item?.avatar}\r\n                    name={item.name}\r\n                    onClick={() => onChoose(item._id)}\r\n                />\r\n            ))}\r\n        </SimpleBar>\r\n    )\r\n}\r\n\r\nexport default memo(ForwardChecked)\r\n","import React from 'react'\r\nimport Avatar from '../HomeComponent/Avatar'\r\nimport ForwardChecked from '../HomeComponent/Message/ForwardChecked'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useMountTransition } from '../../hooks'\r\nimport { memo } from 'react'\r\n\r\nconst ListFriendChooses = ({ chooses = [], handleChoose, list = [] }) => {\r\n    const friendList = useSelector((state) => state.friend.list)\r\n    const hasTransition = useMountTransition(chooses.length > 0, 300)\r\n\r\n    return (\r\n        <div className=\"flex h-full\">\r\n            <div className=\"flex h-full flex-1 flex-col\">\r\n                <SimpleBar style={{ height: '200px', flex: 1 }}>\r\n                    {list?.map((friend) => (\r\n                        <label\r\n                            key={friend._id}\r\n                            className=\"flex cursor-pointer items-center rounded-md bg-opacity-25 px-2 py-2 dark:hover:bg-gray-900\"\r\n                        >\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                className=\"mr-4 flex-shrink-0 cursor-pointer\"\r\n                                value={friend._id}\r\n                                name=\"forward-friend\"\r\n                                onChange={() => handleChoose(friend._id)}\r\n                                checked={\r\n                                    chooses.findIndex(\r\n                                        (item) => item._id === friend._id\r\n                                    ) !== -1\r\n                                        ? 'checked'\r\n                                        : ''\r\n                                }\r\n                            />\r\n            \r\n                            <div className=\"flex items-center\">\r\n                                <Avatar\r\n                                    className=\"h-8 w-8 rounded-full\"\r\n                                    user={{\r\n                                        id: friend._id,\r\n                                        avatar: friend.avatar,\r\n                                    }}\r\n                                />\r\n                                <div className=\"ml-3 select-none line-clamp-1 dark:text-gray-100\">\r\n                                    {friend.name}\r\n                                </div>\r\n                            </div>\r\n                        </label>\r\n                    ))}\r\n                </SimpleBar>\r\n            </div>\r\n            <div\r\n                className={`${chooses.length > 0 && 'show'} ${\r\n                    hasTransition && 'in'\r\n                } forward-choose w-48 rounded-md bg-gray-100 dark:bg-gray-900`}\r\n            >\r\n                <div className=\"flex h-full flex-col p-2\">\r\n                    <div className=\"mb-2 flex items-center\">\r\n                        <div className=\"whitespace-nowrap text-sm dark:text-gray-100\">\r\n                            Đã chọn\r\n                        </div>\r\n                        <div className=\"ml-2 rounded-md bg-blue-200 p-1 text-center text-xs font-semibold text-blue-700\">\r\n                            {chooses.length}/{friendList.length}\r\n                        </div>\r\n                    </div>\r\n                    <ForwardChecked list={chooses} onChoose={handleChoose} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ListFriendChooses)\r\n","import { DEFAULT_IMG } from '../../../assets/image'\r\n\r\nfunction Image({ src, className, ...props }) {\r\n    return (\r\n        <img\r\n            {...props}\r\n            className={`object-contain w-full ${className || ''}`}\r\n            src={`${src}`}\r\n            alt=\"\"\r\n            onError={e => (e.target.src = DEFAULT_IMG.ERROR_IMAGE)}\r\n        />\r\n    )\r\n}\r\n\r\nexport default Image\r\n","import { memo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleSwiperImage } from '../../../redux/slice/dialog/swiperImageSlice'\r\nimport { Image } from \"../ImageMessage\"\r\n\r\nfunction ImageGroup({ listImg }) {\r\n\tconst dispatch = useDispatch()\r\n\t\r\n\r\n\t// Turn on swiper image\r\n\tconst clickHandle = (e) => {\r\n\t\tdispatch(toggleSwiperImage({ isShow: true, activeIndex: listImg.indexOf(e.target.src), listImg }))\r\n\t}\r\n\t\r\n\tlet widthImg, heightImg, classLayout\r\n\tswitch (listImg?.length) {\r\n\t\tcase 1:\r\n\t\t\twidthImg = '320px'\r\n\t\t\theightImg = 'auto'\r\n\t\t\tclassLayout = 'grid-cols-1 gap-0'\r\n\t\t\tbreak\r\n\t\tcase 2:\r\n\t\t\twidthImg = '240px'\r\n\t\t\theightImg = 'auto'\r\n\t\t\tclassLayout = 'grid-cols-2 gap-2'\r\n\t\t\tbreak\r\n\r\n\t\tdefault:\r\n\t\t\twidthImg = '120px'\r\n\t\t\theightImg = '120px'\r\n\t\t\tclassLayout = 'grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-2'\r\n\t\t\tbreak\r\n\t}\r\n\r\n\tconst listItem = listImg?.map((img, index) => (\r\n\t\t<div style={{ maxWidth: widthImg, maxHeight: heightImg }} key={index} className='flex justify-center bg-gray-500'>\r\n\t\t\t<Image src={img} onClick={clickHandle} className='message-image'/>\r\n\t\t</div>\r\n\t))\r\n\r\n\r\n\treturn <div className={`grid ${classLayout}`}>{listItem}</div>\r\n}\r\n\r\nexport default memo(ImageGroup)","import Microlink from '@microlink/react'\r\nimport parse from 'html-react-parser'\r\nimport { memo, useEffect, useRef, useState } from 'react'\r\nimport { URL_REG } from '../../../constant'\r\nimport { useDebounce } from '../../../hooks'\r\nimport File from '../File'\r\nimport { ImageGroup } from '../ImageMessage'\r\n\r\nconst MessageText = memo(\r\n    ({\r\n        message,\r\n        disableLink = false,\r\n        contentEditable,\r\n        textState = () => {},\r\n    }) => {\r\n        const url = message?.match(URL_REG)\r\n        const [text, setText] = useState(message)\r\n        const debounceText = useDebounce(text, 300)\r\n        const editor = useRef()\r\n\r\n        useEffect(() => {\r\n            textState(debounceText)\r\n        }, [debounceText])\r\n\r\n        const renderMessage = () => {\r\n            if (url?.length > 0)\r\n                return (\r\n                    <a\r\n                        href={url[0]}\r\n                        target=\"_blank\"\r\n                        className=\"w-full block cursor-pointer break-all hover:underline\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        {parse(message || '')}\r\n                    </a>\r\n                )\r\n            if (contentEditable)\r\n                return (\r\n                    <p\r\n                        ref={editor}\r\n                        className=\"outline-none\"\r\n                        onInput={(e) => setText(e?.currentTarget.innerHTML)}\r\n                        contentEditable={contentEditable}\r\n                        suppressContentEditableWarning={contentEditable}\r\n                    >\r\n                        {parse(message || '')}\r\n                    </p>\r\n                )\r\n\r\n            return parse(message || '')\r\n        }\r\n\r\n        useEffect(() => {\r\n            if (editor.current) {\r\n                editor.current.scrollIntoView({ block: 'end' })\r\n                editor.current.focus()\r\n                window.getSelection().selectAllChildren(editor.current)\r\n                window.getSelection().collapseToEnd()\r\n            }\r\n        }, [contentEditable])\r\n\r\n        return (\r\n            <>\r\n                    <div className=\"text-15\">{renderMessage()}</div>\r\n                    {url?.length > 0 && !disableLink && (\r\n                        <div\r\n                            className=\"my-3 inline-block w-full\"\r\n                        >\r\n                            <Microlink\r\n                                url={url[0]}\r\n                                size=\"large\"\r\n                                media={['image', 'logo']}\r\n                            />\r\n                        </div>\r\n                    )}\r\n            </>\r\n        )\r\n    }\r\n)\r\n\r\nfunction TypeMessage({\r\n    messInfo,\r\n    type,\r\n    isTiny = false,\r\n    contentEditable,\r\n    textState,\r\n}) {\r\n    return (\r\n        {\r\n            link: (\r\n                <MessageText\r\n                    message={messInfo?.text}\r\n                    disableLink={isTiny}\r\n                    contentEditable={contentEditable}\r\n                    textState={textState}\r\n                />\r\n            ),\r\n            text: (\r\n                <MessageText\r\n                    message={messInfo?.text}\r\n                    disableLink={isTiny}\r\n                    contentEditable={contentEditable}\r\n                    textState={textState}\r\n                />\r\n            ),\r\n            file: (\r\n                <div className=\"flex-1 list-none bg-gray-100 dark:bg-gray-900\">\r\n                    <File\r\n                        type={messInfo?.file?.type}\r\n                        name={messInfo?.file?.name}\r\n                        size={messInfo?.file?.size}\r\n                        link={messInfo?.file?.link}\r\n                        disableShareButton={messInfo?.disableShareButton}\r\n                        disableDeleteButton={messInfo?.disableDeleteButton}\r\n                    />\r\n                </div>\r\n            ),\r\n            imageGroup: isTiny ? (\r\n                <File\r\n                    name={`${messInfo?.listImg?.length} Hình ảnh`}\r\n                    disableShareButton={true}\r\n                    disableDeleteButton={true}\r\n                    disableDownloadButton={true}\r\n                    type=\"jpg\"\r\n                />\r\n            ) : (\r\n                <ImageGroup listImg={messInfo?.listImg} />\r\n            ),\r\n        }[type] || null\r\n    )\r\n}\r\n\r\nexport default memo(TypeMessage)\r\n","import { useCallback } from 'react'\r\nimport { memo, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { toggleForward } from '../../../redux/slice/dialog/forwardSlice'\r\nimport { socket } from '../../../socket'\r\nimport Button from '../../Button'\r\nimport Dialog from '../../Dialog'\r\nimport ListFriendChooses from '../../ListFriendChooses'\r\nimport TypeMessage from './TypeMessage'\r\n\r\nfunction ForwardDialog() {\r\n    const [search, setSearch] = useState(null)\r\n    const [resultSearch, setResultSearch] = useState()\r\n    const [chooses, setChooses] = useState([])\r\n    const [isEdit, setIsEdit] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const forwardDialog = useSelector((state) => state.forwardDialog)\r\n    const [textMessage, setTextMessage] = useState(\r\n        forwardDialog.forward?.message.text\r\n    )\r\n    const handleClose = useCallback(() => dispatch(toggleForward({})), [])\r\n    const friendList = useSelector((state) => state.friend.list)\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n\r\n    useEffect(() => {\r\n        if (search) {\r\n            setResultSearch(\r\n                friendList.filter((friend) =>\r\n                    friend.name.toLowerCase().includes(search.toLowerCase())\r\n                )\r\n            )\r\n        }\r\n        if (!search) {\r\n            setResultSearch(friendList)\r\n        }\r\n    }, [search, friendList])\r\n\r\n    const handleChoose = (friendId) => {\r\n        const index = friendList.findIndex((item) => item._id === friendId)\r\n        const isExist =\r\n            chooses.findIndex((item) => item._id === friendId) !== -1\r\n        if (isExist) setChooses(chooses.filter((item) => item._id !== friendId))\r\n        else setChooses([...chooses, friendList[index]])\r\n    }\r\n\r\n    const handleForward = useCallback(() => {\r\n        chooses.forEach((friend) => {\r\n            socket.emit('chatMessage', {\r\n                type: forwardDialog.forward?.message?.type,\r\n                text: textMessage,\r\n                imageGroup: forwardDialog.forward?.message?.imageGroup || [],\r\n                file: forwardDialog.forward?.message?.file || [],\r\n                senderId: user._id,\r\n                roomId: friend.conversation._id,\r\n            })\r\n        })\r\n        handleClose()\r\n    }, [chooses])\r\n\r\n    const handleChangeSearch = useCallback((value) => setSearch(value), [])\r\n\r\n    return (\r\n        <Dialog\r\n            isOpen={forwardDialog.forward.isShow}\r\n            className=\"dialog-lg\"\r\n            onRequestClose={handleClose}\r\n        >\r\n            <Dialog.Header handleClose={handleClose}>Chia sẻ</Dialog.Header>\r\n\r\n            <div className=\"p-3\">\r\n                <Dialog.Search\r\n                    id=\"search-forward\"\r\n                    name=\"search-forward\"\r\n                    placeholder=\"Tìm kiếm người chia sẻ...\"\r\n                    setResultSearch={setSearch}\r\n                    onChange={handleChangeSearch}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"flex flex-1 flex-col p-3 pt-0\">\r\n                <div className=\"mb-2 dark:text-gray-100\">Danh sách bạn bè</div>\r\n                <ListFriendChooses\r\n                    chooses={chooses}\r\n                    handleChoose={handleChoose}\r\n                    list={resultSearch}\r\n                ></ListFriendChooses>\r\n            </div>\r\n\r\n            <div className=\"w-full\">\r\n                <div className=\"border-y p-3 dark:border-y-gray-500\">\r\n                    <div className=\"mb-3 text-sm font-thin leading-none dark:text-gray-100 \">\r\n                        Nội dung chia sẻ\r\n                    </div>\r\n                    <div className=\"flex items-center justify-between rounded-lg bg-gray-200 p-3 dark:bg-gray-700\">\r\n                        <div className=\"max-h-16 flex-1 overflow-auto text-sm font-normal leading-5 dark:text-gray-100\">\r\n                            <TypeMessage\r\n                                type={forwardDialog.forward?.message?.type}\r\n                                messInfo={forwardDialog.forward?.message}\r\n                                isTiny={true}\r\n                                contentEditable={isEdit}\r\n                                textState={setTextMessage}\r\n                            />\r\n                        </div>\r\n                        {forwardDialog.forward?.message?.type === 'text' &&\r\n                            !isEdit && (\r\n                                <div className=\"\">\r\n                                    <Button\r\n                                        className=\"mx-3 !min-w-0 !rounded bg-gray-50 bg-opacity-70 !p-1 text-xs font-semibold text-black shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                                        onClick={() => setIsEdit(true)}\r\n                                    >\r\n                                        Sửa\r\n                                    </Button>\r\n                                </div>\r\n                            )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"select-none border-t p-3 text-right\">\r\n                <Button\r\n                    onClick={handleClose}\r\n                    className=\"mr-1 !min-w-0 !rounded bg-gray-50 bg-opacity-70 !px-4 !py-2 text-center text-sm font-semibold text-black shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                >\r\n                    Hủy\r\n                </Button>\r\n                <Button\r\n                    className=\"min-w-0 !rounded bg-purple-500 !px-4 !py-2 text-center text-sm font-semibold text-white shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                    disabled={chooses.length === 0 ? 'disabled' : ''}\r\n                    onClick={handleForward}\r\n                >\r\n                    Chia sẻ\r\n                </Button>\r\n            </div>\r\n        </Dialog>\r\n    )\r\n}\r\n\r\nexport default memo(ForwardDialog)\r\n","import { memo, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport { useDispatch } from 'react-redux'\r\nimport { STORE_NAME_INDEXEDDB } from '../../../constant'\r\nimport { del } from '../../../indexDB'\r\nimport { updateLastestMessage } from '../../../redux/slice/conversationSlice'\r\nimport { removeMessageById } from '../../../redux/slice/messageSlice'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport Button from '../../Button'\r\n\r\nfunction ChatOption({ own, idMessage, conversationId }) {\r\n    const [referenceEl, setReferenceEl] = useState()\r\n    const [popperEl, setPopperEl] = useState()\r\n    const dispatch = useDispatch()\r\n    const axios = createAxios()\r\n\r\n    const { styles, attributes } = usePopper(referenceEl, popperEl, {\r\n        placement: 'bottom-end',\r\n        modifiers: [\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    allowedAutoPlacements: ['bottom-end', 'top-end'],\r\n                },\r\n            },\r\n        ],\r\n    })\r\n\r\n    return (\r\n        <div className=\"chat-option\">\r\n            <div className={own ? 'order-1 ' : ''}>\r\n                <div className=\"chat-option-parent\" ref={setReferenceEl}>\r\n                    <Button circle={true} primary={true} className=\"!w-8 !h-8\">\r\n                        <div className=\"flex\">\r\n                            <ion-icon name=\"ellipsis-vertical\"></ion-icon>\r\n                        </div>\r\n                    </Button>\r\n                </div>\r\n                <div\r\n                    className=\"absolute chat-option-child bg-gray-200 dark:bg-gray-700 w-40 py-1 rounded-lg overflow-hidden\"\r\n                    ref={setPopperEl}\r\n                    style={styles.popper}\r\n                    {...attributes.popper}\r\n                >\r\n                    <div\r\n                        onClick={async e => {\r\n                            console.log(idMessage)\r\n                            dispatch(removeMessageById(idMessage))\r\n\r\n                            await del(\r\n                                idMessage,\r\n                                conversationId,\r\n                                STORE_NAME_INDEXEDDB\r\n                            )\r\n                            await axios.delete(`/message/${idMessage}`)\r\n                            const { data } = await axios.get(\r\n                                `/conversation/get-conversation/${conversationId}`\r\n                            )\r\n                            dispatch(\r\n                                updateLastestMessage({\r\n                                    conversationId,\r\n                                    type: data?.type,\r\n                                    text: data?.text,\r\n                                    createdAt: data?.createdAt,\r\n                                    updatedAt: data?.updatedAt,\r\n                                    senderId: data?.senderId,\r\n                                })\r\n                            )\r\n                        }}\r\n                        className=\"flex items-center justify-between py-1 px-3 text-sm  hover:bg-black hover:bg-opacity-10 dark:hover:bg-black dark:hover:bg-opacity-30 cursor-pointer\"\r\n                    >\r\n                        <span>Xóa</span>\r\n                        <ion-icon name=\"trash-sharp\"></ion-icon>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ChatOption)\r\n","import { memo, useState } from 'react'\r\nimport { usePopper } from 'react-popper'\r\nimport { MESSAGE_ICON } from '../../../constant'\r\nimport Button from '../../Button'\r\n\r\nfunction Emoji({ own, handleIncreaseEmoji }) {\r\n    const [referenceEl, setReferenceEl] = useState()\r\n    const [popperEl, setPopperEl] = useState()\r\n\r\n    const { styles, attributes } = usePopper(referenceEl, popperEl, {\r\n        placement: 'bottom',\r\n        modifiers: [\r\n            {\r\n                name: 'flip',\r\n                options: {\r\n                    allowedAutoPlacements: ['bottom', 'top'],\r\n                },\r\n            },\r\n        ],\r\n    })\r\n\r\n    return (\r\n        <div className={own ? 'order-3' : ''}>\r\n            <div className=\"chat-option\">\r\n                <div ref={setReferenceEl}>\r\n                    <Button circle={true} primary={true} className=\"!w-8 !h-8\">\r\n                        <div className=\"flex\">\r\n                            <ion-icon name=\"happy-outline\"></ion-icon>\r\n                        </div>\r\n                    </Button>\r\n\r\n                    <div\r\n                        className=\"flex absolute chat-option-child bg-gray-200 dark:bg-gray-700 px-2 py-1 rounded-full overflow-hidden\"\r\n                        ref={setPopperEl}\r\n                        style={styles.popper}\r\n                        {...attributes.popper}\r\n                    >\r\n                        {Object.keys(MESSAGE_ICON).map((key, index) => (\r\n                            <div\r\n                                key={index}\r\n                                onClick={() => handleIncreaseEmoji(key)}\r\n                                className=\"w-5 h-5 m-1 transform hover:scale-125 cursor-pointer select-none\"\r\n                            >\r\n                                <img alt=\"\" src={MESSAGE_ICON[key]} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Emoji)\r\n","import { memo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { toggleForward } from '../../../redux/slice/dialog/forwardSlice'\r\nimport Button from '../../Button'\r\n\r\nfunction ForwardButton({ own, message }) {\r\n    const dispatch = useDispatch()\r\n    const forwardMessage = {\r\n        ...message,\r\n    }\r\n    delete forwardMessage.time\r\n    const handleToggle = () => dispatch(toggleForward(forwardMessage))\r\n\r\n    return (\r\n        <div className={own ? 'order-2' : ''} onClick={handleToggle}>\r\n            <div className=\"icon\">\r\n                <Button circle={true} primary={true} className=\"!w-8 !h-8\">\r\n                    <div className=\"flex\">\r\n                        <ion-icon name=\"arrow-redo-outline\"></ion-icon>\r\n                    </div>\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ForwardButton)\r\n","import moment from 'moment'\r\nimport { useCallback } from 'react'\r\nimport { memo, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n    CONVERSATION_TYPE,\r\n    MESSAGE_ICON,\r\n    STORE_NAME_INDEXEDDB,\r\n} from '../../../constant'\r\nimport { set } from '../../../indexDB'\r\nimport { updateMessageById } from '../../../redux/slice/messageSlice'\r\nimport { socket } from '../../../socket'\r\nimport Avatar from '../Avatar'\r\nimport ChatOption from './ChatOption'\r\nimport Emoji from './Emoji'\r\nimport ForwardButton from './ForwardButton'\r\nimport TypeMessage from './TypeMessage'\r\n\r\nfunction Message({ messInfo, own, type }) {\r\n    const [hover, setHover] = useState(false)\r\n    const [emoji, setEmoji] = useState(messInfo.emoji)\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n\r\n    const formatTime = () => {\r\n        const time = messInfo?.time() || undefined\r\n        if (time) return moment(time).format('H:mm')\r\n        else return ''\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (emoji) {\r\n            setEmoji(messInfo.emoji)\r\n        }\r\n    }, [messInfo.emoji])\r\n\r\n    const handleIncreaseEmoji = useCallback((key) => {\r\n        setEmoji((prev) => {\r\n            let newEmojiList =\r\n                prev[key] === undefined\r\n                    ? { ...prev, [key]: 1 }\r\n                    : { ...prev, [key]: prev[key] + 1 }\r\n\r\n            let propertyEmoji = Object.keys(newEmojiList).sort(\r\n                (a, b) => newEmojiList[b] - newEmojiList[a]\r\n            )\r\n\r\n            newEmojiList = propertyEmoji.reduce((acc, cur) => {\r\n                acc[cur] = newEmojiList[cur]\r\n                return acc\r\n            }, {})\r\n\r\n            socket.emit(\r\n                'setMessageEmoji',\r\n                {\r\n                    _id: messInfo._id,\r\n                    emoji: newEmojiList,\r\n                    room: messInfo.conversationId,\r\n                },\r\n                async ({ status, message }) => {\r\n                    await set(\r\n                        message._id,\r\n                        message,\r\n                        message.conversationId,\r\n                        STORE_NAME_INDEXEDDB\r\n                    )\r\n                }\r\n            )\r\n\r\n            return newEmojiList\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className=\"flex-1 px-4 pb-2\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n                onClick={() => setHover(true)}\r\n                onTouchStart={() => setHover(true)}\r\n                onTouchCancel={() => setHover(false)}\r\n                onTouchEnd={() => setHover(false)}\r\n            >\r\n                <div\r\n                    className={`flex flex-nowrap ${\r\n                        own\r\n                            ? 'flex-wrap-reverse justify-end'\r\n                            : 'flex-wrap justify-start'\r\n                    }`}\r\n                >\r\n                    <div\r\n                        className={`relative mb-3 h-max min-w-[40px] ${\r\n                            own ? 'order-2 ml-3' : 'mr-3'\r\n                        }`}\r\n                    >\r\n                        <Avatar\r\n                            isNoDot={true}\r\n                            user={messInfo.senderId}\r\n                            className={`h-10 w-10 rounded-full ${\r\n                                formatTime() ? '' : 'hidden'\r\n                            }`}\r\n                            alt=\"\"\r\n                        />\r\n                        {conversation?.creator?._id === messInfo.senderId && (\r\n                            <span className=\"absolute top-[27px] right-0 flex h-4 w-4 items-center justify-center rounded-full bg-black text-xs text-yellow-500 opacity-70\">\r\n                                <ion-icon name=\"key-sharp\"></ion-icon>\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                    <div\r\n                        className={` order-1 flex items-center justify-start overflow-hidden`}\r\n                        style={{\r\n                            width: `${type === 'link' ? '240px' : 'auto'}`,\r\n                        }}\r\n                    >\r\n                        <div\r\n                            className={` max-w-full rounded-xl bg-slate-100 p-2 text-black shadow-lg dark:bg-gray-600 dark:text-gray-50 sm:p-2 ${\r\n                                own ? 'order-1 ml-auto' : ''\r\n                            }`}\r\n                        >\r\n                            {conversation?.type !==\r\n                                CONVERSATION_TYPE.personal && (\r\n                                <p className=\"text-13 text-slate-500 dark:text-slate-300\">\r\n                                    {messInfo?.name}\r\n                                </p>\r\n                            )}\r\n                            <TypeMessage type={type} messInfo={messInfo} />\r\n                            <div className=\"flex flex-wrap items-center justify-end\">\r\n                                <div className=\"text-right text-xs text-gray-500 dark:text-gray-300\">\r\n                                    {Object.keys(emoji).length !== 0 && (\r\n                                        <div className=\"my-2 flex h-6 w-full flex-1 cursor-pointer select-none items-center rounded-full border p-1 text-center text-sm\">\r\n                                            {Object.keys(emoji).map((key) => (\r\n                                                <img\r\n                                                    alt=\"\"\r\n                                                    key={key}\r\n                                                    src={MESSAGE_ICON[key]}\r\n                                                    className=\"mx-auto h-full\"\r\n                                                />\r\n                                            ))}\r\n                                            <span className=\"ml-1\">\r\n                                                {Object.values(emoji).reduce(\r\n                                                    (acc, cur) => acc + cur,\r\n                                                    0\r\n                                                )}\r\n                                            </span>\r\n                                        </div>\r\n                                    )}\r\n                                    {formatTime()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div\r\n                        className={`flex min-w-[150px] justify-end ${\r\n                            own ? 'order-[0]' : 'order-1'\r\n                        }`}\r\n                    >\r\n                        {hover && (\r\n                            <div\r\n                                className={`chat-message-action flex w-full items-center justify-evenly rounded-lg px-0 dark:text-gray-100 sm:px-4 ${\r\n                                    own ? 'mr-2 sm:mr-4' : 'ml-2 sm:ml-4'\r\n                                }`}\r\n                            >\r\n                                <Emoji\r\n                                    own={own}\r\n                                    handleIncreaseEmoji={handleIncreaseEmoji}\r\n                                />\r\n\r\n                                <ForwardButton own={own} message={messInfo} />\r\n\r\n                                <ChatOption\r\n                                    own={own}\r\n                                    idMessage={messInfo._id}\r\n                                    conversationId={messInfo.conversationId}\r\n                                />\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Message)\r\n","import moment from 'moment'\r\nimport { memo, useEffect, useRef } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { CONVERSATION_BG } from '../../../assets/image'\r\nimport {\r\n    loadMoreMessage,\r\n    updateMessageById,\r\n} from '../../../redux/slice/messageSlice'\r\nimport { socket } from '../../../socket'\r\nimport Message from '../Message'\r\nimport _ from 'lodash'\r\n\r\nfunction Loading() {\r\n    return (\r\n        <div className=\"absolute top-5 flex w-full items-center bg-transparent\">\r\n            <div className=\"mx-auto inline-block rounded-full bg-gray-100 p-1\">\r\n                <div className=\"circle-loading !h-5 !w-5\"></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ContentMessage() {\r\n    let { messageCurrent, isHasMore } = useSelector((state) => state.message)\r\n    let tempTime = useRef(new Date().getTime())\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const dispatch = useDispatch()\r\n    const theme = useSelector((state) => state.theme)\r\n\r\n    useEffect(() => {\r\n        socket.on('setMessageEmoji', ({ id, emoji }) => {\r\n            dispatch(updateMessageById({ id, emoji }))\r\n        })\r\n    }, [])\r\n\r\n    function groupByDay(array) {\r\n        return array.reduce((result, item) => {\r\n            // Lấy ngày từ trường \"createdAt\"\r\n            const date = new Date(item.createdAt).toLocaleDateString()\r\n\r\n            // Kiểm tra xem nhóm ngày đã tồn tại trong đối tượng nhóm chưa\r\n            if (!result[date]) {\r\n                result[date] = []\r\n            }\r\n\r\n            // Thêm phần tử vào nhóm\r\n            result[date].push(item)\r\n\r\n            return result\r\n        }, {})\r\n    }\r\n\r\n    function groupByCreatedAt(array) {\r\n        if (array.length === 0) return\r\n        const result = []\r\n\r\n        // Sắp xếp mảng theo thứ tự tăng dần của createdAt\r\n        array.sort((a, b) => new Date(a.createdAt) - new Date(b.createdAt))\r\n\r\n        let group = [array[0]]\r\n\r\n        for (let i = 1; i < array.length; i++) {\r\n            const current = array[i]\r\n            const previous = array[i - 1]\r\n\r\n            // Tính khoảng thời gian giữa các createdAt\r\n            const timeDiff = Math.abs(\r\n                new Date(current.createdAt) - new Date(previous.createdAt)\r\n            )\r\n            const minutesDiff = Math.floor(timeDiff / (1000 * 60))\r\n\r\n            // Kiểm tra nếu khoảng thời gian nhỏ hơn hoặc bằng 10 phút và cùng có cùng senderId\r\n            if (\r\n                minutesDiff <= 10 &&\r\n                current?.senderId._id === previous?.senderId._id\r\n            ) {\r\n                // Thêm vào nhóm hiện tại\r\n                group.push(current)\r\n            } else {\r\n                // Tạo một nhóm mới và thêm vào kết quả\r\n                result.push(group)\r\n                group = [current]\r\n            }\r\n        }\r\n\r\n        // Thêm nhóm cuối cùng vào kết quả\r\n        result.push(group)\r\n\r\n        return result\r\n    }\r\n    \r\n    return (\r\n        <div\r\n            id=\"scrollableDiv\"\r\n            className=\"relative flex flex-1 flex-col-reverse overflow-auto bg-cover\"\r\n            style={{\r\n                backgroundImage: `url(${\r\n                    theme.colorTheme === 'light'\r\n                        ? CONVERSATION_BG.LIGHT\r\n                        : CONVERSATION_BG.DARK\r\n                })`,\r\n            }}\r\n        >\r\n            <InfiniteScroll\r\n                dataLength={messageCurrent.length}\r\n                next={() => dispatch(loadMoreMessage())}\r\n                style={{ display: 'flex', flexDirection: 'column-reverse' }}\r\n                inverse={true}\r\n                hasMore={isHasMore && messageCurrent.length !== 0}\r\n                loader={<Loading />}\r\n                scrollableTarget=\"scrollableDiv\"\r\n            >\r\n                {Object.entries(groupByDay(_.clone(messageCurrent)))?.map(\r\n                    ([key, value], i) => (\r\n                        <div key={key}>\r\n                            <p className=\"my-2 text-center text-11 text-gray-500 dark:text-gray-300\">\r\n                                {moment(key).format('DD/MM/YYYY')}\r\n                            </p>\r\n                            {groupByCreatedAt(_.clone(value)).map((messages) =>\r\n                                messages.map((message, index) => (\r\n                                    <div\r\n                                        key={message._id}\r\n                                        className=\"message-item\"\r\n                                    >\r\n                                        <Message\r\n                                            messInfo={{\r\n                                                ...message,\r\n                                                text:\r\n                                                    ([\r\n                                                        undefined,\r\n                                                        'text',\r\n                                                        'link',\r\n                                                    ].includes(message?.type) &&\r\n                                                        message.text) ||\r\n                                                    '',\r\n                                                listImg:\r\n                                                    (message?.type ===\r\n                                                        'imageGroup' &&\r\n                                                        message.imageGroup) ||\r\n                                                    [],\r\n                                                file:\r\n                                                    (message?.type === 'file' &&\r\n                                                        message.file) ||\r\n                                                    {},\r\n                                                time: () => {\r\n                                                    if (\r\n                                                        index ===\r\n                                                        messages.length - 1\r\n                                                    )\r\n                                                        return message.createdAt\r\n                                                },\r\n                                                emoji: message?.emoji || {},\r\n                                                disableShareButton: true,\r\n                                                disableDeleteButton: true,\r\n                                            }}\r\n                                            createdAt={message.createdAt}\r\n                                            own={\r\n                                                user._id ===\r\n                                                message?.senderId._id\r\n                                            }\r\n                                            type={message?.type || 'text'}\r\n                                        />\r\n                                    </div>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    )\r\n                )}\r\n            </InfiniteScroll>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ContentMessage)\r\n","import { useState } from 'react';\r\nimport { memo, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { toggleCall } from '../../../redux/slice/dialog/callSlice';\r\nimport Button from '../../Button';\r\nimport Dialog from '../../Dialog';\r\n\r\nfunction DialogCall() {\r\n    const dispatch = useDispatch();\r\n    const { call } = useSelector(state => state.callDialog);\r\n    const closeModal = () => dispatch(toggleCall({ isShow: false }));\r\n\r\n    return (\r\n        <Dialog isOpen={call.isShow} onRequestClose={closeModal} className=\"dialog-center w-[400px]\">\r\n            <div className=\"py-20\">\r\n                <div>\r\n                    <img\r\n                        src=\"https://random.imagecdn.app/200/200\"\r\n                        alt=\"\"\r\n                        className=\"w-20 h-20 mx-auto rounded-full mb-4\"\r\n                    />\r\n                    <h2 className=\"text-xl text-center text-gray-800 dark:text-gray-100 mb-2\">Lê Trạng Lân</h2>\r\n                    <p className=\"text-center text-gray-800 dark:text-gray-400 mb-4\">\r\n                        {\r\n                            {\r\n                                audio: 'Bắt đầu cuộc gọi thoại',\r\n                                video: 'Bắt đầu cuộc gọi video',\r\n                            }[call.type]\r\n                        }\r\n                    </p>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                    <Button\r\n                        circle={true}\r\n                        className=\"call-btn btn-error p-4 leading-0 mx-4 text-lg text-white\"\r\n                        style={{ background: '#ef476f' }}\r\n                        onClick={closeModal}\r\n                    >\r\n                        <ion-icon name=\"close-outline\"></ion-icon>\r\n                    </Button>\r\n                    <Button\r\n                        circle={true}\r\n                        className=\"call-btn btn-success p-4 leading-0 mx-4 text-lg text-white\"\r\n                        style={{ background: '#06d6a0' }}\r\n                    >\r\n                        {\r\n                            {\r\n                                audio: <ion-icon name=\"call\"></ion-icon>,\r\n                                video: <ion-icon name=\"videocam\"></ion-icon>,\r\n                            }[call.type]\r\n                        }\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default memo(DialogCall);\r\n","import { useCallback } from 'react'\r\nimport { memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { changeCurrentChat } from '../../../redux/slice/currentChatSlice'\r\nimport { toggleCall } from '../../../redux/slice/dialog/callSlice'\r\nimport { toogleConversationInfo } from '../../../redux/slice/dialog/conversationInfoSlice'\r\nimport { removeAllMessage } from '../../../redux/slice/messageSlice'\r\nimport { updateToggleMess } from '../../../redux/slice/viewMessageSlice'\r\nimport Button from '../../Button'\r\nimport Avatar from '../Avatar'\r\nimport { toast } from 'react-toastify'\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch()\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const theme = useSelector((state) => state.theme)\r\n\r\n    const handleReturn = useCallback(() => {\r\n        dispatch(removeAllMessage())\r\n        dispatch(updateToggleMess({ toggleMess: null }))\r\n        dispatch(changeCurrentChat({ _id: null }))\r\n    }, [])\r\n\r\n    const handleCallAudioClick = useCallback(() => {\r\n        toast.success(\"Đang cập nhật\")\r\n        // dispatch(toggleCall({ isShow: true, type: 'audio' }))\r\n    }, [])\r\n\r\n    const handleCallVideoClick = useCallback(() => {\r\n        toast.success(\"Đang cập nhật\")\r\n        // dispatch(toggleCall({ isShow: true, type: 'video' }))\r\n    }, [])\r\n\r\n    const handleEllipsisClick = useCallback(() => {\r\n        dispatch(toogleConversationInfo())\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"flex h-16 w-full items-center justify-between border-b border-gray-300 p-2 transition-none dark:border-gray-500 sm:px-4 sm:py-2\">\r\n            <div className=\"flex items-center justify-center dark:text-gray-200\">\r\n                {theme.isHidden && (\r\n                    <div className=\"mr-2\">\r\n                        <Button\r\n                            circle={true}\r\n                            primary={true}\r\n                            className=\"button-toggle !h-8 !w-8 !border-0 p-0\"\r\n                            onClick={handleReturn}\r\n                        >\r\n                            <div className=\"flex h-8 w-8 cursor-pointer items-center justify-center\">\r\n                                <ion-icon name=\"chevron-back-sharp\"></ion-icon>\r\n                            </div>\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n                <div className=\"mr-3\">\r\n                    <Avatar\r\n                        user={{\r\n                            id: conversation?.receiverId,\r\n                            avatar: conversation.avatar,\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"text-semibold line-clamp-1\">\r\n                    {conversation?.name || ''}\r\n                </div>\r\n            </div>\r\n            <div className=\"flex items-center justify-center text-base dark:text-gray-200\">\r\n                <div className=\"icon\">\r\n                    <Button\r\n                        circle={true}\r\n                        primary={true}\r\n                        className=\"button-toggle !h-8 !w-8 !border-0 p-0\"\r\n                        onClick={handleCallAudioClick}\r\n                    >\r\n                        <div className=\"flex h-8 w-8 cursor-pointer items-center justify-center\">\r\n                            <ion-icon name=\"call\"></ion-icon>\r\n                        </div>\r\n                    </Button>\r\n                </div>\r\n                <div className=\"icon\">\r\n                    <Button\r\n                        circle={true}\r\n                        primary={true}\r\n                        className=\"button-toggle mx-2 !h-8 !w-8 !border-0 p-0\"\r\n                        onClick={handleCallVideoClick}\r\n                    >\r\n                        <div className=\"flex h-8 w-8 cursor-pointer items-center justify-center\">\r\n                            <ion-icon name=\"videocam\"></ion-icon>\r\n                        </div>\r\n                    </Button>\r\n                </div>\r\n                <div className=\"icon\">\r\n                    <Button\r\n                        circle={true}\r\n                        primary={true}\r\n                        className=\"button-toggle !h-8 !w-8 !border-0 p-0\"\r\n                        onClick={handleEllipsisClick}\r\n                    >\r\n                        <div className=\"flex h-8 w-8 cursor-pointer items-center justify-center\">\r\n                            <ion-icon name=\"ellipsis-horizontal-sharp\"></ion-icon>\r\n                        </div>\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Header)\r\n","import axios from 'axios'\r\nimport cloudinary from 'cloudinary/lib/cloudinary'\r\n\r\ncloudinary.config({\r\n    cloud_name: process.env.REACT_APP_CLOUDINARY_NAME,\r\n    api_key: process.env.REACT_APP_CLOUDINARY_KEY,\r\n    api_secret: process.env.REACT_APP_CLOUDINARY_API_SECRET,\r\n})\r\n\r\nconst deleteImage = async public_id => {\r\n    cloudinary.v2.uploader\r\n        .destroy(public_id, function (error, result) {\r\n            console.error(error)\r\n        })\r\n        .then(resp => console.log(resp))\r\n        .catch(_err =>\r\n            console.error('Something went wrong, please try again later.')\r\n        )\r\n}\r\n\r\nconst uploadFile = async file => {\r\n    const formData = new FormData()\r\n\r\n    formData.append('file', file)\r\n    formData.append(\r\n        'upload_preset',\r\n        process.env.REACT_APP_CLOUDINARY_PRESET_NAME\r\n    )\r\n\r\n    return await axios.post(\r\n        'https://api.cloudinary.com/v1_1/dtgkkyqm6/auto/upload',\r\n        formData\r\n    )\r\n}\r\n\r\nexport { deleteImage,uploadFile }\r\n","import { memo } from \"react\"\r\n\r\nfunction ButtonCircle({ children, clickFunc, title, style, className }) {\r\n\treturn (\r\n\t\t<div className='icon'>\r\n\t\t\t<div\r\n\t\t\t\tstyle={style}\r\n\t\t\t\tclassName={`button-toggle p-2 text-xl flex items-center justify-center cursor-pointer rounded-full ${className}`}\r\n\t\t\t\tonClick={clickFunc}\r\n\t\t\t\ttitle={title}>\r\n\t\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default memo(ButtonCircle)\r\n","import { memo } from 'react'\r\nimport ButtonCircle from './ButtonCircle'\r\n\r\nfunction ButtonFile({ id, children, ...props }) {\r\n    return (\r\n        <label htmlFor={id} className=\"flex\">\r\n            <div className='icon'>\r\n                <div className=\"dark:text-gray-200\">\r\n                    <ButtonCircle>\r\n                        <input\r\n                            type=\"file\"\r\n                            {...props}\r\n                            multiple\r\n                            id={id}\r\n                            name={id}\r\n                            hidden\r\n                        />\r\n                        {children}\r\n                    </ButtonCircle>\r\n                </div>\r\n            </div>\r\n        </label>\r\n    )\r\n}\r\n\r\nexport default memo(ButtonFile)\r\n","import Picker from 'emoji-picker-react'\r\nimport { memo, useEffect, useRef, useState } from 'react'\r\nimport Button from '../../Button'\r\n\r\nfunction EmojiPicker({ handleClick }) {\r\n    const [open, setOpen] = useState(false)\r\n    const pop = useRef(null)\r\n    const el = useRef(null)\r\n\r\n    const useDetectOutsideClick = (ref, callback) => {\r\n        const handleClickOutside = e => {\r\n            if (\r\n                ref.every(ref => ref.current && !ref.current.contains(e.target))\r\n            ) {\r\n                return callback()\r\n            }\r\n        }\r\n\r\n        //Handle mousedown outside hide Picker\r\n        useEffect(() => {\r\n            document.addEventListener('mousedown', handleClickOutside)\r\n            return () =>\r\n                document.removeEventListener('mousedown', handleClickOutside)\r\n        })\r\n\r\n        //Handle resize hide Picker\r\n        useEffect(() => {\r\n            window.addEventListener('resize', () => setOpen(false))\r\n            return () =>\r\n                window.removeEventListener('resize', () => setOpen(false))\r\n        })\r\n    }\r\n\r\n    useDetectOutsideClick([el, pop], () => setOpen(false))\r\n\r\n    return (\r\n        <div\r\n            className=\"relative text-xl flex items-center text-gray-900  dark:text-gray-200 cursor-pointer\"\r\n            onClick={() => setOpen(true)}\r\n            ref={pop}\r\n        >\r\n            <div className=\"icon\">\r\n                <Button circle={true} primary={true} className=\"!w-9 !h-9\">\r\n                    <div className=\"flex\">\r\n                        <ion-icon name=\"happy\"></ion-icon>\r\n                    </div>\r\n                </Button>\r\n                {open && (\r\n                    <div className=\"absolute bottom-full md:right-0\" ref={el}>\r\n                        <Picker\r\n                            onEmojiClick={handleClick}\r\n                            disableSearchBar={true}\r\n                            native={true}\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(EmojiPicker)\r\n","import { memo, useCallback, useEffect, useRef, useState } from 'react'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport { useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport { STATUS_RESPONSE } from '../../../constant'\r\nimport { uploadFile } from '../../../services/cloudinary'\r\nimport { socket } from '../../../socket'\r\nimport { getResourceType } from '../../../ulti'\r\nimport ButtonFile from '../../Button/ButtonFile'\r\nimport EmojiPicker from './EmojiPicker'\r\n\r\nfunction InputMessage({ setLoadingMessages }) {\r\n    const editMess = useRef()\r\n    const sendBtn = useRef()\r\n    const [chosenEmoji, setChosenEmoji] = useState()\r\n    const { conversation } = useSelector(state => state.currentChat)\r\n    const { user } = useSelector(state => state.auth.currentUser)\r\n    const onEmojiClick = useCallback(\r\n        (event, emojiObject) => setChosenEmoji(emojiObject),\r\n        []\r\n    )\r\n\r\n    // Send message to server\r\n    const sendMessage = () => {\r\n        const message = editMess.current.innerHTML\r\n        if (message.trim() === '') return\r\n        socket.emit(\r\n            'chatMessage',\r\n            {\r\n                roomId: conversation._id,\r\n                text: message,\r\n                senderId: user._id,\r\n                name: user.name,\r\n            },\r\n            response => {\r\n                console.log(response)\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    editMess.current.innerHTML = ''\r\n                } else {\r\n                    toast.error('Gửi tin nhắn thất bại')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    // Send message when enter key is pressed\r\n    const handlePressEnter = e => {\r\n        if (e.which === 13 && !e.shiftKey) {\r\n            e.preventDefault()\r\n            sendBtn.current.click()\r\n        }\r\n    }\r\n\r\n    // Emoji picker\r\n    useEffect(() => {\r\n        if (chosenEmoji) {\r\n            editMess.current.innerHTML += chosenEmoji.emoji\r\n        }\r\n        editMess.current?.focus()\r\n    }, [chosenEmoji])\r\n\r\n    useEffect(() => {\r\n        editMess.current.setAttribute('contenteditable', 'plaintext-only')\r\n        // editMess.current\r\n    }, [])\r\n\r\n    const handleChangeImage = async e => {\r\n        setLoadingMessages(true)\r\n        const files = e.target.files\r\n        const listImage = []\r\n\r\n        if (files.length === 0) return\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            const { data } = await uploadFile(files[i])\r\n            listImage.push(data.secure_url)\r\n        }\r\n\r\n        socket.emit(\r\n            'chatMessage',\r\n            {\r\n                roomId: conversation._id,\r\n                imageGroup: listImage,\r\n                senderId: user._id,\r\n                type: 'imageGroup',\r\n                name: user.name,\r\n            },\r\n            response => {\r\n                setLoadingMessages(false)\r\n                e.target.value = ''\r\n                if (response.status !== STATUS_RESPONSE.success) {\r\n                    toast.error('Gửi tin nhắn thất bại')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleChangeFile = async e => {\r\n        setLoadingMessages(true)\r\n        const files = e.target.files\r\n\r\n        if (files.length === 0) return\r\n\r\n        for (let i = 0; i < files.length; i++) {\r\n            const { data } = await uploadFile(files[i])\r\n            socket.emit(\r\n                'chatMessage',\r\n                {\r\n                    roomId: conversation._id,\r\n                    file: {\r\n                        name: data?.original_filename,\r\n                        link: data?.secure_url,\r\n                        size: data?.bytes,\r\n                        type: getResourceType(data?.secure_url, data?.format),\r\n                    },\r\n                    senderId: user._id,\r\n                    name: user.name,\r\n                    type: 'file',\r\n                },\r\n                response => {\r\n                    setLoadingMessages(false)\r\n                    e.target.value = ''\r\n                    if (response.status !== STATUS_RESPONSE.success) {\r\n                        toast.error('Gửi tin nhắn thất bại')\r\n                    }\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"w-full p-2 border-t border-gray-300 dark:border-gray-500 sm:px-4\">\r\n            <div className=\"flex items-center flex-wrap\">\r\n                <div className=\"flex-1 order-2 md:order-1\">\r\n                    <ContentEditable\r\n                        className=\"editable outline-none rounded-xl p-3 cursor-text bg-gray-500 bg-opacity-25 border-gray-200 text-black dark:text-gray-100\"\r\n                        style={{\r\n                            overflow: 'auto',\r\n                            minHeight: '24px',\r\n                            maxHeight: '124px',\r\n                            fontSize: '15px',\r\n                            lineHeight: '24px',\r\n                        }}\r\n                        innerRef={editMess}\r\n                        html={editMess.current?.innerHTML || ''}\r\n                        onKeyPress={handlePressEnter}\r\n                        data-placeholder=\"Nhập tin nhắn tới Lân\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"order-1 flex w-full mb-2 md:mb-0 md:order-2 md:w-auto\">\r\n                    <div className=\"md:mx-2\">\r\n                        <EmojiPicker handleClick={onEmojiClick} />\r\n                    </div>\r\n                    <div className=\"md:mx-2\">\r\n                        <ButtonFile\r\n                            id=\"attach-file\"\r\n                            onChange={handleChangeFile}\r\n                        >\r\n                            <ion-icon name=\"attach\"></ion-icon>\r\n                        </ButtonFile>\r\n                    </div>\r\n                    <div className=\"md:mx-2\">\r\n                        <ButtonFile\r\n                            onChange={handleChangeImage}\r\n                            id=\"image-file\"\r\n                            accept=\"image/*\"\r\n                        >\r\n                            <ion-icon name=\"image\"></ion-icon>\r\n                        </ButtonFile>\r\n                    </div>\r\n                </div>\r\n                <div\r\n                    className=\"hover:bg-indigo-700 bg-indigo-500 rounded-lg order-3 p-3 text-xl flex items-center text-gray-100 cursor-pointer ml-10 md:ml-0\"\r\n                    onClick={sendMessage}\r\n                    ref={sendBtn}\r\n                >\r\n                    <ion-icon name=\"send\"></ion-icon>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(InputMessage)\r\n","import { memo, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport ConversationInfo from '../../ConversationInfo'\r\nimport ImageDialog from '../ImageMessage/ImageDialog'\r\nimport ForwardDialog from '../Message/ForwardDialog'\r\nimport ContentMessage from './ContentMessage'\r\nimport DialogCall from './DialogCall'\r\nimport Header from './Header'\r\nimport InputMessage from './InputMessage'\r\n\r\nfunction ChatView() {\r\n    const { toggleMess } = useSelector((state) => state.viewMessage)\r\n    const conversationInfoDialog = useSelector(\r\n        (state) => state.conversationInfoDialog\r\n    )\r\n    const theme = useSelector((state) => state.theme)\r\n    const [loadingMessage, setLoadingFileMessages] = useState(false)\r\n\r\n    const toggleViewMessage = () => {\r\n        if (theme?.isHidden && toggleMess) return 'hidden toggle-mess'\r\n        if (theme?.isHidden && !toggleMess) return 'hidden not-toggle-mess'\r\n        if (!theme?.isHidden) return 'not-hidden'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`view-message flex flex-col ${toggleViewMessage()}`}\r\n            >\r\n                <div className=\"flex h-full flex-1 flex-col\">\r\n                    <Header />\r\n                    <ContentMessage loadingMessage={loadingMessage} />\r\n                    <InputMessage setLoadingMessages={setLoadingFileMessages} />\r\n                </div>\r\n                <ForwardDialog />\r\n                <ImageDialog />\r\n                <DialogCall />\r\n            </div>\r\n\r\n            {conversationInfoDialog.conversationInfo && <ConversationInfo />}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(ChatView)\r\n","import Swiper from 'react-id-swiper'\r\nimport { useSelector } from 'react-redux'\r\nimport { Pagination, Autoplay } from 'swiper'\r\nimport { WELCOME_SWIPER } from '../../../assets/image'\r\n\r\nexport default function ChatWelcome() {\r\n    const theme = useSelector(state => state.theme)\r\n\r\n    const toggleViewMessage = () => {\r\n        if (theme?.isHidden && !false) return 'hidden not-toggle-mess'\r\n        if (!theme?.isHidden) return 'not-hidden'\r\n    }\r\n\r\n    const data = [\r\n        {\r\n            img: WELCOME_SWIPER[0],\r\n            title: 'Nhắn tin nhiều hơn, soạn thảo ít hơn',\r\n            desc: 'Sử dụng tin nhắn nhanh để lưu sẵn các tin nhắn thường dùng và gửi nhanh trong hội thoại bất kỳ.',\r\n        },\r\n        {\r\n            img: WELCOME_SWIPER[1],\r\n            title: 'Tin nhắn tự động xóa',\r\n            desc: 'Tin nhắn tự động xóa sau một thời gian nhất định, để bạn không bị mất tin nhắn.',\r\n        },\r\n        {\r\n            img: WELCOME_SWIPER[2],\r\n            title: 'Chat nhóm với đồng nghiệp',\r\n            desc: 'Chat nhóm với đồng nghiệp với các tin nhắn đặc biệt, nhắn tin nhóm để gửi tin nhắn đến nhiều người.',\r\n        },\r\n    ]\r\n\r\n    const params = {\r\n        slidesPerView: 'auto',\r\n        autoplay: {\r\n            delay: 2500,\r\n            disableOnInteraction: false,\r\n        },\r\n        loop: true,\r\n        navigation: {\r\n            nextEl: '.swiper-next',\r\n            prevEl: '.swiper-prev',\r\n        },\r\n        renderPrevButton: () => (\r\n            <div className=\"swiper-prev dark:text-gray-100 dark:hover:text-blue-600 hover:text-blue-600\">\r\n                <ion-icon name=\"chevron-back-outline\"></ion-icon>\r\n            </div>\r\n        ),\r\n        renderNextButton: () => (\r\n            <div className=\"swiper-next dark:text-gray-100 dark:hover:text-blue-600 hover:text-blue-600\">\r\n                <ion-icon name=\"chevron-forward-outline\"></ion-icon>\r\n            </div>\r\n        ),\r\n        pagination: {\r\n            el: '.swiper-pagination',\r\n            clickable: true,\r\n        },\r\n        modules: [Pagination, Autoplay],\r\n        containerClass:\r\n            'swiper-container h-full chatwelcome overflow-hidden lg:max-w-sm llg:max-w-none mx-auto',\r\n    }\r\n\r\n    return (\r\n        <div className={`view-message ${toggleViewMessage()}`}>\r\n            <div className=\"py-20 h-full overflow-hidden flex flex-col\">\r\n                <div className=\"mb-4 px-10\">\r\n                    <h1 className=\"text-center text-xl mb-4 dark:text-gray-200 font-light\">\r\n                        Chào mừng đến với{' '}\r\n                        <span className=\"font-medium\">ChatVia!</span>\r\n                    </h1>\r\n\r\n                    <p className=\"text-center text-sm line-clamp-2 dark:text-gray-300\">\r\n                        Khám phá những tiện ích hỗ trợ làm việc và trò chuyện\r\n                        cùng người thân, bạn bè được tối ưu hoá cho máy tính của\r\n                        bạn.\r\n                    </p>\r\n                </div>\r\n\r\n                <div className=\"px-10 relative\">\r\n                    <Swiper {...params}>\r\n                        {data.map((item, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"select-none\"\r\n                                style={{ height: 'auto' }}\r\n                            >\r\n                                <div className=\" flex items-center justify-between flex-col h-full \">\r\n                                    <img\r\n                                        src={item.img}\r\n                                        alt=\"\"\r\n                                        className=\"object-contain w-96\"\r\n                                    />\r\n                                    <div>\r\n                                        <h2 className=\"text-lg text-center text-blue-600 font-medium line-clamp-2 my-4 w-full\">\r\n                                            {item.title}\r\n                                        </h2>\r\n                                        <p className=\"text-sm text-center line-clamp-2 leading-6 h-12 w-full dark:text-gray-300\">\r\n                                            {item.desc}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </Swiper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { toggleDropdown } from '../../../redux/slice/popperSlice'\r\nimport DropdownUserContact from './DropdownUserContact'\r\n\r\nexport default function List() {\r\n    const dispatch = useDispatch()\r\n    const simpleBar = useRef()\r\n    const friends = useSelector((state) => state.friend.list)\r\n\r\n    // Turn off dialog call when scroll\r\n    useEffect(() => {\r\n        const handleScroll = () => {\r\n            dispatch(toggleDropdown(null))\r\n        }\r\n\r\n        simpleBar?.current.addEventListener('scroll', handleScroll)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <SimpleBar\r\n                style={{ height: '200px', flex: '1' }}\r\n                scrollableNodeProps={{ ref: simpleBar }}\r\n            >\r\n                <div className=\"\">\r\n                    {friends.map((friend, index) => (\r\n                        <DropdownUserContact\r\n                            key={index}\r\n                            index={index + 1}\r\n                            friend={friend}\r\n                        />\r\n                    ))}\r\n                </div>\r\n            </SimpleBar>\r\n        </>\r\n    )\r\n}\r\n","import { memo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport { toggleSearchResult } from '../../../redux/slice/dialog/searchResultSlice'\r\nimport Search from '../Search'\r\nimport { SearchResultUser } from '../SearchResult'\r\nimport TitleTab from '../TitleTab'\r\nimport List from './List'\r\nimport Button from '../../Button'\r\n\r\nfunction ContactTab() {\r\n    const [resultSearch, setResultSearch] = useState()\r\n    const searchResultDialog = useSelector(state => state.searchResultDialog)\r\n    const theme = useSelector(state => state.theme)\r\n    const axios = createAxios()\r\n    const dispatch = useDispatch()\r\n\r\n    // Submit form\r\n    const onSubmit = async searchKey => {\r\n        if (!searchKey) {\r\n            setResultSearch(null)\r\n            dispatch(toggleSearchResult(false))\r\n            return\r\n        }\r\n\r\n        const res = await axios.post('/user/search', { query: searchKey })\r\n        setResultSearch(res.data?.user)\r\n        dispatch(toggleSearchResult(true))\r\n    }\r\n\r\n    return (\r\n        <div className={`tab-container ${theme.isHidden ? '' : 'maxWidth'}`}>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n                <TitleTab>Danh bạ</TitleTab>\r\n            </div>\r\n            <Search\r\n                className=\"mb-5\"\r\n                id=\"search-chat\"\r\n                name=\"search-chat\"\r\n                placeholder=\"Tìm kiếm...\"\r\n                onSubmit={onSubmit}\r\n                setResultSearch={setResultSearch}\r\n            />\r\n            {resultSearch && searchResultDialog ? (\r\n                <SearchResultUser results={[resultSearch, setResultSearch]} />\r\n            ) : (\r\n                <List />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(ContactTab)\r\n","import { memo, useEffect, useState } from \"react\"\r\nimport ChatHover from '../../ChatHover'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport { updateToggleMess } from '../../../redux/slice/viewMessageSlice'\r\nimport { changeCurrentChat } from '../../../redux/slice/currentChatSlice'\r\nimport { pushMessage, removeAllMessage } from '../../../redux/slice/messageSlice'\r\nimport { removeNewsMessageNotify } from '../../../redux/slice/notifySlice'\r\nimport { add, getAll } from '../../../indexDB'\r\nimport { STORE_NAME_INDEXEDDB } from '../../../constant'\r\nimport { socket } from '../../../socket'\r\n\r\nfunction GroupItem({ conversation }) {\r\n    const [isUnread, setIsUnread] = useState(false)\r\n    const axios = createAxios()\r\n    const dispatch = useDispatch()\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const { toggleMess } = useSelector((state) => state.viewMessage)\r\n    const { newMessageNotify } = useSelector((state) => state.notify)\r\n\r\n    useEffect(() => {\r\n        if (newMessageNotify.includes(conversation._id)) {\r\n            setIsUnread(true)\r\n        }\r\n    }, [newMessageNotify])\r\n\r\n    moment.locale('vi')\r\n    // Click to active chat\r\n    const openChat = async () => {\r\n        if (toggleMess === conversation._id) return\r\n        dispatch(updateToggleMess({ toggleMess: conversation._id }))\r\n        dispatch(changeCurrentChat({ ...conversation }))\r\n        dispatch(removeAllMessage())\r\n        dispatch(removeNewsMessageNotify(conversation._id))\r\n        setIsUnread(false)\r\n\r\n        const data = await getAll(conversation._id, STORE_NAME_INDEXEDDB)\r\n\r\n        socket.emit(\r\n            'setReadedConversation',\r\n            { conversationId: conversation._id, userId: user._id },\r\n            (res) => console.log('success')\r\n        )\r\n\r\n        if (data.length !== 0) {\r\n            dispatch(pushMessage(data))\r\n        } else {\r\n            const messages = await axios.get(`/message/${conversation._id}`)\r\n            dispatch(pushMessage(messages.data))\r\n            messages?.data.forEach(\r\n                async (message) =>\r\n                    await add(\r\n                        message._id,\r\n                        message,\r\n                        message.conversationId,\r\n                        STORE_NAME_INDEXEDDB\r\n                    )\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ChatHover onClick={openChat}>\r\n            <div className=\"mr-4 flex-none\">\r\n                <img\r\n                    src={conversation.avatar}\r\n                    className=\"h-10 w-10 rounded-full\"\r\n                    alt=\"\"\r\n                />\r\n            </div>\r\n            <div className=\"flex-1\">\r\n                <p className=\"font-medium text-gray-700 line-clamp-1 dark:text-gray-200\">\r\n                    {conversation.name}\r\n                </p>\r\n                <div>\r\n                    <p className=\"text-sm text-gray-500 line-clamp-1 dark:text-gray-400\">\r\n                        {conversation?.lastMessage?.text || ''}\r\n                    </p>\r\n                    <span className=\"text-sm text-gray-500 line-clamp-1 dark:text-gray-400\">\r\n                        {conversation?.members?.length > 0\r\n                            ? `${conversation?.members?.length} thành viên`\r\n                            : ''}\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </ChatHover>\r\n    )\r\n}\r\n\r\nexport default memo(GroupItem)","import { memo, useEffect, useState } from 'react'\r\nimport GroupItem from './GroupItem'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { useSelector } from 'react-redux'\r\nimport { NotFound } from '../SearchResult'\r\n\r\nfunction GroupItemList({ keyword }) {\r\n    const conversations = useSelector(\r\n        (selector) => selector.conversation.conversation\r\n    )\r\n    const [result, setResult] = useState([])\r\n    useEffect(() => {\r\n        setResult(\r\n            conversations.filter(\r\n                (conversation) =>\r\n                    conversation.type === 'GROUP' &&\r\n                    conversation.name\r\n                        ?.toUpperCase()\r\n                        ?.includes(keyword?.toUpperCase() || '')\r\n            )\r\n        )\r\n    }, [conversations, keyword])\r\n    return (\r\n        <SimpleBar style={{ height: '200px', flex: '1' }}>\r\n            {result.length > 0 ? (\r\n                result.map((conversation) => (\r\n                    <GroupItem\r\n                        key={conversation._id}\r\n                        conversation={conversation}\r\n                    />\r\n                ))\r\n            ) : (\r\n                <NotFound />\r\n            )}\r\n        </SimpleBar>\r\n    )\r\n}\r\n\r\nexport default memo(GroupItemList)\r\n","import { memo, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toggleCreateGroup } from '../../../redux/slice/dialog/createGroupSlice'\r\nimport { toggleSearchResult } from '../../../redux/slice/dialog/searchResultSlice'\r\nimport createAxios from '../../../ulti/createInstance'\r\nimport Button from '../../Button'\r\nimport Search from '../Search'\r\nimport { SearchResultUser } from '../SearchResult'\r\nimport TitleTab from '../TitleTab'\r\nimport GroupItemList from './GroupItemList'\r\n\r\nfunction GroupTab() {\r\n    const [resultSearch, setResultSearch] = useState()\r\n    const searchResultDialog = useSelector(state => state.searchResultDialog)\r\n    const theme = useSelector(state => state.theme)\r\n    const [searchKey, setSearchKey] = useState('')\r\n    const dispatch = useDispatch()\r\n    const axios = createAxios()\r\n\r\n    const openCreateDialog = () => {\r\n        dispatch(toggleCreateGroup())\r\n    }\r\n\r\n    // Submit form\r\n    const onSubmit = async searchKey => {\r\n        setSearchKey(searchKey)\r\n    }\r\n\r\n    return (\r\n        <div className={`tab-container ${theme.isHidden ? '' : 'maxWidth'}`}>\r\n            <div className=\"mb-4 flex items-center justify-between\">\r\n                <TitleTab> Nhóm </TitleTab>\r\n                <Button\r\n                    primary={true}\r\n                    className=\"rounded-lg bg-gray-200 !p-1 text-sm text-gray-800 dark:bg-gray-600 dark:text-gray-200\"\r\n                    title=\"Tạo nhóm mới\"\r\n                    onClick={openCreateDialog}\r\n                    leftIcon={<ion-icon name=\"add-outline\"></ion-icon>}\r\n                >\r\n                    Nhóm mới\r\n                </Button>\r\n            </div>\r\n            <Search\r\n                className=\"mb-5\"\r\n                id=\"search-chat\"\r\n                name=\"search-chat\"\r\n                placeholder=\"Tìm kiếm...\"\r\n                setResultSearch={setResultSearch}\r\n                onSubmit={onSubmit}\r\n            />\r\n            {searchKey ? (\r\n                <GroupItemList keyword={searchKey} />\r\n            ) : (\r\n                <GroupItemList />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(GroupTab)\r\n","import {\r\n    forwardRef,\r\n    memo,\r\n    useCallback,\r\n    useEffect,\r\n    useRef,\r\n    useState,\r\n} from 'react'\r\n\r\nconst Header = memo(\r\n    forwardRef(({ active, onClick, label, headerItemClassName }, ref) => {\r\n        return (\r\n            <li\r\n                ref={active === label ? ref : null}\r\n                className={`${\r\n                    active === label ? 'active' : ''\r\n                } ${headerItemClassName}`}\r\n                onClick={() => onClick(label)}\r\n            >\r\n                {label}\r\n            </li>\r\n        )\r\n    })\r\n)\r\n\r\nexport default function Tabs({\r\n    children,\r\n    headerItemClassName = 'tab-header-item',\r\n    containerClassName = 'tabs',\r\n    contentClassName = 'tab-content',\r\n    headerClassName = 'tab-header',\r\n}) {\r\n    const lineRef = useRef()\r\n    const [activeTab, setActiveTab] = useState(children[0].props.label)\r\n    const [lineStyle, setLineStyle] = useState({\r\n        left: lineRef.current?.offsetLeft,\r\n        width: lineRef.current?.offsetWidth,\r\n    })\r\n\r\n    const handleClick = useCallback(label => setActiveTab(label), [])\r\n\r\n    useEffect(() => {\r\n        setLineStyle({\r\n            left: lineRef.current?.offsetLeft,\r\n            width: lineRef.current?.offsetWidth,\r\n        })\r\n    }, [activeTab])\r\n\r\n    return (\r\n        <div className={containerClassName}>\r\n            <ul className={headerClassName}>\r\n                {children.map((child, index) => {\r\n                    const { label } = child.props\r\n                    if (label)\r\n                        return (\r\n                            <Header\r\n                                headerItemClassName={headerItemClassName}\r\n                                ref={lineRef}\r\n                                active={activeTab}\r\n                                onClick={handleClick}\r\n                                label={label}\r\n                                key={index}\r\n                            />\r\n                        )\r\n                })}\r\n                <div\r\n                    className=\"line\"\r\n                    style={{\r\n                        left: `${lineStyle.left}px`,\r\n                        width: `${lineStyle.width}px`,\r\n                    }}\r\n                ></div>\r\n            </ul>\r\n            <div className={contentClassName}>\r\n                {children.map((child, index) => {\r\n                    if (child.props?.alwayShow) return child.props.children\r\n                    if (child.props?.label !== activeTab) return null\r\n                    return child.props.children\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport AVATAR_GROUP_JSON from '../../../data/create-new-group.json'\r\nimport { toast } from 'react-toastify'\r\nimport { CONVERSATION_TYPE } from '../../../constant'\r\nimport { toggleCreateGroup } from '../../../redux/slice/dialog/createGroupSlice'\r\nimport { uploadFile } from '../../../services/cloudinary'\r\nimport { socket } from '../../../socket'\r\nimport Button from '../../Button'\r\nimport Dialog from '../../Dialog'\r\nimport ListFriendChooses from '../../ListFriendChooses'\r\nimport Tabs from '../../Tab'\r\nimport Avatar from '../Avatar'\r\nimport { memo } from 'react'\r\nimport { debounce } from 'lodash'\r\n\r\nfunction DialogCreateGroup() {\r\n    const dispatch = useDispatch()\r\n    const friendList = useSelector((state) => state.friend.list)\r\n    const createGroupDialog = useSelector((state) => state.createGroupDialog)\r\n    const [search, setSearch] = useState(null)\r\n    const [resultSearch, setResultSearch] = useState()\r\n    const [chooses, setChooses] = useState([])\r\n    const [avatarGroup, setAvatarGroup] = useState(null)\r\n    const [name, setName] = useState()\r\n    const [previewAvatarGroup, setPreviewAvatarGroup] = useState({\r\n        previewURL: '',\r\n    })\r\n    const [loading, setLoading] = useState(false)\r\n    const [listPreviewUpload, setListPreviewUpload] = useState([])\r\n    const [isOpenAvatarDialog, setIsOpenAvatarDialog] = useState(false)\r\n    const avatarGroupData = useRef(AVATAR_GROUP_JSON.avatarGroup)\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n\r\n    useEffect(() => {\r\n        if (search) {\r\n            setResultSearch(\r\n                friendList.filter((friend) =>\r\n                    friend.name.toLowerCase().includes(search.toLowerCase())\r\n                )\r\n            )\r\n        }\r\n        if (!search) {\r\n            setResultSearch(friendList)\r\n        }\r\n    }, [search])\r\n\r\n    const handleChoose = (friendId) => {\r\n        const index = friendList.findIndex((item) => item._id === friendId)\r\n        const isExist =\r\n            chooses.findIndex((item) => item._id === friendId) !== -1\r\n        if (isExist) setChooses(chooses.filter((item) => item._id !== friendId))\r\n        else setChooses([...chooses, friendList[index]])\r\n    }\r\n\r\n    const toggleDialog = () => {\r\n        dispatch(toggleCreateGroup())\r\n    }\r\n\r\n    const handleChangeImage = async (e) => {\r\n        const imageFile = e.target.files[0]\r\n        var linkAvatar = URL.createObjectURL(imageFile)\r\n\r\n        setPreviewAvatarGroup({\r\n            previewURL: linkAvatar,\r\n            isUpload: true,\r\n            file: imageFile,\r\n        })\r\n        setListPreviewUpload((prev) => [...prev, linkAvatar])\r\n\r\n        e.target.value = ''\r\n    }\r\n\r\n    const handleChooseAvatarPreview = (e) =>\r\n        setPreviewAvatarGroup({\r\n            previewURL: e.target.src,\r\n            isUpload: false,\r\n        })\r\n\r\n    const handleChangeSearch = (value) => setSearch(value)\r\n\r\n    const handleOpenAvatarDialog = () => setIsOpenAvatarDialog(true)\r\n\r\n    const closeChooseAvatarDialog = () => {\r\n        setIsOpenAvatarDialog(false)\r\n        setPreviewAvatarGroup({\r\n            previewURL: '',\r\n            isUpload: false,\r\n        })\r\n        setListPreviewUpload([])\r\n    }\r\n\r\n    const handleConfirmAvatar = () => {\r\n        setAvatarGroup(previewAvatarGroup)\r\n        listPreviewUpload.forEach((image) => {\r\n            if (image !== previewAvatarGroup.previewURL)\r\n                URL.revokeObjectURL(image)\r\n        })\r\n\r\n        closeChooseAvatarDialog()\r\n    }\r\n\r\n    const handleConfirmCreateGroup = async () => {\r\n        setLoading(true)\r\n        let imageUpload\r\n        try {\r\n            if (avatarGroup.hasOwnProperty('file')) {\r\n                const { data } = await uploadFile(avatarGroup.file)\r\n                imageUpload = data.url\r\n            } else {\r\n                imageUpload = avatarGroup.previewURL\r\n            }\r\n\r\n            if (!name) toast.error('Vui lòng điền tên nhóm!!!')\r\n            if (chooses.length < 2)\r\n                toast.error('Vui lòng chọn tối thiểu 2 người bạn!!!')\r\n\r\n            socket.emit(\r\n                'createGroup',\r\n                {\r\n                    name,\r\n                    members: [user._id, ...chooses.map((friend) => friend._id)],\r\n                    type: CONVERSATION_TYPE.group,\r\n                    avatar: imageUpload,\r\n                    creator: user._id,\r\n                    admin: {\r\n                        own: user._id,\r\n                    },\r\n                },\r\n                (response) => {\r\n                    if (response) {\r\n                        toast.success('Tạo nhóm thành công!!!')\r\n                    } else {\r\n                        toast.error('Đã xảy ra lỗi!!!')\r\n                    }\r\n                    setLoading(false)\r\n                    toggleDialog()\r\n                }\r\n            )\r\n        } catch (error) {}\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                isOpen={createGroupDialog.isShow}\r\n                className=\"dialog-lg\"\r\n                onRequestClose={toggleDialog}\r\n            >\r\n                <div className=\"dialog-lg dark:text-gray-100\">\r\n                    <Dialog.Header handleClose={toggleDialog}>\r\n                        Tạo nhóm\r\n                    </Dialog.Header>\r\n                    <div className=\"flex items-center p-3\">\r\n                        <div\r\n                            onClick={handleOpenAvatarDialog}\r\n                            className=\"flex h-12 w-12 items-center justify-center rounded-full border text-2xl\"\r\n                        >\r\n                            <ion-icon name=\"camera\"></ion-icon>\r\n                            <Avatar\r\n                                user={{\r\n                                    id: '',\r\n                                    avatar: avatarGroup?.previewURL,\r\n                                }}\r\n                                isNoDot={true}\r\n                                className={`h-12 w-12 flex-shrink-0 ${\r\n                                    !avatarGroup?.previewURL ? 'hidden' : ''\r\n                                }`}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"ml-2 flex-1 border-b bg-transparent py-2 text-sm outline-none focus:border-b-purple-700\"\r\n                            placeholder=\"Nhập tên nhóm...\"\r\n                            name=\"name\"\r\n                            onChange={debounce(\r\n                                (e) => setName(e.target.value),\r\n                                300\r\n                            )}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"flex flex-1 flex-col p-3 pt-0\">\r\n                        <p className=\"mb-1 text-13\">\r\n                            Thêm bạn bè vào nhóm (tối thiểu 2 người bạn)\r\n                        </p>\r\n                        <Dialog.Search\r\n                            id=\"search-forward\"\r\n                            name=\"search-forward\"\r\n                            placeholder=\"Nhập tên bạn bè...\"\r\n                            setResultSearch={setSearch}\r\n                            onChange={handleChangeSearch}\r\n                        />\r\n                        <div className=\"my-1 dark:text-gray-100\">\r\n                            Danh sách bạn bè\r\n                        </div>\r\n                        <ListFriendChooses\r\n                            chooses={chooses}\r\n                            handleChoose={handleChoose}\r\n                            list={resultSearch}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"w-full\">\r\n                        <div className=\"select-none p-3 text-right\">\r\n                            <Button\r\n                                className=\"mr-1 !min-w-0 !rounded bg-gray-50 bg-opacity-70 !px-4 !py-2 text-center text-sm font-semibold text-black shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                                type=\"button\"\r\n                                disabled={loading}\r\n                                onClick={toggleDialog}\r\n                            >\r\n                                Hủy\r\n                            </Button>\r\n                            <Button\r\n                                className=\"min-w-0 !rounded bg-purple-500 !px-4 !py-2 text-center text-sm font-semibold text-white shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                                type=\"button\"\r\n                                disabled={\r\n                                    !avatarGroup ||\r\n                                    !name ||\r\n                                    chooses.length < 2 ||\r\n                                    loading\r\n                                }\r\n                                onClick={handleConfirmCreateGroup}\r\n                            >\r\n                                {loading ? 'Đang tạo...' : 'Tạo nhóm'}\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Dialog\r\n                isOpen={isOpenAvatarDialog}\r\n                className=\"dialog-center w-[500px] dark:text-gray-100\"\r\n                onRequestClose={closeChooseAvatarDialog}\r\n            >\r\n                <Tabs containerClassName=\"tabs avatar-group\">\r\n                    <div label=\"Chọn ảnh có sẵn\">\r\n                        <div className=\"h-[300px] overflow-y-auto p-4 pb-0\">\r\n                            {avatarGroupData.current.map((elemenet, index) => (\r\n                                <div className=\"mb-4 last:mb-0\" key={index}>\r\n                                    <h2 className=\"mb-1 text-sm font-medium\">\r\n                                        {elemenet.title}\r\n                                    </h2>\r\n                                    <div className=\"avatar-group-available-list\">\r\n                                        {elemenet.imgs.map((img, index) => (\r\n                                            <div\r\n                                                className={`avatar-group-available-item ${\r\n                                                    img ===\r\n                                                    previewAvatarGroup.previewURL\r\n                                                        ? 'checked'\r\n                                                        : ''\r\n                                                }`}\r\n                                                key={index}\r\n                                            >\r\n                                                <Avatar\r\n                                                    isNoDot={true}\r\n                                                    className=\"h-14 w-14\"\r\n                                                    user={{\r\n                                                        id: '',\r\n                                                        avatar: img,\r\n                                                    }}\r\n                                                    onClick={\r\n                                                        handleChooseAvatarPreview\r\n                                                    }\r\n                                                    alt=\"\"\r\n                                                />\r\n                                            </div>\r\n                                        ))}\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div label=\"Upload từ máy\">\r\n                        <div className=\"h-[300px] overflow-y-auto p-4 pb-0\">\r\n                            <h2 className=\"mb-1 text-sm font-medium\">\r\n                                Ảnh từ máy tính\r\n                            </h2>\r\n                            <div className=\"avatar-group-available-list\">\r\n                                <label className=\"inline-flex h-14 w-14 items-center justify-center rounded-full bg-blue-600 text-2xl text-white\">\r\n                                    <ion-icon name=\"add-outline\"></ion-icon>\r\n                                    <input\r\n                                        type=\"file\"\r\n                                        accept=\".jpg, .jpeg, .png\"\r\n                                        hidden\r\n                                        onChange={handleChangeImage}\r\n                                    />\r\n                                </label>\r\n                                {listPreviewUpload.map((image, index) => (\r\n                                    <div\r\n                                        className={`avatar-group-available-item inline-block ${\r\n                                            image ===\r\n                                            previewAvatarGroup.previewURL\r\n                                                ? 'checked'\r\n                                                : ''\r\n                                        }`}\r\n                                        key={index}\r\n                                    >\r\n                                        <Avatar\r\n                                            isNoDot={true}\r\n                                            className=\"h-14 w-14\"\r\n                                            user={{\r\n                                                id: '',\r\n                                                avatar: image,\r\n                                            }}\r\n                                            onClick={handleChooseAvatarPreview}\r\n                                            alt=\"\"\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div alwayShow={true}>\r\n                        <div className=\"relative m-4\">\r\n                            <img\r\n                                src={previewAvatarGroup.previewURL}\r\n                                className={`aspect-square w-full rounded-full object-cover ${\r\n                                    previewAvatarGroup.previewURL\r\n                                        ? ''\r\n                                        : 'invisible'\r\n                                }`}\r\n                                alt=\"\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </Tabs>\r\n\r\n                <div className=\"w-full border-t dark:border-slate-600\">\r\n                    <div className=\"select-none p-3 text-right\">\r\n                        <Button\r\n                            className=\"mr-1 !min-w-0 !rounded bg-gray-50 bg-opacity-70 !px-4 !py-2 text-center text-sm font-semibold text-black shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                            type=\"button\"\r\n                            onClick={closeChooseAvatarDialog}\r\n                        >\r\n                            Hủy\r\n                        </Button>\r\n                        <Button\r\n                            className=\"min-w-0 !rounded bg-purple-500 !px-4 !py-2 text-center text-sm font-semibold text-white shadow outline-none transition-all duration-150 ease-linear hover:shadow-md focus:outline-none active:bg-purple-600\"\r\n                            type=\"button\"\r\n                            disabled={!previewAvatarGroup}\r\n                            onClick={handleConfirmAvatar}\r\n                        >\r\n                            Chọn ảnh\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\nexport default memo(DialogCreateGroup)\r\n","import parse from 'html-react-parser'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport ChatHover from '../../ChatHover'\r\nimport { STATUS_RESPONSE } from './../../../constant'\r\nimport { socket } from './../../../socket'\r\nimport Avatar from '../Avatar'\r\n\r\nexport default function NotifyItem({ isReaded, notify }) {\r\n    const dispatch = useDispatch()\r\n\r\n    // Click add friend send notification to friend\r\n    const handleAcceptFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                sender: {\r\n                    id: notify.sender?._id,\r\n                    name: notify.sender?.name,\r\n                },\r\n                receiver: {\r\n                    id: notify.receiver?._id,\r\n                    name: notify.receiver?.name,\r\n                },\r\n                type: 'ACCEPT_FRIEND',\r\n            },\r\n\r\n            //  After accept friend successfully, change button open chat conversation\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    // Update status notify\r\n                    // dispatch(updateNotify({\r\n                    //     content: ,\r\n                    // }))\r\n\r\n                    // setState(\"OPEN_CHAT\")\r\n                    return\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleRejectFriend = () => {\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                sender: {\r\n                    id: notify.sender?._id,\r\n                    name: notify.sender?.name,\r\n                },\r\n                receiver: {\r\n                    id: notify.receiver?._id,\r\n                    name: notify.receiver?.name,\r\n                },\r\n                type: 'REJECT_FRIEND',\r\n            },\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    // setState(\"OPEN_CHAT\")\r\n                    return\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ChatHover>\r\n                <div className=\"relative mr-4 flex-none\">\r\n                    <Avatar\r\n                        user={notify.sender}\r\n                        className=\"h-12 w-12 rounded-full\"\r\n                        alt=\"\"\r\n                    />\r\n                    <div\r\n                        style={{\r\n                            background:\r\n                                'linear-gradient(to bottom, #00acee, #0072e0)',\r\n                        }}\r\n                        className=\"absolute bottom-0 right-0 rounded-full p-1 leading-0 text-white lg:text-13 text-11\"\r\n                    >\r\n                        <ion-icon name=\"person-add\"></ion-icon>\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex flex-1 flex-col\">\r\n                    <div className=\"mb-2 flex items-center justify-between\">\r\n                        <div\r\n                            className={`flex-1 text-sm line-clamp-2 ${\r\n                                isReaded\r\n                                    ? 'text-gray-400 dark:text-gray-400'\r\n                                    : 'text-gray-900  dark:text-gray-100'\r\n                            }`}\r\n                        >\r\n                            {parse(notify?.content)}\r\n                        </div>\r\n                        <p\r\n                            className={`ml-5 text-xs font-semibold ${\r\n                                isReaded\r\n                                    ? 'text-gray-400 dark:text-gray-400'\r\n                                    : 'text-blue-500'\r\n                            }`}\r\n                            title={moment(notify?.createdAt).format(\r\n                                'HH:mm DD/MM/YYYY'\r\n                            )}\r\n                        >\r\n                            {moment(notify?.createdAt).fromNow()}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {notify.type === 'ADD_FRIEND' && (\r\n                        <div className=\"flex\">\r\n                            <button\r\n                                style={{ maxWidth: '120px' }}\r\n                                onClick={handleAcceptFriend}\r\n                                className=\"mr-2 inline-block flex-1 rounded bg-blue-500 px-4 py-2 text-13 font-medium uppercase leading-tight text-white shadow-md transition duration-150 ease-in-out hover:bg-blue-600 hover:shadow-lg focus:bg-blue-600 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\"\r\n                            >\r\n                                Xác nhận\r\n                            </button>\r\n                            <button\r\n                                style={{ maxWidth: '120px' }}\r\n                                onClick={handleRejectFriend}\r\n                                className=\"ml-2 inline-block flex-1 rounded bg-gray-200 px-4 py-2 text-xs font-medium uppercase leading-tight text-black shadow-md transition duration-150 ease-in-out hover:bg-gray-300 hover:shadow-lg focus:bg-gray-300 focus:shadow-lg focus:outline-none focus:ring-0 active:bg-blue-800 active:shadow-lg\"\r\n                            >\r\n                                Xóa\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </ChatHover>\r\n        </div>\r\n    )\r\n}\r\n","import { memo, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { STATUS_NOTIFY } from '../../../constant'\r\nimport { readedNotify } from '../../../redux/slice/notifySlice'\r\nimport TitleTab from '../TitleTab'\r\nimport NotifyItem from './NotifyItem'\r\n\r\nfunction NotifyTab() {\r\n    const { notifyList } = useSelector(state => state.notify)\r\n\tconst theme = useSelector(state => state.theme)\r\n    const dispatch = useDispatch()\r\n\t\r\n    useEffect(() => {\r\n\t\treturn () => dispatch(readedNotify())\r\n    }, [])\r\n\r\n    return (\r\n        <div className={`tab-container ${theme.isHidden ? '' : 'maxWidth'}`} >\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n                <TitleTab>Thông báo</TitleTab>\r\n            </div>\r\n            <SimpleBar style={{ height: '200px', flex: '1' }}>\r\n                <div className=\"text-gray-900 dark:text-gray-200 font-medium text-lg\">\r\n                    <h2>Mới nhất</h2>\r\n                </div>\r\n                {notifyList.map((notify, index) => {\r\n                    if (notify.status === STATUS_NOTIFY.sent)\r\n                        return <NotifyItem key={index} notify={notify} />\r\n                })}\r\n                <div className=\"text-gray-900 dark:text-gray-200 font-medium text-lg\">\r\n                    <h2>Trước đó</h2>\r\n                </div>\r\n                {notifyList.map((notify, index) => {\r\n                    if (notify.status !== STATUS_NOTIFY.sent)\r\n                        return (\r\n                            <NotifyItem key={index} notify={notify} isReaded />\r\n                        )\r\n                })}\r\n            </SimpleBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(NotifyTab)\r\n","import { useRef } from 'react'\r\nimport { useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport createInstance from '../../../ulti/createInstance'\r\nimport { DEFAULT_IMG } from '../../../assets/image'\r\nimport { updateInfo } from '../../../redux/slice/authSlice'\r\nimport { deleteImage, uploadFile } from '../../../services/cloudinary'\r\nimport Avatar from '../Avatar'\r\nimport Button from '../../Button'\r\n\r\nModal.setAppElement('#root')\r\n\r\nexport default function Update({ isOpen, onRequestClose }) {\r\n    const axiosInstance = createInstance()\r\n    const dispacth = useDispatch()\r\n    const [imageFile, setImageFile] = useState()\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const [name, setName] = useState(user.name)\r\n    const showImageRef = useRef(null)\r\n\r\n    const handleChangeImage = async (e) => {\r\n        const imageFile = e.target.files[0]\r\n        setImageFile(imageFile)\r\n\r\n        var linkAvatar = URL.createObjectURL(imageFile)\r\n        showImageRef.current.src = linkAvatar\r\n        e.target.value = ''\r\n    }\r\n\r\n    const handleUpdateInfo = async () => {\r\n        let resUploadImage\r\n        try {\r\n            if (imageFile) {\r\n                resUploadImage = await uploadFile(imageFile)\r\n                setImageFile(null)\r\n            }\r\n\r\n            axiosInstance\r\n                .put(`${process.env.REACT_APP_API_URL}/user/update-info`, {\r\n                    name,\r\n                    avatar: resUploadImage?.data.secure_url || user.avatar,\r\n                })\r\n                .then(async () => {\r\n                    if (user?.avatar) {\r\n                        const avatarSplit = user?.avatar?.split('/')\r\n                        const avatarName =\r\n                            avatarSplit[avatarSplit.length - 1].split('.')[0]\r\n\r\n                        await deleteImage(\r\n                            `${process.env.REACT_APP_CLOUDINARY_PRESET_NAME}/${avatarName}`\r\n                        )\r\n                    }\r\n\r\n                    dispacth(\r\n                        updateInfo({\r\n                            name,\r\n                            avatar:\r\n                                resUploadImage?.data.secure_url || user.avatar,\r\n                        })\r\n                    )\r\n                })\r\n            toast('Cập nhật ảnh thành công!!!')\r\n        } catch (error) {\r\n            toast('Đã xảy ra lỗi!!!')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={isOpen}\r\n            onRequestClose={onRequestClose}\r\n            contentLabel=\"Example Modal\"\r\n            overlayClassName=\"profile-modal-overlay\"\r\n            className=\"profile-modal-content\"\r\n        >\r\n            <div>\r\n                <div className=\"flex items-center justify-between border-b p-4 dark:border-b-gray-500\">\r\n                    <h2 className=\"text-lg\">Cập nhật thông tin</h2>\r\n                    <span\r\n                        className=\"cursor-pointer text-3xl leading-0\"\r\n                        onClick={onRequestClose}\r\n                    >\r\n                        <ion-icon name=\"close-outline\"></ion-icon>\r\n                    </span>\r\n                </div>\r\n                <div className=\"p-4\">\r\n                    <div className=\"mb-4 text-center\">\r\n                        <div className=\"relative mx-auto inline-block\">\r\n                            <Avatar\r\n                                isNoDot={true}\r\n                                className=\"h-32 w-32 rounded-full\"\r\n                                id=\"changeImageProfile\"\r\n                                ref={showImageRef}\r\n                                user={user}\r\n                                alt=\"\"\r\n                            />\r\n                            <input\r\n                                type=\"file\"\r\n                                name=\"changeImage\"\r\n                                id=\"changeImage\"\r\n                                hidden\r\n                                onChange={handleChangeImage}\r\n                            />\r\n                            <label\r\n                                htmlFor=\"changeImage\"\r\n                                className=\"absolute top-3/4 left-2/3 flex h-8 w-8 cursor-pointer items-center justify-center rounded-full border-2 bg-white leading-0 dark:border-gray-700 dark:bg-gray-500\"\r\n                            >\r\n                                <ion-icon name=\"camera-reverse-outline\"></ion-icon>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"\">\r\n                            <p className=\"mb-1 text-sm\">Tên hiển thị</p>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            className=\"w-full rounded-md border px-3 py-2 text-15 focus:border-blue-500 focus:outline-none dark:border-gray-500 dark:bg-gray-700\"\r\n                        />\r\n                        <p className=\"mt-1 text-xs\">\r\n                            Sử dụng tên thật để bạn bè dễ dàng nhận diện hơn\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"\">\r\n                            <p className=\"mb-1 text-sm\">Email đăng kí</p>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value=\"letranglan129@gmail.com\"\r\n                            readOnly\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            className=\"w-full cursor-not-allowed rounded-md border px-3 py-2 text-15 text-gray-400 focus:outline-none\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"mb-4\">\r\n                        <label htmlFor=\"\">\r\n                            <p className=\"mb-1 text-sm\">Số điện đăng kí</p>\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            value=\"0393673245\"\r\n                            readOnly\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            className=\"w-full cursor-not-allowed rounded-md border px-3 py-2 text-15 text-gray-400 focus:outline-none\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                        <Button\r\n                            className=\"!min-w-0 !rounded-lg bg-gray-200 !py-1 !px-3 font-medium dark:bg-gray-500 dark:text-white\"\r\n                            onClick={onRequestClose}\r\n                        >\r\n                            Hủy\r\n                        </Button>\r\n                        <Button\r\n                            onClick={handleUpdateInfo}\r\n                            className=\"!min-w-0 !rounded-lg bg-blue-500 !py-1 !px-3 font-medium text-white\"\r\n                        >\r\n                            Cập nhật\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n","import { useState } from 'react'\r\nimport Modal from 'react-modal'\r\nimport { useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport {\r\n    CollapseListItem, CollapseContent, HeaderCollapse, Collapse\r\n} from '../../CollapseComponent'\r\nimport Avatar from '../Avatar'\r\nimport File from '../File'\r\nimport TitleTab from '../TitleTab'\r\nimport Update from './Update'\r\nModal.setAppElement('#root')\r\n\r\nfunction ProfileTab() {\r\n    const [isOpenModal, setIsOpenModal] = useState(false)\r\n    const { user } = useSelector(state => state.auth.currentUser)\r\n\tconst theme = useSelector(state => state.theme)\r\n\r\n    return (\r\n        <div className={`tab-container ${theme.isHidden ? '' : 'maxWidth'}`}>\r\n            <div className=\"mb-4\">\r\n                <TitleTab>Thông tin của bạn</TitleTab>\r\n            </div>\r\n\r\n            <div className=\"relative border-b pb-5 text-center dark:border-gray-600 \">\r\n                <div\r\n                    className=\"relative inline-block\"\r\n                    onClick={() => setIsOpenModal(true)}\r\n                >\r\n                    <Avatar\r\n                        isNoDot={true}\r\n                        className=\"mx-auto h-24 w-24 rounded-full object-cover\"\r\n                        user={user}\r\n                        alt=\"\"\r\n                    />\r\n                    <label className=\"absolute top-3/4 left-2/3 flex h-8 w-8 cursor-pointer items-center justify-center rounded-full border-2 bg-white leading-0 dark:border-gray-700 dark:bg-gray-100 dark:text-white\">\r\n                        <ion-icon name=\"create-outline\"></ion-icon>\r\n                    </label>\r\n                </div>\r\n                <p className=\"mt-4 font-medium  text-gray-700  line-clamp-1 dark:text-gray-200\">\r\n                    {user.name}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"my-5\">\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    If several languages coalesce, the grammar of the resulting\r\n                    language is more simple and regular than that of the\r\n                    individual.\r\n                </p>\r\n            </div>\r\n\r\n            <SimpleBar style={{ height: '200px', flex: '1' }}>\r\n                <Collapse>\r\n                    <div className=\"mb-3\">\r\n                        <HeaderCollapse contentFor=\"1\">\r\n                            Thông tin\r\n                        </HeaderCollapse>\r\n\r\n                        <CollapseContent id=\"1\">\r\n                            <CollapseListItem\r\n                                title=\"Tên\"\r\n                                content=\"Lê Trạng Lân\"\r\n                            />\r\n                            <CollapseListItem\r\n                                title=\"Email\"\r\n                                content=\"letranglan129@gmail.com\"\r\n                            />\r\n                            <CollapseListItem\r\n                                title=\"Số điện thoại\"\r\n                                content=\"0393673245\"\r\n                            />\r\n                            <CollapseListItem\r\n                                title=\"Ngày sinh\"\r\n                                content=\"22/09/2002\"\r\n                            />\r\n                        </CollapseContent>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <HeaderCollapse contentFor=\"2\">\r\n                            File đã gửi\r\n                        </HeaderCollapse>\r\n\r\n                        <CollapseContent id=\"2\">\r\n                            {Array(5)\r\n                                .fill(0)\r\n                                .map((_, index) => (\r\n                                    <div key={index} className=\"my-2\">\r\n                                        <File\r\n                                            type=\"image\"\r\n                                            name=\"Tên\"\r\n                                            size=\"12.5MB\"\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                        </CollapseContent>\r\n                    </div>\r\n                </Collapse>\r\n            </SimpleBar>\r\n\r\n            <Update\r\n                isOpen={isOpenModal}\r\n                onRequestClose={() => setIsOpenModal(false)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n// <File\r\n// type=\"text\"\r\n// name=\"Email\"\r\n// size=\"12.5MB\"\r\n// />\r\n// <File\r\n// type=\"zip\"\r\n// name=\"Số điện thoại\"\r\n// size=\"12.5MB\"\r\n// />\r\n// <File\r\n// type=\"text\"\r\n// name=\"Ngày sinh\"\r\n// size=\"12.5MB\"\r\n// />\r\n\r\nexport default ProfileTab\r\n","import { memo } from 'react'\r\nimport Avatar from '../Avatar'\r\n\r\nfunction AvatarStatusLg({ name, src, status }) {\r\n    return (\r\n        <div className=\"mb-8 border-b pb-5 text-center dark:border-gray-600\">\r\n            <Avatar\r\n                isNoDot={true}\r\n                className=\"mx-auto mb-4 h-24 w-24 rounded-full object-cover\"\r\n                user={{\r\n                    avatar: src,\r\n                }}\r\n                alt=\"\"\r\n            />\r\n            <p className=\"font-medium text-gray-700 line-clamp-1 dark:text-gray-200\">\r\n                {name}\r\n            </p>\r\n            {/* <div>\r\n                <span className=\"mr-2 inline-block h-3 w-3 rounded-full border-4 border-green-500\"></span>\r\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                    Active\r\n                </span>\r\n            </div> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(AvatarStatusLg)\r\n","import { memo } from 'react'\r\nfunction Help() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='cursor-pointer border-b flex items-center justify-between dark:text-gray-200 text-sm py-5'>FAQs</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='cursor-pointer border-b flex items-center justify-between dark:text-gray-200 text-sm py-5'>Liên hệ</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='cursor-pointer flex items-center justify-between dark:text-gray-200 text-sm py-5'>Điều khoản và chính sách</div>\r\n\t\t\t</li>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default memo(Help)\r\n","export const LanguageData = [\r\n\t{\r\n\t\tname: \"Vietnamese\",\r\n\t\timg: \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/21/Flag_of_Vietnam.svg/800px-Flag_of_Vietnam.svg.png\",\r\n\t},\r\n\t{\r\n\t\tname: \"English\",\r\n\t\timg: \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Flag_of_Great_Britain_%28English_version%29.png/640px-Flag_of_Great_Britain_%28English_version%29.png\",\r\n\t},\r\n\t{\r\n\t\tname: \"Japanese\",\r\n\t\timg: \"https://upload.wikimedia.org/wikipedia/commons/thumb/1/1b/Flag_of_Japan_%281870%E2%80%931999%29.svg/640px-Flag_of_Japan_%281870%E2%80%931999%29.svg.png\",\r\n\t},\r\n]\r\n","import { useState, memo } from 'react'\r\nimport { LanguageData } from './LanguageData'\r\n\r\nfunction Language() {\r\n\tconst [language, setLanguage] = useState('Vietnamese')\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{LanguageData.map((item, index) => (\r\n\t\t\t\t<li key={index}>\r\n\t\t\t\t\t<label className='cursor-pointer !bg-transparent flex items-center justify-between py-3 dark:text-gray-200 '>\r\n\t\t\t\t\t\t<div className=''>\r\n\t\t\t\t\t\t\t<div className='flex items-center justify-center'>\r\n\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t<img src={item.img} className='h-4 w-6 mr-4' alt='' />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{item.name}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='checkbox'\r\n\t\t\t\t\t\t\tclassName='bg-transparent'\r\n\t\t\t\t\t\t\tvalue={item.name}\r\n\t\t\t\t\t\t\tname='language'\r\n\t\t\t\t\t\t\tchecked={language === item.name}\r\n\t\t\t\t\t\t\tonChange={(e) => setLanguage(e.target.value)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</li>\r\n\t\t\t))}\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default memo(Language)\r\n","import { memo } from \"react\"\r\n\r\nfunction Privacy() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Xem ảnh đại diện của bạn</div>\r\n\t\t\t\t\t<div className='selectEl'>\r\n\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t<option>Mọi người</option>\r\n\t\t\t\t\t\t\t<option>Trừ...</option>\r\n\t\t\t\t\t\t\t<option>Không ai</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Tin nhắn trạng thái đã xem</div>\r\n\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t<input type='checkbox' />\r\n\t\t\t\t\t\t<span className='slider round'></span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Nhận tin nhắn từ người lạ</div>\r\n\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t<input type='checkbox' />\r\n\t\t\t\t\t\t<span className='slider round'></span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Trạng thái hoạt động</div>\r\n\t\t\t\t\t<div className='selectEl'>\r\n\t\t\t\t\t\t<select>\r\n\t\t\t\t\t\t\t<option>Mọi người</option>\r\n\t\t\t\t\t\t\t<option>Trừ...</option>\r\n\t\t\t\t\t\t\t<option>Không ai</option>\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Nhận cuộc gọi từ người lạ</div>\r\n\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t<input type='checkbox' />\r\n\t\t\t\t\t\t<span className='slider round'></span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Hiển thị ngày sinh với mọi người</div>\r\n\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t<input type='checkbox' />\r\n\t\t\t\t\t\t<span className='slider round'></span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default memo(Privacy)","import { memo } from \"react\"\r\n\r\nfunction Security() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li>\r\n\t\t\t\t<div className='flex items-center justify-between dark:text-gray-200 text-sm py-5'>\r\n\t\t\t\t\t<div>Bật thông báo bảo mật</div>\r\n\t\t\t\t\t<label className='switch'>\r\n\t\t\t\t\t\t<input type='checkbox' />\r\n\t\t\t\t\t\t<span className='slider round'></span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</li>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default memo(Security)\r\n","import { useCallback, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { logout } from '../../../ulti/userApi'\r\nimport { useCollapse } from '../../../hooks'\r\nimport { Collapse, CollapseContent, HeaderCollapse } from '../../CollapseComponent'\r\nimport AvatarStatusLg from '../AvatarStatusLg'\r\nimport TitleTab from '../TitleTab'\r\nimport Help from './Help'\r\nimport Language from './Language'\r\nimport Privacy from './Privacy'\r\nimport Security from './Security'\r\nimport Button from '../../Button'\r\n\r\nfunction SettingTab() {\r\n    const { user } = useSelector(state => state.auth.currentUser)\r\n    const theme = useSelector(state => state.theme)\r\n    const dispatch = useDispatch()\r\n\r\n    // Click to logout\r\n    const handleLogout = () => {\r\n        logout(dispatch)\r\n    }\r\n\r\n    return (\r\n        <div className={`tab-container ${theme.isHidden ? '' : 'maxWidth'}`}>\r\n            <div className=\"flex items-center justify-between mb-4\">\r\n                <TitleTab>Cài đặt</TitleTab>\r\n                <Button\r\n                    circle={true}\r\n                    primary={true}\r\n                    className=\"!w-8 !h-8 !p-0\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    <ion-icon name=\"log-out-outline\"></ion-icon>\r\n                </Button>\r\n            </div>\r\n\r\n            <AvatarStatusLg src={user.avatar} name={user?.name} />\r\n\r\n            <SimpleBar style={{ height: '200px', flex: '1' }}>\r\n                <Collapse>\r\n                    <div className=\"mb-3\">\r\n                        <HeaderCollapse\r\n                            \r\n                            contentFor=\"1\"\r\n                        \r\n                        >\r\n                            Quyền riêng tư\r\n                        </HeaderCollapse>\r\n    \r\n                        <CollapseContent id=\"1\">\r\n                            <Privacy />\r\n                        </CollapseContent>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <HeaderCollapse\r\n                            \r\n                            contentFor=\"2\"\r\n                        \r\n                        >\r\n                            Bảo mật\r\n                        </HeaderCollapse>\r\n    \r\n                        <CollapseContent id=\"2\">\r\n                            <Security />\r\n                        </CollapseContent>\r\n                    </div>\r\n    \r\n                    <div className=\"mb-3\">\r\n                        <HeaderCollapse\r\n                            \r\n                            contentFor=\"3\"\r\n                        \r\n                        >\r\n                            Trợ giúp và Hỗ trợ\r\n                        </HeaderCollapse>\r\n    \r\n                        <CollapseContent id=\"3\">\r\n                            <Help />\r\n                        </CollapseContent>\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <HeaderCollapse\r\n                            \r\n                            contentFor=\"4\"\r\n                        \r\n                        >\r\n                            Ngôn ngữ\r\n                        </HeaderCollapse>\r\n    \r\n                        <CollapseContent id=\"4\" className='px-0'>\r\n                            <div className='px-5'>\r\n                            <Language />\r\n                            </div>\r\n                        </CollapseContent>\r\n                    </div>\r\n                </Collapse>\r\n            </SimpleBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingTab\r\n","import React from 'react'\r\n\r\nexport default function DotNotify({count}) {\r\n    return <div className=\"dot-notify\">\r\n        {count}\r\n    </div>\r\n}\r\n","const optionSidebar = [\r\n\t{\r\n\t\tkey: \"chat\",\r\n\t\ttype: \"link\",\r\n\t\ttitle: \"Chats\",\r\n\t\ticon: <ion-icon name='chatbubble-ellipses-outline'></ion-icon>,\r\n\t\tlink: \"#\",\r\n\t},\r\n\t{\r\n\t\tkey: \"notify\",\r\n\t\ttype: \"link\",\r\n\t\ttitle: \"Thông báo\",\r\n\t\ticon: <ion-icon name='notifications-outline'></ion-icon>,\r\n\t\tlink: \"#\",\r\n\t},\r\n\t{\r\n\t\tkey: \"group\",\r\n\t\ttype: \"link\",\r\n\t\ttitle: \"Nhóm\",\r\n\t\ticon: <ion-icon name='people-outline'></ion-icon>,\r\n\t\tlink: \"#\",\r\n\t},\r\n\t{\r\n\t\tkey: \"contact\",\r\n\t\ttype: \"link\",\r\n\t\ttitle: \"Liên hệ\",\r\n\t\ticon: <ion-icon name='call-outline'></ion-icon>,\r\n\t\tlink: \"#\",\r\n\t},\r\n\t{\r\n\t\tkey: \"setting\",\r\n\t\ttype: \"link\",\r\n\t\ttitle: \"Cài đặt\",\r\n\t\ticon: <ion-icon name='settings-outline'></ion-icon>,\r\n\t\tlink: \"#\",\r\n\t},\r\n]\r\n\r\nexport default optionSidebar\r\n","import { memo } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport SimpleBar from 'simplebar-react'\r\nimport 'simplebar/dist/simplebar.min.css'\r\nimport { LOGO } from '../../../assets/image'\r\nimport { STATUS_NOTIFY } from '../../../constant'\r\nimport { toggleSearchResult } from '../../../redux/slice/dialog/searchResultSlice'\r\nimport { updateTheme } from '../../../redux/slice/themeSlice'\r\nimport Avatar from '../Avatar'\r\nimport DotNotify from './DotNotify'\r\nimport optionSidebar from './SidebarData'\r\n\r\nfunction Sidebar({ tab, setTab }) {\r\n    const theme = useSelector(state => state.theme)\r\n    const dispatch = useDispatch()\r\n    const notify = useSelector(state => state.notify)\r\n    const { user } = useSelector(state => state.auth.currentUser)\r\n\r\n    // Change theme\r\n    const handleChangeTheme = () => {\r\n        const newTheme = {\r\n            colorTheme: theme.colorTheme === 'light' ? 'dark' : 'light',\r\n        }\r\n        dispatch(updateTheme(newTheme))\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`sidebar ${theme.isHidden ? 'hidden' : ''} ${\r\n                theme.colorTheme === 'light'\r\n                    ? 'theme-bg-light'\r\n                    : 'theme-bg-dark'\r\n            }`}\r\n        >\r\n            <SimpleBar style={{ height: '100%' }}>\r\n                <div\r\n                    className={\r\n                        theme.isHidden\r\n                            ? 'flex items-center justify-between overflow-hidden h-14'\r\n                            : ''\r\n                    }\r\n                >\r\n                    <div\r\n                        className={\r\n                            theme.isHidden ? 'mt-6 mb-8 hidden' : 'mt-6 mb-8'\r\n                        }\r\n                    >\r\n                        <img\r\n                            className=\"w-8 mx-auto\"\r\n                            src={LOGO.SVG}\r\n                            alt=\"Chatvia\"\r\n                            title=\"Chatvia\"\r\n                        />\r\n                    </div>\r\n                    {optionSidebar.map((item, index) => {\r\n                        switch (item.type) {\r\n                            case 'link':\r\n                                return (\r\n                                    <div\r\n                                        onClick={() => {\r\n                                            setTab(item.key)\r\n                                            dispatch(toggleSearchResult(false))\r\n                                        }}\r\n                                        key={index}\r\n                                        className={`option-sidebar tab mb-7 flex items-center justify-center select-none ${\r\n                                            tab.includes(item.key)\r\n                                                ? 'active'\r\n                                                : ''\r\n                                        }`}\r\n                                        title={item.title}\r\n                                    >\r\n                                        <Link to={item.link}>\r\n                                            <span className=\"p-2 flex option-icon dark:text-gray-100\">\r\n                                                {item.icon}\r\n                                            </span>\r\n                                        </Link>\r\n                                        {item.key === 'notify' &&\r\n                                            notify.notifyList.filter(\r\n                                                element =>\r\n                                                    element.status ===\r\n                                                        STATUS_NOTIFY.sent ||\r\n                                                    !element.status\r\n                                            ).length > 0 && (\r\n                                                <DotNotify\r\n                                                    count={\r\n                                                        notify.notifyList.length\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                        {item.key === 'chat' &&\r\n                                            notify.newMessageNotify.length >\r\n                                                0 && (\r\n                                                <DotNotify\r\n                                                    count={\r\n                                                        notify.newMessageNotify\r\n                                                            .length\r\n                                                    }\r\n                                                />\r\n                                            )}\r\n                                    </div>\r\n                                )\r\n                            default:\r\n                                return ''\r\n                        }\r\n                    })}\r\n                    <div\r\n                        className=\"tab option-sidebar mb-7 flex items-center justify-center select-none\"\r\n                        title=\"Tối/Sáng\"\r\n                    >\r\n                        <span\r\n                            className=\"p-2 flex option-icon dark:text-gray-100\"\r\n                            onClick={handleChangeTheme}\r\n                        >\r\n                            {theme.colorTheme === 'light' ? (\r\n                                <ion-icon name=\"moon-outline\"></ion-icon>\r\n                            ) : (\r\n                                <ion-icon name=\"sunny-outline\"></ion-icon>\r\n                            )}\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div\r\n                        onClick={() => {\r\n                            setTab('profile')\r\n                            dispatch(toggleSearchResult(false))\r\n                        }}\r\n                        className=\"option-sidebar  tab mb-7 flex items-center justify-center select-none\"\r\n                        title=\"Avatar\"\r\n                    >\r\n                        <span className=\"p-2 flex\">\r\n                            <Avatar\r\n                                isNoDot={true}\r\n                                className=\"rounded-full w-7 h-7\"\r\n                                user={user}\r\n                                alt=\"Avatar\"\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </SimpleBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Sidebar)\r\n","import parse from 'html-react-parser'\r\nimport { memo, useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { toast } from 'react-toastify'\r\nimport {\r\n    NAME_NEW_MESSAGE_INDEXEDDB,\r\n    STATUS_RESPONSE,\r\n    STORE_NAME_INDEXEDDB,\r\n    STORE_NEW_MESSAGE_INDEXEDDB,\r\n} from '../../constant'\r\nimport { clear, del, get, getAll, set } from '../../indexDB'\r\nimport { getFriendList, removeFriendId } from '../../redux/slice/authSlice'\r\nimport {\r\n    deleteConversation,\r\n    getConversation,\r\n    removeLastMessage,\r\n    replaceConversation,\r\n    sortConsersation,\r\n    updateLastestMessage,\r\n    updateLoadingStatus,\r\n} from '../../redux/slice/conversationSlice'\r\nimport { changeCurrentChat } from '../../redux/slice/currentChatSlice'\r\nimport { getListFriend, removeFriend } from '../../redux/slice/friendsSlice'\r\nimport { pushMessage, removeAllMessage } from '../../redux/slice/messageSlice'\r\nimport { addNewMessageNotify, pushNotify } from '../../redux/slice/notifySlice'\r\nimport { setOnline } from '../../redux/slice/onlineSlice'\r\nimport { updateToggleMess } from '../../redux/slice/viewMessageSlice'\r\nimport { socket } from '../../socket'\r\nimport { getLastMessage } from '../../ulti'\r\nimport createAxios from '../../ulti/createInstance'\r\nimport Dialog from '../Dialog'\r\nimport Loading from '../Loading'\r\nimport ChatTab from './ChatTab'\r\nimport ChatView from './ChatView'\r\nimport ChatWelcome from './ChatWelcome'\r\nimport ContactTab from './ContactTab'\r\nimport GroupTab from './GroupTab'\r\nimport DialogCreateGroup from './GroupTab/DialogCreateGroup'\r\nimport NotifyTab from './NotifyTab'\r\nimport ProfileTab from './ProfileTab'\r\nimport SettingTab from './SettingTab'\r\nimport Sidebar from './Sidebar'\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch()\r\n    const axios = createAxios()\r\n    const [tab, setTab] = useState('chat')\r\n    const createGroupDialog = useSelector((state) => state.createGroupDialog)\r\n    const { toggleMess } = useSelector((state) => state.viewMessage)\r\n    const { user } = useSelector((state) => state.auth.currentUser)\r\n    const { conversation } = useSelector((state) => state.currentChat)\r\n    const { isLoading } = useSelector((state) => state.conversation)\r\n\r\n    // Listen event new message from server\r\n    useEffect(() => {\r\n        socket.emit('joinApp', {\r\n            userId: user._id,\r\n        })\r\n        socket.on('message', async (data) => {\r\n            if (\r\n                data?.type === 'imageGroup' ||\r\n                data?.type === 'file' ||\r\n                data?.type === 'link'\r\n            ) {\r\n                console.log(data)\r\n                socket.emit('getConversation', {\r\n                    conversationId: data.conversationId,\r\n                    userId: user._id,\r\n                })\r\n            }\r\n\r\n            try {\r\n                await set(\r\n                    data._id,\r\n                    data,\r\n                    data.conversationId,\r\n                    STORE_NAME_INDEXEDDB\r\n                )\r\n                get(\r\n                    data.conversationId,\r\n                    NAME_NEW_MESSAGE_INDEXEDDB,\r\n                    STORE_NEW_MESSAGE_INDEXEDDB\r\n                ).then(async (message) => {\r\n                    if (message)\r\n                        return set(\r\n                            data.conversationId,\r\n                            {\r\n                                ...message,\r\n                                lastMessage: {\r\n                                    text: getLastMessage(data.type, data.text),\r\n                                    type: data.type || 'text',\r\n                                },\r\n                                createdAt: data.createdAt,\r\n                                updatedAt: data.updatedAt,\r\n                                senderId: data.senderId,\r\n                            },\r\n                            NAME_NEW_MESSAGE_INDEXEDDB,\r\n                            STORE_NEW_MESSAGE_INDEXEDDB\r\n                        )\r\n                    else {\r\n                        await clear(\r\n                            NAME_NEW_MESSAGE_INDEXEDDB,\r\n                            STORE_NEW_MESSAGE_INDEXEDDB\r\n                        )\r\n                        getConversations()\r\n                    }\r\n                })\r\n                dispatch(updateLastestMessage(data))\r\n                if (conversation._id === data.conversationId) {\r\n                    dispatch(pushMessage(data))\r\n                    dispatch(sortConsersation())\r\n                }\r\n\r\n                if (\r\n                    user._id !== data?.senderId &&\r\n                    conversation._id !== data.conversationId\r\n                ) {\r\n                    dispatch(addNewMessageNotify(data.conversationId))\r\n                    dispatch(sortConsersation())\r\n                }\r\n            } catch (error) {\r\n                toast.error('Gửi tin nhắn thất bại')\r\n            }\r\n        })\r\n        return () => socket.removeListener('message')\r\n    }, [conversation])\r\n\r\n    const getConversations = async () => {\r\n        try {\r\n            await clear(NAME_NEW_MESSAGE_INDEXEDDB, STORE_NEW_MESSAGE_INDEXEDDB)\r\n            const res = await axios.get(`/conversation/${user._id}`)\r\n            res.data?.forEach(async (conversation) => {\r\n                if (conversation)\r\n                    return await set(\r\n                        conversation?._id,\r\n                        conversation,\r\n                        NAME_NEW_MESSAGE_INDEXEDDB,\r\n                        STORE_NEW_MESSAGE_INDEXEDDB\r\n                    )\r\n            })\r\n            dispatch(getConversation(res?.data))\r\n        } catch (err) {\r\n            toast.error('Lấy dữ liệu thất bại')\r\n            console.log(err)\r\n        } finally {\r\n            dispatch(updateLoadingStatus(false))\r\n        }\r\n    }\r\n\r\n    // Get conversation from IndexedDB/Server\r\n    useEffect(() => {\r\n        socket.emit('getUserOnline', {\r\n            userId: user._id,\r\n        })\r\n        getConversations()\r\n    }, [])\r\n\r\n    // Listen event receive notify from server\r\n    useEffect(() => {\r\n        socket.on('receiveNotify', (data) => {\r\n            if (data) {\r\n                toast(parse(data.content), {\r\n                    icon: ({ theme, type }) => (\r\n                        <img\r\n                            src=\"https://random.imagecdn.app/200/200\"\r\n                            className=\"h-full w-full rounded-full\"\r\n                            alt=\"\"\r\n                        />\r\n                    ),\r\n                })\r\n\r\n                dispatch(pushNotify(data))\r\n            }\r\n        })\r\n\r\n        return () => socket.removeListener('receiveNotify')\r\n    }, [])\r\n\r\n    // Get notify from DB\r\n    useEffect(() => {\r\n        socket.emit('getNotify', { userId: user._id }, (response) => {\r\n            if (response?.data) {\r\n                dispatch(pushNotify(response?.data))\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    // Listen event accept friend\r\n    useEffect(() => {\r\n        socket.on('acceptFriend', (res) => {\r\n            if (res?.status === STATUS_RESPONSE.success) {\r\n                socket.emit('joinApp', {\r\n                    userId: user._id,\r\n                })\r\n                dispatch(getListFriend())\r\n                socket.emit(\r\n                    'handleUser',\r\n                    {\r\n                        type: 'GET_FRIEND_LIST',\r\n                        userId: user._id,\r\n                    },\r\n                    (response) => {\r\n                        if (response.status === STATUS_RESPONSE.success) {\r\n                            dispatch(getFriendList(response.data))\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n        })\r\n\r\n        socket.emit(\r\n            'handleUser',\r\n            {\r\n                type: 'GET_FRIEND_LIST',\r\n                userId: user._id,\r\n            },\r\n            (response) => {\r\n                if (response.status === STATUS_RESPONSE.success) {\r\n                    dispatch(getFriendList(response.data))\r\n                }\r\n            }\r\n        )\r\n    }, [])\r\n\r\n    // Get UNREAD message\r\n    useEffect(() => {\r\n        socket.emit('getUnreadMessage', { userId: user._id }, (response) => {\r\n            let conversationUnread = response?.messageUnread.map(\r\n                (item) => item.conversationId\r\n            )\r\n            conversationUnread = [...new Set(conversationUnread)]\r\n\r\n            dispatch(addNewMessageNotify(conversationUnread))\r\n        })\r\n    }, [])\r\n\r\n    // Get list friend\r\n    useEffect(() => {\r\n        dispatch(getListFriend())\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('joinNewGroup', (group) => {\r\n            socket.emit('joinGroup', group)\r\n            dispatch(getConversation(group))\r\n        })\r\n\r\n        socket.emit('getOnline')\r\n        socket.on('responseGetOnline', (response) => {\r\n            dispatch(setOnline(response))\r\n        })\r\n\r\n        socket.on('deleteHistoryConversation', async (response) => {\r\n            await clear(response.conversation._id, STORE_NAME_INDEXEDDB)\r\n            dispatch(\r\n                removeLastMessage({ conversationId: response.conversation._id })\r\n            )\r\n            await set(\r\n                response.conversation._id,\r\n                response.conversation,\r\n                NAME_NEW_MESSAGE_INDEXEDDB,\r\n                STORE_NEW_MESSAGE_INDEXEDDB\r\n            )\r\n\r\n            if (conversation._id === response.conversation._id) {\r\n                dispatch(updateToggleMess({ toggleMess: null }))\r\n                dispatch(changeCurrentChat({}))\r\n                dispatch(removeAllMessage())\r\n            }\r\n        })\r\n\r\n        socket.on('deleteFriend', (result) => {\r\n            dispatch(removeFriendId(result.friendId))\r\n            dispatch(removeFriend(result.friendId))\r\n        })\r\n\r\n        socket.on('error', (err) => console.log(err))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        socket.on('getConversation', async (response) => {\r\n            dispatch(replaceConversation(response))\r\n            await set(\r\n                response._id,\r\n                response,\r\n                NAME_NEW_MESSAGE_INDEXEDDB,\r\n                STORE_NEW_MESSAGE_INDEXEDDB\r\n            )\r\n\r\n            if (conversation._id === response._id) {\r\n                dispatch(changeCurrentChat(response))\r\n            }\r\n        })\r\n\r\n        socket.on('outGroup', async (result) => {\r\n            console.log(result)\r\n            await clear(result._id, STORE_NAME_INDEXEDDB)\r\n            await del(\r\n                result._id,\r\n                NAME_NEW_MESSAGE_INDEXEDDB,\r\n                STORE_NEW_MESSAGE_INDEXEDDB\r\n            )\r\n            dispatch(deleteConversation(result))\r\n\r\n            if (conversation._id === result._id) {\r\n                dispatch(updateToggleMess({ toggleMess: null }))\r\n                dispatch(changeCurrentChat({}))\r\n                dispatch(removeAllMessage())\r\n            }\r\n        })\r\n\r\n        return () => {\r\n            socket.removeListener('getConversation')\r\n            socket.removeListener('outGroup')\r\n        }\r\n    }, [conversation])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"flex h-full flex-col lg:flex-row\">\r\n                <Sidebar tab={tab} setTab={setTab} />\r\n                {{\r\n                    chat: <ChatTab />,\r\n                    group: <GroupTab />,\r\n                    profile: <ProfileTab />,\r\n                    contact: <ContactTab />,\r\n                    setting: <SettingTab />,\r\n                    notify: <NotifyTab />,\r\n                }[tab] || null}\r\n                {toggleMess ? <ChatView /> : <ChatWelcome />}\r\n            </div>\r\n\r\n            {createGroupDialog.isShow && <DialogCreateGroup />}\r\n\r\n            <Dialog\r\n                isOpen={isLoading}\r\n                portalClassName=\"modal-loading\"\r\n                className=\"modal-loading-content\"\r\n            >\r\n                <Loading />\r\n            </Dialog>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default memo(Home)\r\n"],"sourceRoot":""}